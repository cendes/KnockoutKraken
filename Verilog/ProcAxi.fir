;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.12.4, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:43:20.285, builtAtMillis: 1562607800285
circuit ProcAxiWrap : 
  module AxiMemoryMappedRegFile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {axiLite : {flip awaddr : UInt<4>, flip awprot : UInt<3>, flip awvalid : UInt<1>, awready : UInt<1>, flip wdata : UInt<32>, flip wstrb : UInt<4>, flip wvalid : UInt<1>, wready : UInt<1>, bresp : UInt<2>, bvalid : UInt<1>, flip bready : UInt<1>, flip araddr : UInt<4>, flip arprot : UInt<3>, flip arvalid : UInt<1>, arready : UInt<1>, rdata : UInt<32>, rresp : UInt<2>, rvalid : UInt<1>, flip rready : UInt<1>}, flip regsInput : UInt<32>[4], regsOutput : UInt<32>[4]}
    
    wire _T_90 : UInt<32>[4] @[AxiMMRegs.scala 30:32]
    _T_90[0] <= UInt<32>("h00") @[AxiMMRegs.scala 30:32]
    _T_90[1] <= UInt<32>("h00") @[AxiMMRegs.scala 30:32]
    _T_90[2] <= UInt<32>("h00") @[AxiMMRegs.scala 30:32]
    _T_90[3] <= UInt<32>("h00") @[AxiMMRegs.scala 30:32]
    reg regFile : UInt<32>[4], clock with : (reset => (reset, _T_90)) @[AxiMMRegs.scala 30:24]
    wire regsOutput : UInt<32>[4] @[AxiMMRegs.scala 31:27]
    regsOutput[0] <= UInt<32>("h00") @[AxiMMRegs.scala 31:27]
    regsOutput[1] <= UInt<32>("h00") @[AxiMMRegs.scala 31:27]
    regsOutput[2] <= UInt<32>("h00") @[AxiMMRegs.scala 31:27]
    regsOutput[3] <= UInt<32>("h00") @[AxiMMRegs.scala 31:27]
    node axiLite_awaddr = dshr(io.axiLite.awaddr, UInt<2>("h02")) @[AxiMMRegs.scala 33:42]
    node axiLite_araddr = dshr(io.axiLite.araddr, UInt<2>("h02")) @[AxiMMRegs.scala 34:42]
    io.axiLite.awready <= UInt<1>("h01") @[AxiMMRegs.scala 37:22]
    io.axiLite.wready <= UInt<1>("h01") @[AxiMMRegs.scala 38:21]
    wire byteVecReg : UInt<8>[4] @[AxiMMRegs.scala 41:24]
    wire byteVecIn : UInt<8>[4] @[AxiMMRegs.scala 42:24]
    wire byteVecOut : UInt<8>[4] @[AxiMMRegs.scala 43:24]
    node _T_172 = bits(axiLite_awaddr, 1, 0)
    node _T_173 = bits(regFile[_T_172], 7, 0) @[AxiMMRegs.scala 40:43]
    byteVecReg[0] <= _T_173 @[AxiMMRegs.scala 45:19]
    node _T_174 = bits(io.axiLite.wdata, 7, 0) @[AxiMMRegs.scala 40:43]
    byteVecIn[0] <= _T_174 @[AxiMMRegs.scala 46:18]
    node _T_175 = bits(io.axiLite.wstrb, 0, 0) @[AxiMMRegs.scala 47:42]
    node _T_176 = mux(_T_175, byteVecIn[0], byteVecReg[0]) @[AxiMMRegs.scala 47:25]
    byteVecOut[0] <= _T_176 @[AxiMMRegs.scala 47:19]
    node _T_180 = bits(axiLite_awaddr, 1, 0)
    node _T_181 = bits(regFile[_T_180], 15, 8) @[AxiMMRegs.scala 40:43]
    byteVecReg[1] <= _T_181 @[AxiMMRegs.scala 45:19]
    node _T_182 = bits(io.axiLite.wdata, 15, 8) @[AxiMMRegs.scala 40:43]
    byteVecIn[1] <= _T_182 @[AxiMMRegs.scala 46:18]
    node _T_183 = bits(io.axiLite.wstrb, 1, 1) @[AxiMMRegs.scala 47:42]
    node _T_184 = mux(_T_183, byteVecIn[1], byteVecReg[1]) @[AxiMMRegs.scala 47:25]
    byteVecOut[1] <= _T_184 @[AxiMMRegs.scala 47:19]
    node _T_188 = bits(axiLite_awaddr, 1, 0)
    node _T_189 = bits(regFile[_T_188], 23, 16) @[AxiMMRegs.scala 40:43]
    byteVecReg[2] <= _T_189 @[AxiMMRegs.scala 45:19]
    node _T_190 = bits(io.axiLite.wdata, 23, 16) @[AxiMMRegs.scala 40:43]
    byteVecIn[2] <= _T_190 @[AxiMMRegs.scala 46:18]
    node _T_191 = bits(io.axiLite.wstrb, 2, 2) @[AxiMMRegs.scala 47:42]
    node _T_192 = mux(_T_191, byteVecIn[2], byteVecReg[2]) @[AxiMMRegs.scala 47:25]
    byteVecOut[2] <= _T_192 @[AxiMMRegs.scala 47:19]
    node _T_196 = bits(axiLite_awaddr, 1, 0)
    node _T_197 = bits(regFile[_T_196], 31, 24) @[AxiMMRegs.scala 40:43]
    byteVecReg[3] <= _T_197 @[AxiMMRegs.scala 45:19]
    node _T_198 = bits(io.axiLite.wdata, 31, 24) @[AxiMMRegs.scala 40:43]
    byteVecIn[3] <= _T_198 @[AxiMMRegs.scala 46:18]
    node _T_199 = bits(io.axiLite.wstrb, 3, 3) @[AxiMMRegs.scala 47:42]
    node _T_200 = mux(_T_199, byteVecIn[3], byteVecReg[3]) @[AxiMMRegs.scala 47:25]
    byteVecOut[3] <= _T_200 @[AxiMMRegs.scala 47:19]
    node _T_201 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 50:27]
    when _T_201 : @[AxiMMRegs.scala 50:49]
      node _T_205 = bits(axiLite_awaddr, 1, 0)
      node _T_206 = cat(byteVecOut[1], byteVecOut[0]) @[AxiMMRegs.scala 51:42]
      node _T_207 = cat(byteVecOut[3], byteVecOut[2]) @[AxiMMRegs.scala 51:42]
      node _T_208 = cat(_T_207, _T_206) @[AxiMMRegs.scala 51:42]
      regFile[_T_205] <= _T_208 @[AxiMMRegs.scala 51:28]
      skip @[AxiMMRegs.scala 50:49]
    node _T_210 = eq(io.axiLite.awvalid, UInt<1>("h00")) @[AxiMMRegs.scala 53:57]
    node _T_211 = and(io.axiLite.wvalid, _T_210) @[AxiMMRegs.scala 53:54]
    node _T_212 = mux(_T_211, UInt<2>("h02"), UInt<2>("h00")) @[AxiMMRegs.scala 53:34]
    reg _T_214 : UInt, clock @[AxiMMRegs.scala 53:30]
    _T_214 <= _T_212 @[AxiMMRegs.scala 53:30]
    io.axiLite.bresp <= _T_214 @[AxiMMRegs.scala 53:20]
    node _T_215 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 54:51]
    reg _T_217 : UInt<1>, clock @[AxiMMRegs.scala 54:31]
    _T_217 <= _T_215 @[AxiMMRegs.scala 54:31]
    io.axiLite.bvalid <= _T_217 @[AxiMMRegs.scala 54:21]
    node _T_218 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 57:38]
    node _T_220 = eq(axiLite_awaddr, UInt<1>("h00")) @[AxiMMRegs.scala 57:77]
    node _T_221 = and(_T_218, _T_220) @[AxiMMRegs.scala 57:59]
    node _T_223 = mux(_T_221, io.axiLite.wdata, UInt<1>("h00")) @[AxiMMRegs.scala 60:35]
    reg _T_225 : UInt, clock @[AxiMMRegs.scala 60:31]
    _T_225 <= _T_223 @[AxiMMRegs.scala 60:31]
    regsOutput[0] <= _T_225 @[AxiMMRegs.scala 60:21]
    node _T_226 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 57:38]
    node _T_228 = eq(axiLite_awaddr, UInt<1>("h01")) @[AxiMMRegs.scala 57:77]
    node _T_229 = and(_T_226, _T_228) @[AxiMMRegs.scala 57:59]
    regsOutput[1] <= io.regsInput[1] @[AxiMMRegs.scala 64:21]
    when _T_229 : @[AxiMMRegs.scala 65:21]
      reg _T_231 : UInt, clock @[AxiMMRegs.scala 65:50]
      _T_231 <= UInt<2>("h02") @[AxiMMRegs.scala 65:50]
      io.axiLite.bresp <= _T_231 @[AxiMMRegs.scala 65:40]
      skip @[AxiMMRegs.scala 65:21]
    node _T_232 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 57:38]
    node _T_234 = eq(axiLite_awaddr, UInt<2>("h02")) @[AxiMMRegs.scala 57:77]
    node _T_235 = and(_T_232, _T_234) @[AxiMMRegs.scala 57:59]
    regsOutput[2] <= regFile[2] @[AxiMMRegs.scala 69:21]
    node _T_236 = and(io.axiLite.awvalid, io.axiLite.wvalid) @[AxiMMRegs.scala 57:38]
    node _T_238 = eq(axiLite_awaddr, UInt<2>("h03")) @[AxiMMRegs.scala 57:77]
    node _T_239 = and(_T_236, _T_238) @[AxiMMRegs.scala 57:59]
    regsOutput[3] <= regFile[3] @[AxiMMRegs.scala 69:21]
    io.axiLite.arready <= UInt<1>("h01") @[AxiMMRegs.scala 75:22]
    reg _T_242 : UInt, clock @[AxiMMRegs.scala 76:41]
    _T_242 <= axiLite_araddr @[AxiMMRegs.scala 76:41]
    node _T_245 = or(_T_242, UInt<2>("h00"))
    node _T_246 = bits(_T_245, 1, 0)
    io.axiLite.rdata <= regsOutput[_T_246] @[AxiMMRegs.scala 76:20]
    node _T_247 = and(io.axiLite.arvalid, io.axiLite.rready) @[AxiMMRegs.scala 77:51]
    reg _T_249 : UInt<1>, clock @[AxiMMRegs.scala 77:31]
    _T_249 <= _T_247 @[AxiMMRegs.scala 77:31]
    io.axiLite.rvalid <= _T_249 @[AxiMMRegs.scala 77:21]
    reg _T_251 : UInt, clock @[AxiMMRegs.scala 78:30]
    _T_251 <= UInt<2>("h00") @[AxiMMRegs.scala 78:30]
    io.axiLite.rresp <= _T_251 @[AxiMMRegs.scala 78:20]
    io.regsOutput[0] <= regsOutput[0] @[AxiMMRegs.scala 80:17]
    io.regsOutput[1] <= regsOutput[1] @[AxiMMRegs.scala 80:17]
    io.regsOutput[2] <= regsOutput[2] @[AxiMMRegs.scala 80:17]
    io.regsOutput[3] <= regsOutput[3] @[AxiMMRegs.scala 80:17]
    
  extmodule BlackBoxBRAMTDP : 
    output doB : UInt<36>
    output doA : UInt<36>
    input diB : UInt<36>
    input diA : UInt<36>
    input addrB : UInt<10>
    input addrA : UInt<10>
    input weB : UInt<1>
    input weA : UInt<1>
    input enB : UInt<1>
    input enA : UInt<1>
    input clk : Clock
    
    defname = BlackBoxBRAMTDP
    parameter SIZE_B = 1024
    parameter ADDR_WIDTH_A = 10
    parameter DATA_WIDTH_A = 36
    parameter DATA_WIDTH_B = 36
    parameter SIZE_A = 1024
    parameter ADDR_WIDTH_B = 10
    
  module BRAMTDP : 
    input clock : Clock
    input reset : UInt<1>
    output io : {portA : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}, portB : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}}
    
    inst blackBoxBRAMTDP of BlackBoxBRAMTDP @[bram.scala 187:31]
    blackBoxBRAMTDP.doB is invalid
    blackBoxBRAMTDP.doA is invalid
    blackBoxBRAMTDP.diB is invalid
    blackBoxBRAMTDP.diA is invalid
    blackBoxBRAMTDP.addrB is invalid
    blackBoxBRAMTDP.addrA is invalid
    blackBoxBRAMTDP.weB is invalid
    blackBoxBRAMTDP.weA is invalid
    blackBoxBRAMTDP.enB is invalid
    blackBoxBRAMTDP.enA is invalid
    blackBoxBRAMTDP.clk is invalid
    blackBoxBRAMTDP.clk <= clock @[bram.scala 188:26]
    blackBoxBRAMTDP.weA <= io.portA.writeEn @[bram.scala 191:28]
    blackBoxBRAMTDP.enA <= io.portA.en @[bram.scala 192:28]
    blackBoxBRAMTDP.addrA <= io.portA.addr @[bram.scala 193:28]
    blackBoxBRAMTDP.diA <= io.portA.dataIn @[bram.scala 194:28]
    io.portA.dataOut <= blackBoxBRAMTDP.doA @[bram.scala 195:28]
    blackBoxBRAMTDP.weB <= io.portB.writeEn @[bram.scala 198:28]
    blackBoxBRAMTDP.enB <= io.portB.en @[bram.scala 199:28]
    blackBoxBRAMTDP.addrB <= io.portB.addr @[bram.scala 200:28]
    blackBoxBRAMTDP.diB <= io.portB.dataIn @[bram.scala 201:28]
    io.portB.dataOut <= blackBoxBRAMTDP.doB @[bram.scala 202:28]
    
  module BRAM : 
    input clock : Clock
    input reset : UInt<1>
    output io : {portA : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}, portB : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}}
    
    inst bram of BRAMTDP @[bram.scala 169:20]
    bram.clock <= clock
    bram.reset <= reset
    io.portB.dataOut <= bram.io.portB.dataOut @[bram.scala 176:6]
    bram.io.portB.dataIn <= io.portB.dataIn @[bram.scala 176:6]
    bram.io.portB.addr <= io.portB.addr @[bram.scala 176:6]
    bram.io.portB.en <= io.portB.en @[bram.scala 176:6]
    bram.io.portB.writeEn <= io.portB.writeEn @[bram.scala 176:6]
    io.portA.dataOut <= bram.io.portA.dataOut @[bram.scala 176:6]
    bram.io.portA.dataIn <= io.portA.dataIn @[bram.scala 176:6]
    bram.io.portA.addr <= io.portA.addr @[bram.scala 176:6]
    bram.io.portA.en <= io.portA.en @[bram.scala 176:6]
    bram.io.portA.writeEn <= io.portA.writeEn @[bram.scala 176:6]
    
  extmodule BlackBoxBRAMTDP_1 : 
    output doB : UInt<36>
    output doA : UInt<36>
    input diB : UInt<36>
    input diA : UInt<36>
    input addrB : UInt<10>
    input addrA : UInt<10>
    input weB : UInt<1>
    input weA : UInt<1>
    input enB : UInt<1>
    input enA : UInt<1>
    input clk : Clock
    
    defname = BlackBoxBRAMTDP
    parameter SIZE_B = 1024
    parameter ADDR_WIDTH_A = 10
    parameter DATA_WIDTH_A = 36
    parameter DATA_WIDTH_B = 36
    parameter SIZE_A = 1024
    parameter ADDR_WIDTH_B = 10
    
  module BRAMTDP_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {portA : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}, portB : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}}
    
    inst blackBoxBRAMTDP of BlackBoxBRAMTDP_1 @[bram.scala 187:31]
    blackBoxBRAMTDP.doB is invalid
    blackBoxBRAMTDP.doA is invalid
    blackBoxBRAMTDP.diB is invalid
    blackBoxBRAMTDP.diA is invalid
    blackBoxBRAMTDP.addrB is invalid
    blackBoxBRAMTDP.addrA is invalid
    blackBoxBRAMTDP.weB is invalid
    blackBoxBRAMTDP.weA is invalid
    blackBoxBRAMTDP.enB is invalid
    blackBoxBRAMTDP.enA is invalid
    blackBoxBRAMTDP.clk is invalid
    blackBoxBRAMTDP.clk <= clock @[bram.scala 188:26]
    blackBoxBRAMTDP.weA <= io.portA.writeEn @[bram.scala 191:28]
    blackBoxBRAMTDP.enA <= io.portA.en @[bram.scala 192:28]
    blackBoxBRAMTDP.addrA <= io.portA.addr @[bram.scala 193:28]
    blackBoxBRAMTDP.diA <= io.portA.dataIn @[bram.scala 194:28]
    io.portA.dataOut <= blackBoxBRAMTDP.doA @[bram.scala 195:28]
    blackBoxBRAMTDP.weB <= io.portB.writeEn @[bram.scala 198:28]
    blackBoxBRAMTDP.enB <= io.portB.en @[bram.scala 199:28]
    blackBoxBRAMTDP.addrB <= io.portB.addr @[bram.scala 200:28]
    blackBoxBRAMTDP.diB <= io.portB.dataIn @[bram.scala 201:28]
    io.portB.dataOut <= blackBoxBRAMTDP.doB @[bram.scala 202:28]
    
  module BRAM_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {portA : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}, portB : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}}
    
    inst bram of BRAMTDP_1 @[bram.scala 169:20]
    bram.clock <= clock
    bram.reset <= reset
    io.portB.dataOut <= bram.io.portB.dataOut @[bram.scala 176:6]
    bram.io.portB.dataIn <= io.portB.dataIn @[bram.scala 176:6]
    bram.io.portB.addr <= io.portB.addr @[bram.scala 176:6]
    bram.io.portB.en <= io.portB.en @[bram.scala 176:6]
    bram.io.portB.writeEn <= io.portB.writeEn @[bram.scala 176:6]
    io.portA.dataOut <= bram.io.portA.dataOut @[bram.scala 176:6]
    bram.io.portA.dataIn <= io.portA.dataIn @[bram.scala 176:6]
    bram.io.portA.addr <= io.portA.addr @[bram.scala 176:6]
    bram.io.portA.en <= io.portA.en @[bram.scala 176:6]
    bram.io.portA.writeEn <= io.portA.writeEn @[bram.scala 176:6]
    
  module TransplantUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {host2tpu : {flip fire : UInt<1>, flip fireTag : UInt<1>, done : UInt<1>, doneTag : UInt<1>}, tpu2cpu : {flush : UInt<1>, freeze : UInt<1>, fire : UInt<1>, flip done : UInt<1>, flushTag : UInt<1>, fireTag : UInt<1>, freezeTag : UInt<1>, flip doneTag : UInt<1>}, tpu2cpuStateReg : {valid : UInt<1>, bits : UInt<2>}, tpu2cpuState : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>}, flip cpu2tpuState : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>}, flip rfile : {flip rs1_addr : UInt<5>, rs1_data : UInt<64>, flip rs2_addr : UInt<5>, rs2_data : UInt<64>, flip waddr : UInt<5>, flip wdata : UInt<64>, flip wen : UInt<1>}, flip stateBRAM : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}}
    
    reg bramOFFST : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[transplant.scala 83:26]
    node _T_103 = bits(io.stateBRAM.dataOut, 31, 0) @[transplant.scala 84:50]
    wire bramOut : UInt
    bramOut <= _T_103
    reg bramOut1CD : UInt, clock @[transplant.scala 86:27]
    bramOut1CD <= bramOut @[transplant.scala 86:27]
    node _T_106 = cat(bramOut1CD, bramOut) @[Cat.scala 30:58]
    wire bramOut64b : UInt
    bramOut64b <= _T_106
    node regDataInMSB = bits(io.rfile.rs1_data, 63, 32) @[transplant.scala 91:31]
    node regDataInLSB = bits(io.rfile.rs1_data, 31, 0) @[transplant.scala 92:31]
    node regAddr = dshr(bramOFFST, UInt<1>("h01")) @[transplant.scala 95:27]
    io.rfile.rs1_addr <= regAddr @[transplant.scala 96:21]
    io.rfile.rs2_addr <= UInt<1>("h00") @[transplant.scala 97:21]
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[transplant.scala 101:22]
    reg stateDir : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[transplant.scala 102:25]
    reg stateRegType : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[transplant.scala 103:29]
    reg freeze : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[transplant.scala 106:23]
    reg freezeTag : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[transplant.scala 107:26]
    wire flushSig : UInt<1>
    flushSig <= UInt<1>("h00")
    reg flushReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[transplant.scala 110:25]
    wire fireSig : UInt<1>
    fireSig <= UInt<1>("h00")
    wire doneSig : UInt<1>
    doneSig <= UInt<1>("h00")
    node _T_124 = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T_124 : @[Conditional.scala 40:58]
      when io.host2tpu.fire : @[transplant.scala 126:30]
        freeze <= UInt<1>("h01") @[transplant.scala 127:16]
        freezeTag <= io.host2tpu.fireTag @[transplant.scala 128:19]
        stateDir <= UInt<1>("h00") @[transplant.scala 129:18]
        stateRegType <= UInt<2>("h01") @[transplant.scala 130:22]
        bramOFFST <= UInt<1>("h00") @[transplant.scala 131:19]
        state <= UInt<1>("h01") @[transplant.scala 133:15]
        skip @[transplant.scala 126:30]
      else : @[transplant.scala 134:35]
        when io.tpu2cpu.done : @[transplant.scala 134:35]
          freeze <= UInt<1>("h01") @[transplant.scala 135:16]
          freezeTag <= io.tpu2cpu.doneTag @[transplant.scala 136:19]
          stateDir <= UInt<1>("h01") @[transplant.scala 137:18]
          stateRegType <= UInt<2>("h01") @[transplant.scala 138:22]
          bramOFFST <= UInt<1>("h00") @[transplant.scala 139:19]
          flushSig <= UInt<1>("h01") @[transplant.scala 140:18]
          state <= UInt<1>("h01") @[transplant.scala 142:15]
          skip @[transplant.scala 134:35]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_130 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_130 : @[Conditional.scala 39:67]
        node _T_132 = add(bramOFFST, UInt<1>("h01")) @[transplant.scala 147:30]
        node _T_133 = tail(_T_132, 1) @[transplant.scala 147:30]
        bramOFFST <= _T_133 @[transplant.scala 147:17]
        node _T_135 = eq(bramOFFST, UInt<6>("h03f")) @[transplant.scala 148:22]
        when _T_135 : @[transplant.scala 148:49]
          stateRegType <= UInt<2>("h02") @[transplant.scala 149:22]
          skip @[transplant.scala 148:49]
        else : @[transplant.scala 150:60]
          node _T_137 = eq(bramOFFST, UInt<7>("h041")) @[transplant.scala 150:29]
          when _T_137 : @[transplant.scala 150:60]
            stateRegType <= UInt<2>("h03") @[transplant.scala 151:22]
            skip @[transplant.scala 150:60]
          else : @[transplant.scala 152:58]
            node _T_139 = eq(bramOFFST, UInt<7>("h042")) @[transplant.scala 152:29]
            when _T_139 : @[transplant.scala 152:58]
              stateRegType <= UInt<2>("h00") @[transplant.scala 153:22]
              skip @[transplant.scala 152:58]
            else : @[transplant.scala 154:44]
              node _T_140 = eq(stateRegType, UInt<2>("h00")) @[transplant.scala 154:32]
              when _T_140 : @[transplant.scala 154:44]
                node _T_141 = eq(stateDir, UInt<1>("h00")) @[transplant.scala 155:23]
                when _T_141 : @[transplant.scala 155:39]
                  fireSig <= UInt<1>("h01") @[transplant.scala 156:19]
                  skip @[transplant.scala 155:39]
                else : @[transplant.scala 157:45]
                  node _T_143 = eq(stateDir, UInt<1>("h01")) @[transplant.scala 157:29]
                  when _T_143 : @[transplant.scala 157:45]
                    doneSig <= UInt<1>("h01") @[transplant.scala 158:19]
                    skip @[transplant.scala 157:45]
                bramOFFST <= UInt<1>("h00") @[transplant.scala 117:15]
                stateRegType <= UInt<2>("h00") @[transplant.scala 118:18]
                freeze <= UInt<1>("h00") @[transplant.scala 119:12]
                state <= UInt<1>("h00") @[transplant.scala 121:11]
                skip @[transplant.scala 154:44]
        skip @[Conditional.scala 39:67]
    io.stateBRAM.en <= UInt<1>("h01") @[transplant.scala 165:19]
    node _T_148 = eq(stateDir, UInt<1>("h01")) @[transplant.scala 166:40]
    node _T_149 = neq(stateRegType, UInt<2>("h00")) @[transplant.scala 166:71]
    node _T_150 = and(_T_148, _T_149) @[transplant.scala 166:55]
    io.stateBRAM.writeEn <= _T_150 @[transplant.scala 166:28]
    io.stateBRAM.addr <= bramOFFST @[transplant.scala 167:21]
    node _T_151 = eq(stateRegType, UInt<2>("h01")) @[transplant.scala 168:21]
    when _T_151 : @[transplant.scala 168:34]
      node _T_152 = bits(bramOFFST, 0, 0) @[transplant.scala 169:45]
      node _T_153 = mux(_T_152, regDataInLSB, regDataInMSB) @[transplant.scala 169:35]
      io.stateBRAM.dataIn <= _T_153 @[transplant.scala 169:29]
      skip @[transplant.scala 168:34]
    else : @[transplant.scala 170:37]
      node _T_154 = eq(stateRegType, UInt<2>("h02")) @[transplant.scala 170:27]
      when _T_154 : @[transplant.scala 170:37]
        node _T_155 = bits(bramOFFST, 0, 0) @[transplant.scala 171:45]
        node _T_156 = bits(io.cpu2tpuState.PC, 31, 0) @[transplant.scala 171:68]
        node _T_157 = bits(io.cpu2tpuState.PC, 63, 32) @[transplant.scala 171:94]
        node _T_158 = mux(_T_155, _T_156, _T_157) @[transplant.scala 171:35]
        io.stateBRAM.dataIn <= _T_158 @[transplant.scala 171:29]
        skip @[transplant.scala 170:37]
      else : @[transplant.scala 172:45]
        node _T_159 = eq(stateRegType, UInt<2>("h03")) @[transplant.scala 172:27]
        when _T_159 : @[transplant.scala 172:45]
          node _T_161 = bits(io.cpu2tpuState.SP, 0, 0) @[transplant.scala 173:59]
          node _T_162 = bits(io.cpu2tpuState.EL, 0, 0) @[transplant.scala 173:82]
          node _T_163 = bits(io.cpu2tpuState.NZCV, 3, 0) @[transplant.scala 173:107]
          node _T_164 = cat(_T_162, _T_163) @[Cat.scala 30:58]
          node _T_165 = cat(UInt<1>("h00"), _T_161) @[Cat.scala 30:58]
          node _T_166 = cat(_T_165, _T_164) @[Cat.scala 30:58]
          io.stateBRAM.dataIn <= _T_166 @[transplant.scala 173:29]
          skip @[transplant.scala 172:45]
        else : @[transplant.scala 174:15]
          io.stateBRAM.dataIn <= UInt<1>("h00") @[transplant.scala 175:29]
          skip @[transplant.scala 174:15]
    node _T_168 = eq(stateDir, UInt<1>("h00")) @[transplant.scala 179:36]
    node _T_169 = eq(stateRegType, UInt<2>("h01")) @[transplant.scala 179:67]
    node _T_170 = and(_T_168, _T_169) @[transplant.scala 179:51]
    reg _T_172 : UInt<1>, clock @[transplant.scala 179:26]
    _T_172 <= _T_170 @[transplant.scala 179:26]
    io.rfile.wen <= _T_172 @[transplant.scala 179:16]
    reg _T_174 : UInt, clock @[transplant.scala 180:28]
    _T_174 <= regAddr @[transplant.scala 180:28]
    io.rfile.waddr <= _T_174 @[transplant.scala 180:18]
    io.rfile.wdata <= bramOut64b @[transplant.scala 181:18]
    io.tpu2cpuState.PC <= bramOut64b @[transplant.scala 183:22]
    node _T_175 = bits(bramOut, 5, 5) @[transplant.scala 209:44]
    io.tpu2cpuState.SP <= _T_175 @[transplant.scala 184:22]
    node _T_176 = bits(bramOut, 4, 4) @[transplant.scala 208:44]
    io.tpu2cpuState.EL <= _T_176 @[transplant.scala 185:22]
    node _T_177 = bits(bramOut, 3, 0) @[transplant.scala 207:46]
    io.tpu2cpuState.NZCV <= _T_177 @[transplant.scala 186:24]
    reg _T_179 : UInt, clock @[transplant.scala 188:37]
    _T_179 <= stateRegType @[transplant.scala 188:37]
    io.tpu2cpuStateReg.bits <= _T_179 @[transplant.scala 188:27]
    node _T_180 = eq(stateDir, UInt<1>("h00")) @[transplant.scala 189:48]
    reg _T_182 : UInt<1>, clock @[transplant.scala 189:38]
    _T_182 <= _T_180 @[transplant.scala 189:38]
    io.tpu2cpuStateReg.valid <= _T_182 @[transplant.scala 189:28]
    reg freezeTag1D : UInt, clock @[transplant.scala 192:28]
    freezeTag1D <= freezeTag @[transplant.scala 192:28]
    reg _T_185 : UInt<1>, clock @[transplant.scala 193:29]
    _T_185 <= fireSig @[transplant.scala 193:29]
    io.tpu2cpu.fire <= _T_185 @[transplant.scala 193:19]
    io.tpu2cpu.fireTag <= freezeTag1D @[transplant.scala 194:22]
    io.tpu2cpu.freeze <= freeze @[transplant.scala 195:21]
    io.tpu2cpu.freezeTag <= freezeTag @[transplant.scala 196:24]
    reg _T_187 : UInt<1>, clock @[transplant.scala 197:30]
    _T_187 <= flushSig @[transplant.scala 197:30]
    io.tpu2cpu.flush <= _T_187 @[transplant.scala 197:20]
    io.tpu2cpu.flushTag <= freezeTag1D @[transplant.scala 198:23]
    reg _T_189 : UInt<1>, clock @[transplant.scala 199:30]
    _T_189 <= doneSig @[transplant.scala 199:30]
    io.host2tpu.done <= _T_189 @[transplant.scala 199:20]
    io.host2tpu.doneTag <= freezeTag1D @[transplant.scala 200:23]
    
  module RFile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip rs1_addr : UInt<5>, rs1_data : UInt<64>, flip rs2_addr : UInt<5>, rs2_data : UInt<64>, flip waddr : UInt<5>, flip wdata : UInt<64>, flip wen : UInt<1>}
    
    cmem regfile : UInt<64>[32] @[pstate.scala 81:20]
    when io.wen : @[pstate.scala 84:3]
      infer mport _T_21 = regfile[io.waddr], clock @[pstate.scala 85:12]
      _T_21 <= io.wdata @[pstate.scala 85:23]
      skip @[pstate.scala 84:3]
    infer mport _T_22 = regfile[io.rs1_addr], clock @[pstate.scala 88:25]
    io.rs1_data <= _T_22 @[pstate.scala 88:15]
    infer mport _T_23 = regfile[io.rs2_addr], clock @[pstate.scala 89:25]
    io.rs2_data <= _T_23 @[pstate.scala 89:15]
    
  module RFile_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip rs1_addr : UInt<5>, rs1_data : UInt<64>, flip rs2_addr : UInt<5>, rs2_data : UInt<64>, flip waddr : UInt<5>, flip wdata : UInt<64>, flip wen : UInt<1>}
    
    cmem regfile : UInt<64>[32] @[pstate.scala 81:20]
    when io.wen : @[pstate.scala 84:3]
      infer mport _T_21 = regfile[io.waddr], clock @[pstate.scala 85:12]
      _T_21 <= io.wdata @[pstate.scala 85:23]
      skip @[pstate.scala 84:3]
    infer mport _T_22 = regfile[io.rs1_addr], clock @[pstate.scala 88:25]
    io.rs1_data <= _T_22 @[pstate.scala 88:15]
    infer mport _T_23 = regfile[io.rs2_addr], clock @[pstate.scala 89:25]
    io.rs2_data <= _T_23 @[pstate.scala 89:15]
    
  module TLBUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip vaddrFill : UInt<64>, flip fill : UInt<1>, flip vaddr : {valid : UInt<1>, bits : UInt<64>}, miss : UInt<1>, hit : UInt<1>, paddr : {valid : UInt<1>, bits : UInt<64>}}
    
    node vpage = shr(io.vaddr.bits, 10) @[TLB.scala 20:29]
    node vpageTLB = bits(vpage, 4, 0) @[TLB.scala 21:23]
    node vpageTAG = shr(vpage, 5) @[TLB.scala 22:24]
    node vpageFill = shr(io.vaddrFill, 10) @[TLB.scala 24:32]
    node vpageFillTLB = bits(vpageFill, 4, 0) @[TLB.scala 25:31]
    node vpageFillTAG = shr(vpageFill, 5) @[TLB.scala 26:32]
    wire dataInit : {valid : UInt<1>, bits : UInt<49>} @[TLB.scala 29:20]
    dataInit.valid <= UInt<1>("h00") @[TLB.scala 30:16]
    dataInit.bits <= UInt<64>("h00") @[TLB.scala 31:15]
    wire _T_71 : {valid : UInt<1>, bits : UInt<49>}[32] @[TLB.scala 35:28]
    _T_71[0].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[0].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[1].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[1].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[2].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[2].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[3].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[3].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[4].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[4].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[5].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[5].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[6].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[6].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[7].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[7].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[8].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[8].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[9].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[9].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[10].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[10].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[11].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[11].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[12].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[12].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[13].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[13].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[14].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[14].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[15].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[15].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[16].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[16].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[17].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[17].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[18].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[18].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[19].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[19].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[20].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[20].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[21].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[21].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[22].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[22].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[23].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[23].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[24].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[24].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[25].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[25].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[26].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[26].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[27].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[27].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[28].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[28].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[29].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[29].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[30].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[30].valid <= dataInit.valid @[TLB.scala 35:28]
    _T_71[31].bits <= dataInit.bits @[TLB.scala 35:28]
    _T_71[31].valid <= dataInit.valid @[TLB.scala 35:28]
    reg tlb : {valid : UInt<1>, bits : UInt<49>}[32], clock with : (reset => (reset, _T_71)) @[TLB.scala 35:20]
    when io.fill : @[TLB.scala 36:17]
      tlb[vpageFillTLB].bits <= vpageFillTAG @[TLB.scala 37:28]
      tlb[vpageFillTLB].valid <= UInt<1>("h01") @[TLB.scala 38:29]
      skip @[TLB.scala 36:17]
    node _T_600 = neq(tlb[vpageTLB].bits, vpageTAG) @[TLB.scala 41:56]
    node _T_601 = and(tlb[vpageTLB].valid, _T_600) @[TLB.scala 41:34]
    io.miss <= _T_601 @[TLB.scala 41:11]
    node _T_616 = eq(tlb[vpageTLB].bits, vpageTAG) @[TLB.scala 42:55]
    node _T_617 = and(tlb[vpageTLB].valid, _T_616) @[TLB.scala 42:33]
    io.hit <= _T_617 @[TLB.scala 42:10]
    io.paddr.valid <= io.vaddr.valid @[TLB.scala 43:18]
    node _T_619 = dshr(io.vaddr.bits, UInt<2>("h02")) @[TLB.scala 44:34]
    io.paddr.bits <= _T_619 @[TLB.scala 44:17]
    
  module FetchUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip en : UInt<1>, flip vecPC : UInt<64>[2], flip tagIn : UInt<1>, incr : UInt<1>, flip flush : UInt<1>, flip fire : {valid : UInt<1>, bits : UInt<1>}, flip branch : {valid : UInt<1>, bits : {offset : UInt<64>, tag : UInt<1>}}, flip ppageBRAM : {flip writeEn : UInt<1>, flip en : UInt<1>, flip addr : UInt<10>, flip dataIn : UInt<36>, dataOut : UInt<36>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {inst : UInt<32>, tag : UInt<1>, pc : UInt<64>}}}
    
    wire _T_86 : UInt<64>[2] @[fetch.scala 39:32]
    _T_86[0] <= UInt<64>("h00") @[fetch.scala 39:32]
    _T_86[1] <= UInt<64>("h00") @[fetch.scala 39:32]
    reg fake_PC : UInt<64>[2], clock with : (reset => (reset, _T_86)) @[fetch.scala 39:24]
    inst pcTLB of TLBUnit @[fetch.scala 40:21]
    pcTLB.clock <= clock
    pcTLB.reset <= reset
    pcTLB.io.vaddr.bits <= fake_PC[io.tagIn] @[fetch.scala 41:23]
    pcTLB.io.vaddr.valid <= io.en @[fetch.scala 42:24]
    pcTLB.io.fill <= io.fire.valid @[fetch.scala 43:17]
    pcTLB.io.vaddrFill <= io.vecPC[io.fire.bits] @[fetch.scala 44:22]
    io.ppageBRAM.en <= UInt<1>("h01") @[fetch.scala 46:19]
    io.ppageBRAM.addr <= pcTLB.io.paddr.bits @[fetch.scala 47:21]
    io.ppageBRAM.dataIn <= UInt<1>("h00") @[fetch.scala 48:27]
    io.ppageBRAM.writeEn <= UInt<1>("h00") @[fetch.scala 49:28]
    reg valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[fetch.scala 52:22]
    reg tag : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[fetch.scala 53:20]
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[fetch.scala 54:19]
    node readIns = or(io.deq.ready, io.flush) @[fetch.scala 55:30]
    when readIns : @[fetch.scala 56:17]
      node _T_122 = and(io.en, pcTLB.io.paddr.valid) @[fetch.scala 57:20]
      node _T_123 = and(_T_122, pcTLB.io.hit) @[fetch.scala 57:44]
      valid <= _T_123 @[fetch.scala 57:11]
      tag <= io.tagIn @[fetch.scala 58:9]
      pc <= fake_PC[io.tagIn] @[fetch.scala 59:8]
      skip @[fetch.scala 56:17]
    else : @[fetch.scala 60:15]
      valid <= valid @[fetch.scala 61:11]
      tag <= tag @[fetch.scala 62:9]
      pc <= pc @[fetch.scala 63:8]
      skip @[fetch.scala 60:15]
    wire _T_130 : {valid : UInt<1>, bits : UInt<32>} @[fetch.scala 68:20]
    _T_130.valid <= UInt<1>("h00") @[fetch.scala 69:16]
    _T_130.bits <= UInt<1>("h00") @[fetch.scala 70:15]
    reg instV : {valid : UInt<1>, bits : UInt<32>}, clock with : (reset => (reset, _T_130)) @[fetch.scala 74:22]
    node _T_138 = eq(io.deq.ready, UInt<1>("h00")) @[fetch.scala 75:8]
    reg _T_140 : UInt<1>, clock @[fetch.scala 75:32]
    _T_140 <= io.deq.ready @[fetch.scala 75:32]
    node _T_141 = and(_T_138, _T_140) @[fetch.scala 75:22]
    when _T_141 : @[fetch.scala 75:48]
      instV.valid <= UInt<1>("h01") @[fetch.scala 76:17]
      instV.bits <= io.ppageBRAM.dataOut @[fetch.scala 77:16]
      skip @[fetch.scala 75:48]
    when io.deq.ready : @[fetch.scala 80:22]
      instV.valid <= UInt<1>("h00") @[fetch.scala 81:17]
      skip @[fetch.scala 80:22]
    node _T_145 = eq(io.flush, UInt<1>("h00")) @[fetch.scala 84:27]
    node deqValid = and(valid, _T_145) @[fetch.scala 84:24]
    node _T_146 = and(readIns, io.en) @[fetch.scala 85:22]
    io.incr <= _T_146 @[fetch.scala 85:11]
    io.deq.valid <= deqValid @[fetch.scala 87:16]
    io.deq.bits.tag <= tag @[fetch.scala 88:19]
    io.deq.bits.pc <= pc @[fetch.scala 89:18]
    node _T_147 = mux(instV.valid, instV.bits, io.ppageBRAM.dataOut) @[fetch.scala 90:26]
    io.deq.bits.inst <= _T_147 @[fetch.scala 90:20]
    node _T_148 = and(readIns, io.en) @[fetch.scala 92:16]
    when _T_148 : @[fetch.scala 92:26]
      node _T_156 = add(fake_PC[io.tagIn], UInt<3>("h04")) @[fetch.scala 93:44]
      node _T_157 = tail(_T_156, 1) @[fetch.scala 93:44]
      fake_PC[io.tagIn] <= _T_157 @[fetch.scala 93:23]
      skip @[fetch.scala 92:26]
    when io.branch.valid : @[fetch.scala 95:25]
      node _T_162 = cvt(io.vecPC[io.branch.bits.tag]) @[fetch.scala 96:66]
      node _T_163 = asSInt(io.branch.bits.offset) @[fetch.scala 96:95]
      node _T_164 = add(_T_162, _T_163) @[fetch.scala 96:71]
      node _T_165 = tail(_T_164, 1) @[fetch.scala 96:71]
      node _T_166 = asSInt(_T_165) @[fetch.scala 96:71]
      node _T_167 = asUInt(_T_166) @[fetch.scala 96:109]
      fake_PC[io.branch.bits.tag] <= _T_167 @[fetch.scala 96:33]
      skip @[fetch.scala 95:25]
    when io.fire.valid : @[fetch.scala 98:23]
      fake_PC[io.fire.bits] <= io.vecPC[io.fire.bits] @[fetch.scala 99:27]
      skip @[fetch.scala 98:23]
    
  module DecodeUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip finst : {inst : UInt<32>, tag : UInt<1>, pc : UInt<64>}, dinst : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}
    
    node _T_117 = bits(io.finst.inst, 7, 0) @[decode.scala 121:33]
    node _T_118 = bits(io.finst.inst, 15, 8) @[decode.scala 121:44]
    node _T_119 = bits(io.finst.inst, 23, 16) @[decode.scala 121:56]
    node _T_120 = bits(io.finst.inst, 31, 24) @[decode.scala 121:69]
    node _T_121 = cat(_T_119, _T_120) @[Cat.scala 30:58]
    node _T_122 = cat(_T_117, _T_118) @[Cat.scala 30:58]
    node _T_123 = cat(_T_122, _T_121) @[Cat.scala 30:58]
    wire instBE : UInt
    instBE <= _T_123
    wire _T_146 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>} @[decode.scala 74:21]
    _T_146.rd.bits <= UInt<5>("h00") @[decode.scala 77:20]
    _T_146.rs1.bits <= UInt<5>("h00") @[decode.scala 78:20]
    _T_146.rs2.bits <= UInt<5>("h00") @[decode.scala 79:20]
    _T_146.imm.bits <= UInt<26>("h00") @[decode.scala 80:20]
    _T_146.shift_val.bits <= UInt<6>("h00") @[decode.scala 81:26]
    _T_146.shift_type <= UInt<2>("h00") @[decode.scala 82:22]
    _T_146.cond.bits <= UInt<4>("h00") @[decode.scala 83:21]
    _T_146.op <= UInt<3>("h00") @[decode.scala 86:14]
    _T_146.itype <= UInt<3>("h00") @[decode.scala 87:17]
    _T_146.rd.valid <= UInt<1>("h00") @[decode.scala 90:20]
    _T_146.rs1.valid <= UInt<1>("h00") @[decode.scala 91:21]
    _T_146.rs2.valid <= UInt<1>("h00") @[decode.scala 92:21]
    _T_146.imm.valid <= UInt<1>("h00") @[decode.scala 93:21]
    _T_146.shift_val.valid <= UInt<1>("h00") @[decode.scala 94:27]
    _T_146.cond.valid <= UInt<1>("h00") @[decode.scala 95:22]
    _T_146.nzcv_en <= UInt<1>("h00") @[decode.scala 96:19]
    _T_146.inst32.bits <= UInt<32>("h00") @[decode.scala 99:23]
    _T_146.inst32.valid <= UInt<1>("h00") @[decode.scala 100:24]
    _T_146.tag <= UInt<1>("h00") @[decode.scala 101:15]
    _T_146.pc <= UInt<64>("h00") @[decode.scala 102:14]
    wire dinst : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}
    dinst.pc <= _T_146.pc
    dinst.inst32.bits <= _T_146.inst32.bits
    dinst.inst32.valid <= _T_146.inst32.valid
    dinst.tag <= _T_146.tag
    dinst.nzcv_en <= _T_146.nzcv_en
    dinst.op <= _T_146.op
    dinst.itype <= _T_146.itype
    dinst.cond.bits <= _T_146.cond.bits
    dinst.cond.valid <= _T_146.cond.valid
    dinst.shift_type <= _T_146.shift_type
    dinst.shift_val.bits <= _T_146.shift_val.bits
    dinst.shift_val.valid <= _T_146.shift_val.valid
    dinst.imm.bits <= _T_146.imm.bits
    dinst.imm.valid <= _T_146.imm.valid
    dinst.rs2.bits <= _T_146.rs2.bits
    dinst.rs2.valid <= _T_146.rs2.valid
    dinst.rs1.bits <= _T_146.rs1.bits
    dinst.rs1.valid <= _T_146.rs1.valid
    dinst.rd.bits <= _T_146.rd.bits
    dinst.rd.valid <= _T_146.rd.valid
    node _T_210 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_211 = eq(UInt<32>("h08a000000"), _T_210) @[Lookup.scala 9:38]
    node _T_214 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_215 = eq(UInt<32>("h08a200000"), _T_214) @[Lookup.scala 9:38]
    node _T_218 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_219 = eq(UInt<32>("h0aa000000"), _T_218) @[Lookup.scala 9:38]
    node _T_222 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_223 = eq(UInt<32>("h0aa200000"), _T_222) @[Lookup.scala 9:38]
    node _T_226 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_227 = eq(UInt<32>("h0ca000000"), _T_226) @[Lookup.scala 9:38]
    node _T_230 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_231 = eq(UInt<32>("h0ca200000"), _T_230) @[Lookup.scala 9:38]
    node _T_234 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_235 = eq(UInt<32>("h0ea000000"), _T_234) @[Lookup.scala 9:38]
    node _T_238 = and(instBE, UInt<32>("h0ff200000")) @[Lookup.scala 9:38]
    node _T_239 = eq(UInt<32>("h0ea200000"), _T_238) @[Lookup.scala 9:38]
    node _T_242 = and(instBE, UInt<32>("h0fc000000")) @[Lookup.scala 9:38]
    node _T_243 = eq(UInt<29>("h014000000"), _T_242) @[Lookup.scala 9:38]
    node _T_246 = and(instBE, UInt<32>("h0fc000000")) @[Lookup.scala 9:38]
    node _T_247 = eq(UInt<32>("h094000000"), _T_246) @[Lookup.scala 9:38]
    node _T_250 = and(instBE, UInt<32>("h0ff000010")) @[Lookup.scala 9:38]
    node _T_251 = eq(UInt<31>("h054000000"), _T_250) @[Lookup.scala 9:38]
    node _T_254 = and(instBE, UInt<32>("h0ff800000")) @[Lookup.scala 9:38]
    node _T_255 = eq(UInt<32>("h091000000"), _T_254) @[Lookup.scala 9:38]
    node _T_258 = and(instBE, UInt<32>("h0ff800000")) @[Lookup.scala 9:38]
    node _T_259 = eq(UInt<32>("h0b1000000"), _T_258) @[Lookup.scala 9:38]
    node _T_262 = and(instBE, UInt<32>("h0ff800000")) @[Lookup.scala 9:38]
    node _T_263 = eq(UInt<32>("h0d1000000"), _T_262) @[Lookup.scala 9:38]
    node _T_266 = and(instBE, UInt<32>("h0ff800000")) @[Lookup.scala 9:38]
    node _T_267 = eq(UInt<32>("h0f1000000"), _T_266) @[Lookup.scala 9:38]
    node _T_270 = and(instBE, UInt<32>("h0ff000000")) @[Lookup.scala 9:38]
    node _T_271 = eq(UInt<31>("h058000000"), _T_270) @[Lookup.scala 9:38]
    node _T_272 = mux(_T_271, UInt<3>("h05"), UInt<3>("h00")) @[Lookup.scala 11:37]
    node _T_273 = mux(_T_267, UInt<3>("h04"), _T_272) @[Lookup.scala 11:37]
    node _T_274 = mux(_T_263, UInt<3>("h04"), _T_273) @[Lookup.scala 11:37]
    node _T_275 = mux(_T_259, UInt<3>("h04"), _T_274) @[Lookup.scala 11:37]
    node _T_276 = mux(_T_255, UInt<3>("h04"), _T_275) @[Lookup.scala 11:37]
    node _T_277 = mux(_T_251, UInt<3>("h03"), _T_276) @[Lookup.scala 11:37]
    node _T_278 = mux(_T_247, UInt<3>("h02"), _T_277) @[Lookup.scala 11:37]
    node _T_279 = mux(_T_243, UInt<3>("h02"), _T_278) @[Lookup.scala 11:37]
    node _T_280 = mux(_T_239, UInt<3>("h01"), _T_279) @[Lookup.scala 11:37]
    node _T_281 = mux(_T_235, UInt<3>("h01"), _T_280) @[Lookup.scala 11:37]
    node _T_282 = mux(_T_231, UInt<3>("h01"), _T_281) @[Lookup.scala 11:37]
    node _T_283 = mux(_T_227, UInt<3>("h01"), _T_282) @[Lookup.scala 11:37]
    node _T_284 = mux(_T_223, UInt<3>("h01"), _T_283) @[Lookup.scala 11:37]
    node _T_285 = mux(_T_219, UInt<3>("h01"), _T_284) @[Lookup.scala 11:37]
    node _T_286 = mux(_T_215, UInt<3>("h01"), _T_285) @[Lookup.scala 11:37]
    node _T_287 = mux(_T_211, UInt<3>("h01"), _T_286) @[Lookup.scala 11:37]
    node _T_288 = mux(_T_271, UInt<3>("h00"), UInt<3>("h00")) @[Lookup.scala 11:37]
    node _T_289 = mux(_T_267, UInt<3>("h07"), _T_288) @[Lookup.scala 11:37]
    node _T_290 = mux(_T_263, UInt<3>("h07"), _T_289) @[Lookup.scala 11:37]
    node _T_291 = mux(_T_259, UInt<3>("h06"), _T_290) @[Lookup.scala 11:37]
    node _T_292 = mux(_T_255, UInt<3>("h06"), _T_291) @[Lookup.scala 11:37]
    node _T_293 = mux(_T_251, UInt<3>("h01"), _T_292) @[Lookup.scala 11:37]
    node _T_294 = mux(_T_247, UInt<3>("h00"), _T_293) @[Lookup.scala 11:37]
    node _T_295 = mux(_T_243, UInt<3>("h00"), _T_294) @[Lookup.scala 11:37]
    node _T_296 = mux(_T_239, UInt<3>("h01"), _T_295) @[Lookup.scala 11:37]
    node _T_297 = mux(_T_235, UInt<3>("h00"), _T_296) @[Lookup.scala 11:37]
    node _T_298 = mux(_T_231, UInt<3>("h05"), _T_297) @[Lookup.scala 11:37]
    node _T_299 = mux(_T_227, UInt<3>("h04"), _T_298) @[Lookup.scala 11:37]
    node _T_300 = mux(_T_223, UInt<3>("h03"), _T_299) @[Lookup.scala 11:37]
    node _T_301 = mux(_T_219, UInt<3>("h02"), _T_300) @[Lookup.scala 11:37]
    node _T_302 = mux(_T_215, UInt<3>("h01"), _T_301) @[Lookup.scala 11:37]
    node _T_303 = mux(_T_211, UInt<3>("h00"), _T_302) @[Lookup.scala 11:37]
    node _T_304 = mux(_T_271, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_305 = mux(_T_267, UInt<1>("h01"), _T_304) @[Lookup.scala 11:37]
    node _T_306 = mux(_T_263, UInt<1>("h01"), _T_305) @[Lookup.scala 11:37]
    node _T_307 = mux(_T_259, UInt<1>("h01"), _T_306) @[Lookup.scala 11:37]
    node _T_308 = mux(_T_255, UInt<1>("h01"), _T_307) @[Lookup.scala 11:37]
    node _T_309 = mux(_T_251, UInt<1>("h00"), _T_308) @[Lookup.scala 11:37]
    node _T_310 = mux(_T_247, UInt<1>("h00"), _T_309) @[Lookup.scala 11:37]
    node _T_311 = mux(_T_243, UInt<1>("h00"), _T_310) @[Lookup.scala 11:37]
    node _T_312 = mux(_T_239, UInt<1>("h01"), _T_311) @[Lookup.scala 11:37]
    node _T_313 = mux(_T_235, UInt<1>("h01"), _T_312) @[Lookup.scala 11:37]
    node _T_314 = mux(_T_231, UInt<1>("h01"), _T_313) @[Lookup.scala 11:37]
    node _T_315 = mux(_T_227, UInt<1>("h01"), _T_314) @[Lookup.scala 11:37]
    node _T_316 = mux(_T_223, UInt<1>("h01"), _T_315) @[Lookup.scala 11:37]
    node _T_317 = mux(_T_219, UInt<1>("h01"), _T_316) @[Lookup.scala 11:37]
    node _T_318 = mux(_T_215, UInt<1>("h01"), _T_317) @[Lookup.scala 11:37]
    node _T_319 = mux(_T_211, UInt<1>("h01"), _T_318) @[Lookup.scala 11:37]
    node _T_320 = mux(_T_271, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_321 = mux(_T_267, UInt<1>("h01"), _T_320) @[Lookup.scala 11:37]
    node _T_322 = mux(_T_263, UInt<1>("h01"), _T_321) @[Lookup.scala 11:37]
    node _T_323 = mux(_T_259, UInt<1>("h01"), _T_322) @[Lookup.scala 11:37]
    node _T_324 = mux(_T_255, UInt<1>("h01"), _T_323) @[Lookup.scala 11:37]
    node _T_325 = mux(_T_251, UInt<1>("h00"), _T_324) @[Lookup.scala 11:37]
    node _T_326 = mux(_T_247, UInt<1>("h00"), _T_325) @[Lookup.scala 11:37]
    node _T_327 = mux(_T_243, UInt<1>("h00"), _T_326) @[Lookup.scala 11:37]
    node _T_328 = mux(_T_239, UInt<1>("h01"), _T_327) @[Lookup.scala 11:37]
    node _T_329 = mux(_T_235, UInt<1>("h01"), _T_328) @[Lookup.scala 11:37]
    node _T_330 = mux(_T_231, UInt<1>("h01"), _T_329) @[Lookup.scala 11:37]
    node _T_331 = mux(_T_227, UInt<1>("h01"), _T_330) @[Lookup.scala 11:37]
    node _T_332 = mux(_T_223, UInt<1>("h01"), _T_331) @[Lookup.scala 11:37]
    node _T_333 = mux(_T_219, UInt<1>("h01"), _T_332) @[Lookup.scala 11:37]
    node _T_334 = mux(_T_215, UInt<1>("h01"), _T_333) @[Lookup.scala 11:37]
    node _T_335 = mux(_T_211, UInt<1>("h01"), _T_334) @[Lookup.scala 11:37]
    node _T_336 = mux(_T_271, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_337 = mux(_T_267, UInt<1>("h00"), _T_336) @[Lookup.scala 11:37]
    node _T_338 = mux(_T_263, UInt<1>("h00"), _T_337) @[Lookup.scala 11:37]
    node _T_339 = mux(_T_259, UInt<1>("h00"), _T_338) @[Lookup.scala 11:37]
    node _T_340 = mux(_T_255, UInt<1>("h00"), _T_339) @[Lookup.scala 11:37]
    node _T_341 = mux(_T_251, UInt<1>("h00"), _T_340) @[Lookup.scala 11:37]
    node _T_342 = mux(_T_247, UInt<1>("h00"), _T_341) @[Lookup.scala 11:37]
    node _T_343 = mux(_T_243, UInt<1>("h00"), _T_342) @[Lookup.scala 11:37]
    node _T_344 = mux(_T_239, UInt<1>("h01"), _T_343) @[Lookup.scala 11:37]
    node _T_345 = mux(_T_235, UInt<1>("h01"), _T_344) @[Lookup.scala 11:37]
    node _T_346 = mux(_T_231, UInt<1>("h01"), _T_345) @[Lookup.scala 11:37]
    node _T_347 = mux(_T_227, UInt<1>("h01"), _T_346) @[Lookup.scala 11:37]
    node _T_348 = mux(_T_223, UInt<1>("h01"), _T_347) @[Lookup.scala 11:37]
    node _T_349 = mux(_T_219, UInt<1>("h01"), _T_348) @[Lookup.scala 11:37]
    node _T_350 = mux(_T_215, UInt<1>("h01"), _T_349) @[Lookup.scala 11:37]
    node _T_351 = mux(_T_211, UInt<1>("h01"), _T_350) @[Lookup.scala 11:37]
    node _T_352 = mux(_T_271, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_353 = mux(_T_267, UInt<1>("h01"), _T_352) @[Lookup.scala 11:37]
    node _T_354 = mux(_T_263, UInt<1>("h01"), _T_353) @[Lookup.scala 11:37]
    node _T_355 = mux(_T_259, UInt<1>("h01"), _T_354) @[Lookup.scala 11:37]
    node _T_356 = mux(_T_255, UInt<1>("h01"), _T_355) @[Lookup.scala 11:37]
    node _T_357 = mux(_T_251, UInt<1>("h01"), _T_356) @[Lookup.scala 11:37]
    node _T_358 = mux(_T_247, UInt<1>("h01"), _T_357) @[Lookup.scala 11:37]
    node _T_359 = mux(_T_243, UInt<1>("h01"), _T_358) @[Lookup.scala 11:37]
    node _T_360 = mux(_T_239, UInt<1>("h00"), _T_359) @[Lookup.scala 11:37]
    node _T_361 = mux(_T_235, UInt<1>("h00"), _T_360) @[Lookup.scala 11:37]
    node _T_362 = mux(_T_231, UInt<1>("h00"), _T_361) @[Lookup.scala 11:37]
    node _T_363 = mux(_T_227, UInt<1>("h00"), _T_362) @[Lookup.scala 11:37]
    node _T_364 = mux(_T_223, UInt<1>("h00"), _T_363) @[Lookup.scala 11:37]
    node _T_365 = mux(_T_219, UInt<1>("h00"), _T_364) @[Lookup.scala 11:37]
    node _T_366 = mux(_T_215, UInt<1>("h00"), _T_365) @[Lookup.scala 11:37]
    node _T_367 = mux(_T_211, UInt<1>("h00"), _T_366) @[Lookup.scala 11:37]
    node _T_368 = mux(_T_271, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_369 = mux(_T_267, UInt<1>("h01"), _T_368) @[Lookup.scala 11:37]
    node _T_370 = mux(_T_263, UInt<1>("h01"), _T_369) @[Lookup.scala 11:37]
    node _T_371 = mux(_T_259, UInt<1>("h01"), _T_370) @[Lookup.scala 11:37]
    node _T_372 = mux(_T_255, UInt<1>("h01"), _T_371) @[Lookup.scala 11:37]
    node _T_373 = mux(_T_251, UInt<1>("h00"), _T_372) @[Lookup.scala 11:37]
    node _T_374 = mux(_T_247, UInt<1>("h00"), _T_373) @[Lookup.scala 11:37]
    node _T_375 = mux(_T_243, UInt<1>("h00"), _T_374) @[Lookup.scala 11:37]
    node _T_376 = mux(_T_239, UInt<1>("h01"), _T_375) @[Lookup.scala 11:37]
    node _T_377 = mux(_T_235, UInt<1>("h01"), _T_376) @[Lookup.scala 11:37]
    node _T_378 = mux(_T_231, UInt<1>("h01"), _T_377) @[Lookup.scala 11:37]
    node _T_379 = mux(_T_227, UInt<1>("h01"), _T_378) @[Lookup.scala 11:37]
    node _T_380 = mux(_T_223, UInt<1>("h01"), _T_379) @[Lookup.scala 11:37]
    node _T_381 = mux(_T_219, UInt<1>("h01"), _T_380) @[Lookup.scala 11:37]
    node _T_382 = mux(_T_215, UInt<1>("h01"), _T_381) @[Lookup.scala 11:37]
    node _T_383 = mux(_T_211, UInt<1>("h01"), _T_382) @[Lookup.scala 11:37]
    node _T_384 = mux(_T_271, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_385 = mux(_T_267, UInt<1>("h00"), _T_384) @[Lookup.scala 11:37]
    node _T_386 = mux(_T_263, UInt<1>("h00"), _T_385) @[Lookup.scala 11:37]
    node _T_387 = mux(_T_259, UInt<1>("h00"), _T_386) @[Lookup.scala 11:37]
    node _T_388 = mux(_T_255, UInt<1>("h00"), _T_387) @[Lookup.scala 11:37]
    node _T_389 = mux(_T_251, UInt<1>("h01"), _T_388) @[Lookup.scala 11:37]
    node _T_390 = mux(_T_247, UInt<1>("h00"), _T_389) @[Lookup.scala 11:37]
    node _T_391 = mux(_T_243, UInt<1>("h00"), _T_390) @[Lookup.scala 11:37]
    node _T_392 = mux(_T_239, UInt<1>("h00"), _T_391) @[Lookup.scala 11:37]
    node _T_393 = mux(_T_235, UInt<1>("h00"), _T_392) @[Lookup.scala 11:37]
    node _T_394 = mux(_T_231, UInt<1>("h00"), _T_393) @[Lookup.scala 11:37]
    node _T_395 = mux(_T_227, UInt<1>("h00"), _T_394) @[Lookup.scala 11:37]
    node _T_396 = mux(_T_223, UInt<1>("h00"), _T_395) @[Lookup.scala 11:37]
    node _T_397 = mux(_T_219, UInt<1>("h00"), _T_396) @[Lookup.scala 11:37]
    node _T_398 = mux(_T_215, UInt<1>("h00"), _T_397) @[Lookup.scala 11:37]
    node _T_399 = mux(_T_211, UInt<1>("h00"), _T_398) @[Lookup.scala 11:37]
    node _T_400 = mux(_T_271, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_401 = mux(_T_267, UInt<1>("h01"), _T_400) @[Lookup.scala 11:37]
    node _T_402 = mux(_T_263, UInt<1>("h00"), _T_401) @[Lookup.scala 11:37]
    node _T_403 = mux(_T_259, UInt<1>("h01"), _T_402) @[Lookup.scala 11:37]
    node _T_404 = mux(_T_255, UInt<1>("h00"), _T_403) @[Lookup.scala 11:37]
    node _T_405 = mux(_T_251, UInt<1>("h00"), _T_404) @[Lookup.scala 11:37]
    node _T_406 = mux(_T_247, UInt<1>("h00"), _T_405) @[Lookup.scala 11:37]
    node _T_407 = mux(_T_243, UInt<1>("h00"), _T_406) @[Lookup.scala 11:37]
    node _T_408 = mux(_T_239, UInt<1>("h01"), _T_407) @[Lookup.scala 11:37]
    node _T_409 = mux(_T_235, UInt<1>("h01"), _T_408) @[Lookup.scala 11:37]
    node _T_410 = mux(_T_231, UInt<1>("h00"), _T_409) @[Lookup.scala 11:37]
    node _T_411 = mux(_T_227, UInt<1>("h00"), _T_410) @[Lookup.scala 11:37]
    node _T_412 = mux(_T_223, UInt<1>("h00"), _T_411) @[Lookup.scala 11:37]
    node _T_413 = mux(_T_219, UInt<1>("h00"), _T_412) @[Lookup.scala 11:37]
    node _T_414 = mux(_T_215, UInt<1>("h00"), _T_413) @[Lookup.scala 11:37]
    node _T_415 = mux(_T_211, UInt<1>("h00"), _T_414) @[Lookup.scala 11:37]
    node _T_416 = mux(_T_271, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 11:37]
    node _T_417 = mux(_T_267, UInt<1>("h01"), _T_416) @[Lookup.scala 11:37]
    node _T_418 = mux(_T_263, UInt<1>("h01"), _T_417) @[Lookup.scala 11:37]
    node _T_419 = mux(_T_259, UInt<1>("h01"), _T_418) @[Lookup.scala 11:37]
    node _T_420 = mux(_T_255, UInt<1>("h01"), _T_419) @[Lookup.scala 11:37]
    node _T_421 = mux(_T_251, UInt<1>("h01"), _T_420) @[Lookup.scala 11:37]
    node _T_422 = mux(_T_247, UInt<1>("h01"), _T_421) @[Lookup.scala 11:37]
    node _T_423 = mux(_T_243, UInt<1>("h01"), _T_422) @[Lookup.scala 11:37]
    node _T_424 = mux(_T_239, UInt<1>("h01"), _T_423) @[Lookup.scala 11:37]
    node _T_425 = mux(_T_235, UInt<1>("h01"), _T_424) @[Lookup.scala 11:37]
    node _T_426 = mux(_T_231, UInt<1>("h01"), _T_425) @[Lookup.scala 11:37]
    node _T_427 = mux(_T_227, UInt<1>("h01"), _T_426) @[Lookup.scala 11:37]
    node _T_428 = mux(_T_223, UInt<1>("h01"), _T_427) @[Lookup.scala 11:37]
    node _T_429 = mux(_T_219, UInt<1>("h01"), _T_428) @[Lookup.scala 11:37]
    node _T_430 = mux(_T_215, UInt<1>("h01"), _T_429) @[Lookup.scala 11:37]
    node _T_431 = mux(_T_211, UInt<1>("h01"), _T_430) @[Lookup.scala 11:37]
    node _T_432 = bits(instBE, 4, 0) @[decode.scala 39:64]
    node _T_433 = bits(instBE, 4, 0) @[decode.scala 40:62]
    node _T_434 = bits(instBE, 4, 0) @[decode.scala 41:62]
    node _T_435 = eq(UInt<3>("h05"), _T_287) @[Mux.scala 46:19]
    node _T_436 = mux(_T_435, _T_434, UInt<5>("h00")) @[Mux.scala 46:16]
    node _T_437 = eq(UInt<3>("h04"), _T_287) @[Mux.scala 46:19]
    node _T_438 = mux(_T_437, _T_433, _T_436) @[Mux.scala 46:16]
    node _T_439 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_440 = mux(_T_439, _T_432, _T_438) @[Mux.scala 46:16]
    dinst.rd.bits <= _T_440 @[decode.scala 39:13]
    node _T_441 = bits(instBE, 9, 5) @[decode.scala 42:65]
    node _T_442 = bits(instBE, 9, 5) @[decode.scala 43:62]
    node _T_443 = eq(UInt<3>("h04"), _T_287) @[Mux.scala 46:19]
    node _T_444 = mux(_T_443, _T_442, UInt<5>("h00")) @[Mux.scala 46:16]
    node _T_445 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_446 = mux(_T_445, _T_441, _T_444) @[Mux.scala 46:16]
    dinst.rs1.bits <= _T_446 @[decode.scala 42:14]
    node _T_447 = bits(instBE, 20, 16) @[decode.scala 44:65]
    node _T_448 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_449 = mux(_T_448, _T_447, UInt<5>("h00")) @[Mux.scala 46:16]
    dinst.rs2.bits <= _T_449 @[decode.scala 44:14]
    node _T_450 = bits(instBE, 15, 10) @[decode.scala 45:65]
    node _T_451 = bits(instBE, 25, 0) @[decode.scala 46:62]
    node _T_452 = bits(instBE, 23, 5) @[decode.scala 47:62]
    node _T_453 = bits(instBE, 21, 10) @[decode.scala 48:62]
    node _T_454 = bits(instBE, 23, 5) @[decode.scala 49:62]
    node _T_455 = eq(UInt<3>("h05"), _T_287) @[Mux.scala 46:19]
    node _T_456 = mux(_T_455, _T_454, UInt<26>("h00")) @[Mux.scala 46:16]
    node _T_457 = eq(UInt<3>("h04"), _T_287) @[Mux.scala 46:19]
    node _T_458 = mux(_T_457, _T_453, _T_456) @[Mux.scala 46:16]
    node _T_459 = eq(UInt<3>("h03"), _T_287) @[Mux.scala 46:19]
    node _T_460 = mux(_T_459, _T_452, _T_458) @[Mux.scala 46:16]
    node _T_461 = eq(UInt<3>("h02"), _T_287) @[Mux.scala 46:19]
    node _T_462 = mux(_T_461, _T_451, _T_460) @[Mux.scala 46:16]
    node _T_463 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_464 = mux(_T_463, _T_450, _T_462) @[Mux.scala 46:16]
    dinst.imm.bits <= _T_464 @[decode.scala 45:14]
    node _T_465 = bits(instBE, 22, 22) @[decode.scala 51:54]
    node _T_468 = mux(_T_465, UInt<4>("h0c"), UInt<1>("h00")) @[decode.scala 51:49]
    node _T_469 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_470 = mux(_T_469, dinst.imm.bits, UInt<6>("h00")) @[Mux.scala 46:16]
    node _T_471 = eq(UInt<3>("h04"), _T_287) @[Mux.scala 46:19]
    node _T_472 = mux(_T_471, _T_468, _T_470) @[Mux.scala 46:16]
    dinst.shift_val.bits <= _T_472 @[decode.scala 50:20]
    node _T_473 = bits(instBE, 23, 22) @[decode.scala 53:72]
    node _T_474 = bits(instBE, 23, 22) @[decode.scala 54:62]
    node _T_475 = eq(UInt<3>("h04"), _T_287) @[Mux.scala 46:19]
    node _T_476 = mux(_T_475, _T_474, UInt<2>("h00")) @[Mux.scala 46:16]
    node _T_477 = eq(UInt<3>("h01"), _T_287) @[Mux.scala 46:19]
    node _T_478 = mux(_T_477, _T_473, _T_476) @[Mux.scala 46:16]
    dinst.shift_type <= _T_478 @[decode.scala 53:16]
    node _T_479 = bits(instBE, 3, 0) @[decode.scala 55:66]
    node _T_480 = eq(UInt<3>("h03"), _T_287) @[Mux.scala 46:19]
    node _T_481 = mux(_T_480, _T_479, UInt<4>("h00")) @[Mux.scala 46:16]
    dinst.cond.bits <= _T_481 @[decode.scala 55:15]
    dinst.op <= _T_303 @[decode.scala 60:49]
    dinst.rd.valid <= _T_319 @[decode.scala 60:49]
    dinst.rs1.valid <= _T_335 @[decode.scala 60:49]
    dinst.rs2.valid <= _T_351 @[decode.scala 60:49]
    dinst.imm.valid <= _T_367 @[decode.scala 60:49]
    dinst.shift_val.valid <= _T_383 @[decode.scala 60:49]
    dinst.cond.valid <= _T_399 @[decode.scala 60:49]
    dinst.nzcv_en <= _T_415 @[decode.scala 60:49]
    dinst.inst32.valid <= _T_431 @[decode.scala 60:49]
    dinst.itype <= _T_287 @[decode.scala 62:16]
    dinst.tag <= io.finst.tag @[decode.scala 64:9]
    dinst.inst32.bits <= instBE @[decode.scala 65:17]
    dinst.pc <= io.finst.pc @[decode.scala 124:12]
    io.dinst.pc <= dinst.pc @[decode.scala 125:12]
    io.dinst.inst32.bits <= dinst.inst32.bits @[decode.scala 125:12]
    io.dinst.inst32.valid <= dinst.inst32.valid @[decode.scala 125:12]
    io.dinst.tag <= dinst.tag @[decode.scala 125:12]
    io.dinst.nzcv_en <= dinst.nzcv_en @[decode.scala 125:12]
    io.dinst.op <= dinst.op @[decode.scala 125:12]
    io.dinst.itype <= dinst.itype @[decode.scala 125:12]
    io.dinst.cond.bits <= dinst.cond.bits @[decode.scala 125:12]
    io.dinst.cond.valid <= dinst.cond.valid @[decode.scala 125:12]
    io.dinst.shift_type <= dinst.shift_type @[decode.scala 125:12]
    io.dinst.shift_val.bits <= dinst.shift_val.bits @[decode.scala 125:12]
    io.dinst.shift_val.valid <= dinst.shift_val.valid @[decode.scala 125:12]
    io.dinst.imm.bits <= dinst.imm.bits @[decode.scala 125:12]
    io.dinst.imm.valid <= dinst.imm.valid @[decode.scala 125:12]
    io.dinst.rs2.bits <= dinst.rs2.bits @[decode.scala 125:12]
    io.dinst.rs2.valid <= dinst.rs2.valid @[decode.scala 125:12]
    io.dinst.rs1.bits <= dinst.rs1.bits @[decode.scala 125:12]
    io.dinst.rs1.valid <= dinst.rs1.valid @[decode.scala 125:12]
    io.dinst.rd.bits <= dinst.rd.bits @[decode.scala 125:12]
    io.dinst.rd.valid <= dinst.rd.valid @[decode.scala 125:12]
    
  module FReg : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, flip flush : UInt<1>}
    
    reg _T_254 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}, clock @[FReg.scala 45:24]
    reg _T_277 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FReg.scala 46:30]
    node _T_279 = eq(_T_277, UInt<1>("h00")) @[FReg.scala 48:33]
    node _T_280 = or(_T_279, io.deq.ready) @[FReg.scala 48:40]
    node _T_281 = or(_T_280, io.flush) @[FReg.scala 48:56]
    wire _T_283 : UInt<1>
    _T_283 <= _T_281
    when _T_283 : @[FReg.scala 50:17]
      _T_254.pc <= io.enq.bits.pc @[FReg.scala 51:9]
      _T_254.inst32.bits <= io.enq.bits.inst32.bits @[FReg.scala 51:9]
      _T_254.inst32.valid <= io.enq.bits.inst32.valid @[FReg.scala 51:9]
      _T_254.tag <= io.enq.bits.tag @[FReg.scala 51:9]
      _T_254.nzcv_en <= io.enq.bits.nzcv_en @[FReg.scala 51:9]
      _T_254.op <= io.enq.bits.op @[FReg.scala 51:9]
      _T_254.itype <= io.enq.bits.itype @[FReg.scala 51:9]
      _T_254.cond.bits <= io.enq.bits.cond.bits @[FReg.scala 51:9]
      _T_254.cond.valid <= io.enq.bits.cond.valid @[FReg.scala 51:9]
      _T_254.shift_type <= io.enq.bits.shift_type @[FReg.scala 51:9]
      _T_254.shift_val.bits <= io.enq.bits.shift_val.bits @[FReg.scala 51:9]
      _T_254.shift_val.valid <= io.enq.bits.shift_val.valid @[FReg.scala 51:9]
      _T_254.imm.bits <= io.enq.bits.imm.bits @[FReg.scala 51:9]
      _T_254.imm.valid <= io.enq.bits.imm.valid @[FReg.scala 51:9]
      _T_254.rs2.bits <= io.enq.bits.rs2.bits @[FReg.scala 51:9]
      _T_254.rs2.valid <= io.enq.bits.rs2.valid @[FReg.scala 51:9]
      _T_254.rs1.bits <= io.enq.bits.rs1.bits @[FReg.scala 51:9]
      _T_254.rs1.valid <= io.enq.bits.rs1.valid @[FReg.scala 51:9]
      _T_254.rd.bits <= io.enq.bits.rd.bits @[FReg.scala 51:9]
      _T_254.rd.valid <= io.enq.bits.rd.valid @[FReg.scala 51:9]
      _T_277 <= io.enq.valid @[FReg.scala 52:11]
      skip @[FReg.scala 50:17]
    io.enq.ready <= _T_283 @[FReg.scala 54:16]
    io.deq.bits.pc <= _T_254.pc @[FReg.scala 56:15]
    io.deq.bits.inst32.bits <= _T_254.inst32.bits @[FReg.scala 56:15]
    io.deq.bits.inst32.valid <= _T_254.inst32.valid @[FReg.scala 56:15]
    io.deq.bits.tag <= _T_254.tag @[FReg.scala 56:15]
    io.deq.bits.nzcv_en <= _T_254.nzcv_en @[FReg.scala 56:15]
    io.deq.bits.op <= _T_254.op @[FReg.scala 56:15]
    io.deq.bits.itype <= _T_254.itype @[FReg.scala 56:15]
    io.deq.bits.cond.bits <= _T_254.cond.bits @[FReg.scala 56:15]
    io.deq.bits.cond.valid <= _T_254.cond.valid @[FReg.scala 56:15]
    io.deq.bits.shift_type <= _T_254.shift_type @[FReg.scala 56:15]
    io.deq.bits.shift_val.bits <= _T_254.shift_val.bits @[FReg.scala 56:15]
    io.deq.bits.shift_val.valid <= _T_254.shift_val.valid @[FReg.scala 56:15]
    io.deq.bits.imm.bits <= _T_254.imm.bits @[FReg.scala 56:15]
    io.deq.bits.imm.valid <= _T_254.imm.valid @[FReg.scala 56:15]
    io.deq.bits.rs2.bits <= _T_254.rs2.bits @[FReg.scala 56:15]
    io.deq.bits.rs2.valid <= _T_254.rs2.valid @[FReg.scala 56:15]
    io.deq.bits.rs1.bits <= _T_254.rs1.bits @[FReg.scala 56:15]
    io.deq.bits.rs1.valid <= _T_254.rs1.valid @[FReg.scala 56:15]
    io.deq.bits.rd.bits <= _T_254.rd.bits @[FReg.scala 56:15]
    io.deq.bits.rd.valid <= _T_254.rd.valid @[FReg.scala 56:15]
    node _T_285 = eq(io.flush, UInt<1>("h00")) @[FReg.scala 57:28]
    node _T_286 = and(_T_277, _T_285) @[FReg.scala 57:25]
    io.deq.valid <= _T_286 @[FReg.scala 57:16]
    
  module Queue : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, count : UInt<2>}
    
    cmem _T_275 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}[2] @[Decoupled.scala 215:24]
    reg value : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Counter.scala 26:33]
    reg _T_282 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 218:35]
    node _T_283 = eq(value, value_1) @[Decoupled.scala 220:41]
    node _T_285 = eq(_T_282, UInt<1>("h00")) @[Decoupled.scala 221:36]
    node _T_286 = and(_T_283, _T_285) @[Decoupled.scala 221:33]
    node _T_287 = and(_T_283, _T_282) @[Decoupled.scala 222:32]
    node _T_288 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 37:37]
    wire _T_290 : UInt<1>
    _T_290 <= _T_288
    node _T_291 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 37:37]
    wire _T_293 : UInt<1>
    _T_293 <= _T_291
    when _T_290 : @[Decoupled.scala 226:17]
      infer mport _T_294 = _T_275[value], clock @[Decoupled.scala 227:8]
      _T_294.pc <= io.enq.bits.pc @[Decoupled.scala 227:24]
      _T_294.inst32.bits <= io.enq.bits.inst32.bits @[Decoupled.scala 227:24]
      _T_294.inst32.valid <= io.enq.bits.inst32.valid @[Decoupled.scala 227:24]
      _T_294.tag <= io.enq.bits.tag @[Decoupled.scala 227:24]
      _T_294.nzcv_en <= io.enq.bits.nzcv_en @[Decoupled.scala 227:24]
      _T_294.op <= io.enq.bits.op @[Decoupled.scala 227:24]
      _T_294.itype <= io.enq.bits.itype @[Decoupled.scala 227:24]
      _T_294.cond.bits <= io.enq.bits.cond.bits @[Decoupled.scala 227:24]
      _T_294.cond.valid <= io.enq.bits.cond.valid @[Decoupled.scala 227:24]
      _T_294.shift_type <= io.enq.bits.shift_type @[Decoupled.scala 227:24]
      _T_294.shift_val.bits <= io.enq.bits.shift_val.bits @[Decoupled.scala 227:24]
      _T_294.shift_val.valid <= io.enq.bits.shift_val.valid @[Decoupled.scala 227:24]
      _T_294.imm.bits <= io.enq.bits.imm.bits @[Decoupled.scala 227:24]
      _T_294.imm.valid <= io.enq.bits.imm.valid @[Decoupled.scala 227:24]
      _T_294.rs2.bits <= io.enq.bits.rs2.bits @[Decoupled.scala 227:24]
      _T_294.rs2.valid <= io.enq.bits.rs2.valid @[Decoupled.scala 227:24]
      _T_294.rs1.bits <= io.enq.bits.rs1.bits @[Decoupled.scala 227:24]
      _T_294.rs1.valid <= io.enq.bits.rs1.valid @[Decoupled.scala 227:24]
      _T_294.rd.bits <= io.enq.bits.rd.bits @[Decoupled.scala 227:24]
      _T_294.rd.valid <= io.enq.bits.rd.valid @[Decoupled.scala 227:24]
      node wrap = eq(value, UInt<1>("h01")) @[Counter.scala 34:24]
      node _T_317 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_318 = tail(_T_317, 1) @[Counter.scala 35:22]
      value <= _T_318 @[Counter.scala 35:13]
      skip @[Decoupled.scala 226:17]
    when _T_293 : @[Decoupled.scala 230:17]
      node wrap_1 = eq(value_1, UInt<1>("h01")) @[Counter.scala 34:24]
      node _T_321 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_322 = tail(_T_321, 1) @[Counter.scala 35:22]
      value_1 <= _T_322 @[Counter.scala 35:13]
      skip @[Decoupled.scala 230:17]
    node _T_323 = neq(_T_290, _T_293) @[Decoupled.scala 233:16]
    when _T_323 : @[Decoupled.scala 233:28]
      _T_282 <= _T_290 @[Decoupled.scala 234:16]
      skip @[Decoupled.scala 233:28]
    node _T_325 = eq(_T_286, UInt<1>("h00")) @[Decoupled.scala 237:19]
    io.deq.valid <= _T_325 @[Decoupled.scala 237:16]
    node _T_327 = eq(_T_287, UInt<1>("h00")) @[Decoupled.scala 238:19]
    io.enq.ready <= _T_327 @[Decoupled.scala 238:16]
    infer mport _T_328 = _T_275[value_1], clock @[Decoupled.scala 239:21]
    io.deq.bits.pc <= _T_328.pc @[Decoupled.scala 239:15]
    io.deq.bits.inst32.bits <= _T_328.inst32.bits @[Decoupled.scala 239:15]
    io.deq.bits.inst32.valid <= _T_328.inst32.valid @[Decoupled.scala 239:15]
    io.deq.bits.tag <= _T_328.tag @[Decoupled.scala 239:15]
    io.deq.bits.nzcv_en <= _T_328.nzcv_en @[Decoupled.scala 239:15]
    io.deq.bits.op <= _T_328.op @[Decoupled.scala 239:15]
    io.deq.bits.itype <= _T_328.itype @[Decoupled.scala 239:15]
    io.deq.bits.cond.bits <= _T_328.cond.bits @[Decoupled.scala 239:15]
    io.deq.bits.cond.valid <= _T_328.cond.valid @[Decoupled.scala 239:15]
    io.deq.bits.shift_type <= _T_328.shift_type @[Decoupled.scala 239:15]
    io.deq.bits.shift_val.bits <= _T_328.shift_val.bits @[Decoupled.scala 239:15]
    io.deq.bits.shift_val.valid <= _T_328.shift_val.valid @[Decoupled.scala 239:15]
    io.deq.bits.imm.bits <= _T_328.imm.bits @[Decoupled.scala 239:15]
    io.deq.bits.imm.valid <= _T_328.imm.valid @[Decoupled.scala 239:15]
    io.deq.bits.rs2.bits <= _T_328.rs2.bits @[Decoupled.scala 239:15]
    io.deq.bits.rs2.valid <= _T_328.rs2.valid @[Decoupled.scala 239:15]
    io.deq.bits.rs1.bits <= _T_328.rs1.bits @[Decoupled.scala 239:15]
    io.deq.bits.rs1.valid <= _T_328.rs1.valid @[Decoupled.scala 239:15]
    io.deq.bits.rd.bits <= _T_328.rd.bits @[Decoupled.scala 239:15]
    io.deq.bits.rd.valid <= _T_328.rd.valid @[Decoupled.scala 239:15]
    when io.enq.valid : @[Decoupled.scala 242:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 242:40]
      skip @[Decoupled.scala 242:25]
    when _T_286 : @[Decoupled.scala 243:18]
      io.deq.bits.pc <= io.enq.bits.pc @[Decoupled.scala 244:19]
      io.deq.bits.inst32.bits <= io.enq.bits.inst32.bits @[Decoupled.scala 244:19]
      io.deq.bits.inst32.valid <= io.enq.bits.inst32.valid @[Decoupled.scala 244:19]
      io.deq.bits.tag <= io.enq.bits.tag @[Decoupled.scala 244:19]
      io.deq.bits.nzcv_en <= io.enq.bits.nzcv_en @[Decoupled.scala 244:19]
      io.deq.bits.op <= io.enq.bits.op @[Decoupled.scala 244:19]
      io.deq.bits.itype <= io.enq.bits.itype @[Decoupled.scala 244:19]
      io.deq.bits.cond.bits <= io.enq.bits.cond.bits @[Decoupled.scala 244:19]
      io.deq.bits.cond.valid <= io.enq.bits.cond.valid @[Decoupled.scala 244:19]
      io.deq.bits.shift_type <= io.enq.bits.shift_type @[Decoupled.scala 244:19]
      io.deq.bits.shift_val.bits <= io.enq.bits.shift_val.bits @[Decoupled.scala 244:19]
      io.deq.bits.shift_val.valid <= io.enq.bits.shift_val.valid @[Decoupled.scala 244:19]
      io.deq.bits.imm.bits <= io.enq.bits.imm.bits @[Decoupled.scala 244:19]
      io.deq.bits.imm.valid <= io.enq.bits.imm.valid @[Decoupled.scala 244:19]
      io.deq.bits.rs2.bits <= io.enq.bits.rs2.bits @[Decoupled.scala 244:19]
      io.deq.bits.rs2.valid <= io.enq.bits.rs2.valid @[Decoupled.scala 244:19]
      io.deq.bits.rs1.bits <= io.enq.bits.rs1.bits @[Decoupled.scala 244:19]
      io.deq.bits.rs1.valid <= io.enq.bits.rs1.valid @[Decoupled.scala 244:19]
      io.deq.bits.rd.bits <= io.enq.bits.rd.bits @[Decoupled.scala 244:19]
      io.deq.bits.rd.valid <= io.enq.bits.rd.valid @[Decoupled.scala 244:19]
      _T_293 <= UInt<1>("h00") @[Decoupled.scala 245:14]
      when io.deq.ready : @[Decoupled.scala 246:27]
        _T_290 <= UInt<1>("h00") @[Decoupled.scala 246:36]
        skip @[Decoupled.scala 246:27]
      skip @[Decoupled.scala 243:18]
    when io.deq.ready : @[Decoupled.scala 251:25]
      io.enq.ready <= UInt<1>("h01") @[Decoupled.scala 251:40]
      skip @[Decoupled.scala 251:25]
    node _T_353 = sub(value, value_1) @[Decoupled.scala 254:40]
    node _T_354 = asUInt(_T_353) @[Decoupled.scala 254:40]
    node _T_355 = tail(_T_354, 1) @[Decoupled.scala 254:40]
    node _T_356 = and(_T_282, _T_283) @[Decoupled.scala 256:32]
    node _T_359 = mux(_T_356, UInt<2>("h02"), UInt<1>("h00")) @[Decoupled.scala 256:20]
    node _T_360 = or(_T_359, _T_355) @[Decoupled.scala 256:62]
    io.count <= _T_360 @[Decoupled.scala 256:14]
    
  module Queue_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, count : UInt<2>}
    
    cmem _T_275 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}[2] @[Decoupled.scala 215:24]
    reg value : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Counter.scala 26:33]
    reg _T_282 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 218:35]
    node _T_283 = eq(value, value_1) @[Decoupled.scala 220:41]
    node _T_285 = eq(_T_282, UInt<1>("h00")) @[Decoupled.scala 221:36]
    node _T_286 = and(_T_283, _T_285) @[Decoupled.scala 221:33]
    node _T_287 = and(_T_283, _T_282) @[Decoupled.scala 222:32]
    node _T_288 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 37:37]
    wire _T_290 : UInt<1>
    _T_290 <= _T_288
    node _T_291 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 37:37]
    wire _T_293 : UInt<1>
    _T_293 <= _T_291
    when _T_290 : @[Decoupled.scala 226:17]
      infer mport _T_294 = _T_275[value], clock @[Decoupled.scala 227:8]
      _T_294.pc <= io.enq.bits.pc @[Decoupled.scala 227:24]
      _T_294.inst32.bits <= io.enq.bits.inst32.bits @[Decoupled.scala 227:24]
      _T_294.inst32.valid <= io.enq.bits.inst32.valid @[Decoupled.scala 227:24]
      _T_294.tag <= io.enq.bits.tag @[Decoupled.scala 227:24]
      _T_294.nzcv_en <= io.enq.bits.nzcv_en @[Decoupled.scala 227:24]
      _T_294.op <= io.enq.bits.op @[Decoupled.scala 227:24]
      _T_294.itype <= io.enq.bits.itype @[Decoupled.scala 227:24]
      _T_294.cond.bits <= io.enq.bits.cond.bits @[Decoupled.scala 227:24]
      _T_294.cond.valid <= io.enq.bits.cond.valid @[Decoupled.scala 227:24]
      _T_294.shift_type <= io.enq.bits.shift_type @[Decoupled.scala 227:24]
      _T_294.shift_val.bits <= io.enq.bits.shift_val.bits @[Decoupled.scala 227:24]
      _T_294.shift_val.valid <= io.enq.bits.shift_val.valid @[Decoupled.scala 227:24]
      _T_294.imm.bits <= io.enq.bits.imm.bits @[Decoupled.scala 227:24]
      _T_294.imm.valid <= io.enq.bits.imm.valid @[Decoupled.scala 227:24]
      _T_294.rs2.bits <= io.enq.bits.rs2.bits @[Decoupled.scala 227:24]
      _T_294.rs2.valid <= io.enq.bits.rs2.valid @[Decoupled.scala 227:24]
      _T_294.rs1.bits <= io.enq.bits.rs1.bits @[Decoupled.scala 227:24]
      _T_294.rs1.valid <= io.enq.bits.rs1.valid @[Decoupled.scala 227:24]
      _T_294.rd.bits <= io.enq.bits.rd.bits @[Decoupled.scala 227:24]
      _T_294.rd.valid <= io.enq.bits.rd.valid @[Decoupled.scala 227:24]
      node wrap = eq(value, UInt<1>("h01")) @[Counter.scala 34:24]
      node _T_317 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_318 = tail(_T_317, 1) @[Counter.scala 35:22]
      value <= _T_318 @[Counter.scala 35:13]
      skip @[Decoupled.scala 226:17]
    when _T_293 : @[Decoupled.scala 230:17]
      node wrap_1 = eq(value_1, UInt<1>("h01")) @[Counter.scala 34:24]
      node _T_321 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_322 = tail(_T_321, 1) @[Counter.scala 35:22]
      value_1 <= _T_322 @[Counter.scala 35:13]
      skip @[Decoupled.scala 230:17]
    node _T_323 = neq(_T_290, _T_293) @[Decoupled.scala 233:16]
    when _T_323 : @[Decoupled.scala 233:28]
      _T_282 <= _T_290 @[Decoupled.scala 234:16]
      skip @[Decoupled.scala 233:28]
    node _T_325 = eq(_T_286, UInt<1>("h00")) @[Decoupled.scala 237:19]
    io.deq.valid <= _T_325 @[Decoupled.scala 237:16]
    node _T_327 = eq(_T_287, UInt<1>("h00")) @[Decoupled.scala 238:19]
    io.enq.ready <= _T_327 @[Decoupled.scala 238:16]
    infer mport _T_328 = _T_275[value_1], clock @[Decoupled.scala 239:21]
    io.deq.bits.pc <= _T_328.pc @[Decoupled.scala 239:15]
    io.deq.bits.inst32.bits <= _T_328.inst32.bits @[Decoupled.scala 239:15]
    io.deq.bits.inst32.valid <= _T_328.inst32.valid @[Decoupled.scala 239:15]
    io.deq.bits.tag <= _T_328.tag @[Decoupled.scala 239:15]
    io.deq.bits.nzcv_en <= _T_328.nzcv_en @[Decoupled.scala 239:15]
    io.deq.bits.op <= _T_328.op @[Decoupled.scala 239:15]
    io.deq.bits.itype <= _T_328.itype @[Decoupled.scala 239:15]
    io.deq.bits.cond.bits <= _T_328.cond.bits @[Decoupled.scala 239:15]
    io.deq.bits.cond.valid <= _T_328.cond.valid @[Decoupled.scala 239:15]
    io.deq.bits.shift_type <= _T_328.shift_type @[Decoupled.scala 239:15]
    io.deq.bits.shift_val.bits <= _T_328.shift_val.bits @[Decoupled.scala 239:15]
    io.deq.bits.shift_val.valid <= _T_328.shift_val.valid @[Decoupled.scala 239:15]
    io.deq.bits.imm.bits <= _T_328.imm.bits @[Decoupled.scala 239:15]
    io.deq.bits.imm.valid <= _T_328.imm.valid @[Decoupled.scala 239:15]
    io.deq.bits.rs2.bits <= _T_328.rs2.bits @[Decoupled.scala 239:15]
    io.deq.bits.rs2.valid <= _T_328.rs2.valid @[Decoupled.scala 239:15]
    io.deq.bits.rs1.bits <= _T_328.rs1.bits @[Decoupled.scala 239:15]
    io.deq.bits.rs1.valid <= _T_328.rs1.valid @[Decoupled.scala 239:15]
    io.deq.bits.rd.bits <= _T_328.rd.bits @[Decoupled.scala 239:15]
    io.deq.bits.rd.valid <= _T_328.rd.valid @[Decoupled.scala 239:15]
    when io.enq.valid : @[Decoupled.scala 242:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 242:40]
      skip @[Decoupled.scala 242:25]
    when _T_286 : @[Decoupled.scala 243:18]
      io.deq.bits.pc <= io.enq.bits.pc @[Decoupled.scala 244:19]
      io.deq.bits.inst32.bits <= io.enq.bits.inst32.bits @[Decoupled.scala 244:19]
      io.deq.bits.inst32.valid <= io.enq.bits.inst32.valid @[Decoupled.scala 244:19]
      io.deq.bits.tag <= io.enq.bits.tag @[Decoupled.scala 244:19]
      io.deq.bits.nzcv_en <= io.enq.bits.nzcv_en @[Decoupled.scala 244:19]
      io.deq.bits.op <= io.enq.bits.op @[Decoupled.scala 244:19]
      io.deq.bits.itype <= io.enq.bits.itype @[Decoupled.scala 244:19]
      io.deq.bits.cond.bits <= io.enq.bits.cond.bits @[Decoupled.scala 244:19]
      io.deq.bits.cond.valid <= io.enq.bits.cond.valid @[Decoupled.scala 244:19]
      io.deq.bits.shift_type <= io.enq.bits.shift_type @[Decoupled.scala 244:19]
      io.deq.bits.shift_val.bits <= io.enq.bits.shift_val.bits @[Decoupled.scala 244:19]
      io.deq.bits.shift_val.valid <= io.enq.bits.shift_val.valid @[Decoupled.scala 244:19]
      io.deq.bits.imm.bits <= io.enq.bits.imm.bits @[Decoupled.scala 244:19]
      io.deq.bits.imm.valid <= io.enq.bits.imm.valid @[Decoupled.scala 244:19]
      io.deq.bits.rs2.bits <= io.enq.bits.rs2.bits @[Decoupled.scala 244:19]
      io.deq.bits.rs2.valid <= io.enq.bits.rs2.valid @[Decoupled.scala 244:19]
      io.deq.bits.rs1.bits <= io.enq.bits.rs1.bits @[Decoupled.scala 244:19]
      io.deq.bits.rs1.valid <= io.enq.bits.rs1.valid @[Decoupled.scala 244:19]
      io.deq.bits.rd.bits <= io.enq.bits.rd.bits @[Decoupled.scala 244:19]
      io.deq.bits.rd.valid <= io.enq.bits.rd.valid @[Decoupled.scala 244:19]
      _T_293 <= UInt<1>("h00") @[Decoupled.scala 245:14]
      when io.deq.ready : @[Decoupled.scala 246:27]
        _T_290 <= UInt<1>("h00") @[Decoupled.scala 246:36]
        skip @[Decoupled.scala 246:27]
      skip @[Decoupled.scala 243:18]
    when io.deq.ready : @[Decoupled.scala 251:25]
      io.enq.ready <= UInt<1>("h01") @[Decoupled.scala 251:40]
      skip @[Decoupled.scala 251:25]
    node _T_353 = sub(value, value_1) @[Decoupled.scala 254:40]
    node _T_354 = asUInt(_T_353) @[Decoupled.scala 254:40]
    node _T_355 = tail(_T_354, 1) @[Decoupled.scala 254:40]
    node _T_356 = and(_T_282, _T_283) @[Decoupled.scala 256:32]
    node _T_359 = mux(_T_356, UInt<2>("h02"), UInt<1>("h00")) @[Decoupled.scala 256:20]
    node _T_360 = or(_T_359, _T_355) @[Decoupled.scala 256:62]
    io.count <= _T_360 @[Decoupled.scala 256:14]
    
  module RRArbiter : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ready : UInt<2>, next : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}}
    
    node valid = neq(io.ready, UInt<1>("h00")) @[issue.scala 35:24]
    reg curr : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[issue.scala 36:21]
    node _T_16 = dshr(io.ready, curr) @[issue.scala 20:22]
    node _T_17 = not(curr) @[issue.scala 21:25]
    node _T_19 = add(_T_17, UInt<1>("h01")) @[issue.scala 21:30]
    node _T_20 = tail(_T_19, 1) @[issue.scala 21:30]
    node _T_21 = dshl(io.ready, _T_20) @[issue.scala 21:22]
    node _T_22 = or(_T_21, _T_16) @[issue.scala 22:20]
    node ready_ofst = bits(_T_22, 1, 0) @[issue.scala 23:8]
    node _T_23 = bits(ready_ofst, 0, 0) @[OneHot.scala 39:40]
    node _T_24 = bits(ready_ofst, 1, 1) @[OneHot.scala 39:40]
    node ofst = mux(_T_23, UInt<1>("h00"), UInt<1>("h01")) @[Mux.scala 31:69]
    node _T_27 = add(curr, ofst) @[issue.scala 39:19]
    node next = tail(_T_27, 1) @[issue.scala 39:19]
    io.next.bits <= next @[issue.scala 41:16]
    io.next.valid <= valid @[issue.scala 42:17]
    node _T_28 = and(io.next.ready, valid) @[issue.scala 43:22]
    when _T_28 : @[issue.scala 43:32]
      node _T_30 = add(next, UInt<1>("h01")) @[issue.scala 43:47]
      node _T_31 = tail(_T_30, 1) @[issue.scala 43:47]
      curr <= _T_31 @[issue.scala 43:39]
      skip @[issue.scala 43:32]
    
  module IssueUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip flush : UInt<1>, flip flushTag : UInt<1>, flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, flip exeReg : {valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>}}}
    
    wire _T_384 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>} @[decode.scala 74:21]
    _T_384.rd.bits <= UInt<5>("h00") @[decode.scala 77:20]
    _T_384.rs1.bits <= UInt<5>("h00") @[decode.scala 78:20]
    _T_384.rs2.bits <= UInt<5>("h00") @[decode.scala 79:20]
    _T_384.imm.bits <= UInt<26>("h00") @[decode.scala 80:20]
    _T_384.shift_val.bits <= UInt<6>("h00") @[decode.scala 81:26]
    _T_384.shift_type <= UInt<2>("h00") @[decode.scala 82:22]
    _T_384.cond.bits <= UInt<4>("h00") @[decode.scala 83:21]
    _T_384.op <= UInt<3>("h00") @[decode.scala 86:14]
    _T_384.itype <= UInt<3>("h00") @[decode.scala 87:17]
    _T_384.rd.valid <= UInt<1>("h00") @[decode.scala 90:20]
    _T_384.rs1.valid <= UInt<1>("h00") @[decode.scala 91:21]
    _T_384.rs2.valid <= UInt<1>("h00") @[decode.scala 92:21]
    _T_384.imm.valid <= UInt<1>("h00") @[decode.scala 93:21]
    _T_384.shift_val.valid <= UInt<1>("h00") @[decode.scala 94:27]
    _T_384.cond.valid <= UInt<1>("h00") @[decode.scala 95:22]
    _T_384.nzcv_en <= UInt<1>("h00") @[decode.scala 96:19]
    _T_384.inst32.bits <= UInt<32>("h00") @[decode.scala 99:23]
    _T_384.inst32.valid <= UInt<1>("h00") @[decode.scala 100:24]
    _T_384.tag <= UInt<1>("h00") @[decode.scala 101:15]
    _T_384.pc <= UInt<64>("h00") @[decode.scala 102:14]
    wire _T_426 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>} @[decode.scala 74:21]
    _T_426.rd.bits <= UInt<5>("h00") @[decode.scala 77:20]
    _T_426.rs1.bits <= UInt<5>("h00") @[decode.scala 78:20]
    _T_426.rs2.bits <= UInt<5>("h00") @[decode.scala 79:20]
    _T_426.imm.bits <= UInt<26>("h00") @[decode.scala 80:20]
    _T_426.shift_val.bits <= UInt<6>("h00") @[decode.scala 81:26]
    _T_426.shift_type <= UInt<2>("h00") @[decode.scala 82:22]
    _T_426.cond.bits <= UInt<4>("h00") @[decode.scala 83:21]
    _T_426.op <= UInt<3>("h00") @[decode.scala 86:14]
    _T_426.itype <= UInt<3>("h00") @[decode.scala 87:17]
    _T_426.rd.valid <= UInt<1>("h00") @[decode.scala 90:20]
    _T_426.rs1.valid <= UInt<1>("h00") @[decode.scala 91:21]
    _T_426.rs2.valid <= UInt<1>("h00") @[decode.scala 92:21]
    _T_426.imm.valid <= UInt<1>("h00") @[decode.scala 93:21]
    _T_426.shift_val.valid <= UInt<1>("h00") @[decode.scala 94:27]
    _T_426.cond.valid <= UInt<1>("h00") @[decode.scala 95:22]
    _T_426.nzcv_en <= UInt<1>("h00") @[decode.scala 96:19]
    _T_426.inst32.bits <= UInt<32>("h00") @[decode.scala 99:23]
    _T_426.inst32.valid <= UInt<1>("h00") @[decode.scala 100:24]
    _T_426.tag <= UInt<1>("h00") @[decode.scala 101:15]
    _T_426.pc <= UInt<64>("h00") @[decode.scala 102:14]
    wire _T_530 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}[2] @[issue.scala 85:35]
    _T_530[0].pc <= _T_384.pc @[issue.scala 85:35]
    _T_530[0].inst32.bits <= _T_384.inst32.bits @[issue.scala 85:35]
    _T_530[0].inst32.valid <= _T_384.inst32.valid @[issue.scala 85:35]
    _T_530[0].tag <= _T_384.tag @[issue.scala 85:35]
    _T_530[0].nzcv_en <= _T_384.nzcv_en @[issue.scala 85:35]
    _T_530[0].op <= _T_384.op @[issue.scala 85:35]
    _T_530[0].itype <= _T_384.itype @[issue.scala 85:35]
    _T_530[0].cond.bits <= _T_384.cond.bits @[issue.scala 85:35]
    _T_530[0].cond.valid <= _T_384.cond.valid @[issue.scala 85:35]
    _T_530[0].shift_type <= _T_384.shift_type @[issue.scala 85:35]
    _T_530[0].shift_val.bits <= _T_384.shift_val.bits @[issue.scala 85:35]
    _T_530[0].shift_val.valid <= _T_384.shift_val.valid @[issue.scala 85:35]
    _T_530[0].imm.bits <= _T_384.imm.bits @[issue.scala 85:35]
    _T_530[0].imm.valid <= _T_384.imm.valid @[issue.scala 85:35]
    _T_530[0].rs2.bits <= _T_384.rs2.bits @[issue.scala 85:35]
    _T_530[0].rs2.valid <= _T_384.rs2.valid @[issue.scala 85:35]
    _T_530[0].rs1.bits <= _T_384.rs1.bits @[issue.scala 85:35]
    _T_530[0].rs1.valid <= _T_384.rs1.valid @[issue.scala 85:35]
    _T_530[0].rd.bits <= _T_384.rd.bits @[issue.scala 85:35]
    _T_530[0].rd.valid <= _T_384.rd.valid @[issue.scala 85:35]
    _T_530[1].pc <= _T_426.pc @[issue.scala 85:35]
    _T_530[1].inst32.bits <= _T_426.inst32.bits @[issue.scala 85:35]
    _T_530[1].inst32.valid <= _T_426.inst32.valid @[issue.scala 85:35]
    _T_530[1].tag <= _T_426.tag @[issue.scala 85:35]
    _T_530[1].nzcv_en <= _T_426.nzcv_en @[issue.scala 85:35]
    _T_530[1].op <= _T_426.op @[issue.scala 85:35]
    _T_530[1].itype <= _T_426.itype @[issue.scala 85:35]
    _T_530[1].cond.bits <= _T_426.cond.bits @[issue.scala 85:35]
    _T_530[1].cond.valid <= _T_426.cond.valid @[issue.scala 85:35]
    _T_530[1].shift_type <= _T_426.shift_type @[issue.scala 85:35]
    _T_530[1].shift_val.bits <= _T_426.shift_val.bits @[issue.scala 85:35]
    _T_530[1].shift_val.valid <= _T_426.shift_val.valid @[issue.scala 85:35]
    _T_530[1].imm.bits <= _T_426.imm.bits @[issue.scala 85:35]
    _T_530[1].imm.valid <= _T_426.imm.valid @[issue.scala 85:35]
    _T_530[1].rs2.bits <= _T_426.rs2.bits @[issue.scala 85:35]
    _T_530[1].rs2.valid <= _T_426.rs2.valid @[issue.scala 85:35]
    _T_530[1].rs1.bits <= _T_426.rs1.bits @[issue.scala 85:35]
    _T_530[1].rs1.valid <= _T_426.rs1.valid @[issue.scala 85:35]
    _T_530[1].rd.bits <= _T_426.rd.bits @[issue.scala 85:35]
    _T_530[1].rd.valid <= _T_426.rd.valid @[issue.scala 85:35]
    reg reg_pipe : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}[2], clock with : (reset => (reset, _T_530)) @[issue.scala 85:27]
    wire _T_1098 : UInt<1>[2] @[issue.scala 86:35]
    _T_1098[0] <= UInt<1>("h00") @[issue.scala 86:35]
    _T_1098[1] <= UInt<1>("h00") @[issue.scala 86:35]
    reg reg_pipe_v : UInt<1>[2], clock with : (reset => (reset, _T_1098)) @[issue.scala 86:27]
    wire _T_1126 : UInt<1>[2] @[issue.scala 87:36]
    _T_1126[0] <= UInt<1>("h00") @[issue.scala 87:36]
    _T_1126[1] <= UInt<1>("h00") @[issue.scala 87:36]
    wire sig_pipe_r : UInt<1>[2]
    sig_pipe_r[0] <= _T_1126[0]
    sig_pipe_r[1] <= _T_1126[1]
    node _T_1149 = bits(reset, 0, 0) @[issue.scala 100:51]
    node _T_1151 = eq(UInt<1>("h00"), io.flushTag) @[issue.scala 100:68]
    node _T_1152 = and(_T_1151, io.flush) @[issue.scala 100:84]
    node _T_1153 = or(_T_1149, _T_1152) @[issue.scala 100:58]
    inst Queue of Queue @[issue.scala 100:106]
    Queue.clock <= clock
    Queue.reset <= _T_1153
    node _T_1174 = bits(reset, 0, 0) @[issue.scala 100:51]
    node _T_1176 = eq(UInt<1>("h01"), io.flushTag) @[issue.scala 100:68]
    node _T_1177 = and(_T_1176, io.flush) @[issue.scala 100:84]
    node _T_1178 = or(_T_1174, _T_1177) @[issue.scala 100:58]
    inst Queue_1 of Queue_1 @[issue.scala 100:106]
    Queue_1.clock <= clock
    Queue_1.reset <= _T_1178
    wire fifo_vec : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, count : UInt<2>}[2] @[issue.scala 99:25]
    fifo_vec[0].count <= Queue.io.count @[issue.scala 99:25]
    fifo_vec[0].deq.bits.pc <= Queue.io.deq.bits.pc @[issue.scala 99:25]
    fifo_vec[0].deq.bits.inst32.bits <= Queue.io.deq.bits.inst32.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.inst32.valid <= Queue.io.deq.bits.inst32.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.tag <= Queue.io.deq.bits.tag @[issue.scala 99:25]
    fifo_vec[0].deq.bits.nzcv_en <= Queue.io.deq.bits.nzcv_en @[issue.scala 99:25]
    fifo_vec[0].deq.bits.op <= Queue.io.deq.bits.op @[issue.scala 99:25]
    fifo_vec[0].deq.bits.itype <= Queue.io.deq.bits.itype @[issue.scala 99:25]
    fifo_vec[0].deq.bits.cond.bits <= Queue.io.deq.bits.cond.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.cond.valid <= Queue.io.deq.bits.cond.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.shift_type <= Queue.io.deq.bits.shift_type @[issue.scala 99:25]
    fifo_vec[0].deq.bits.shift_val.bits <= Queue.io.deq.bits.shift_val.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.shift_val.valid <= Queue.io.deq.bits.shift_val.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.imm.bits <= Queue.io.deq.bits.imm.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.imm.valid <= Queue.io.deq.bits.imm.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rs2.bits <= Queue.io.deq.bits.rs2.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rs2.valid <= Queue.io.deq.bits.rs2.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rs1.bits <= Queue.io.deq.bits.rs1.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rs1.valid <= Queue.io.deq.bits.rs1.valid @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rd.bits <= Queue.io.deq.bits.rd.bits @[issue.scala 99:25]
    fifo_vec[0].deq.bits.rd.valid <= Queue.io.deq.bits.rd.valid @[issue.scala 99:25]
    fifo_vec[0].deq.valid <= Queue.io.deq.valid @[issue.scala 99:25]
    Queue.io.deq.ready <= fifo_vec[0].deq.ready @[issue.scala 99:25]
    Queue.io.enq.bits.pc <= fifo_vec[0].enq.bits.pc @[issue.scala 99:25]
    Queue.io.enq.bits.inst32.bits <= fifo_vec[0].enq.bits.inst32.bits @[issue.scala 99:25]
    Queue.io.enq.bits.inst32.valid <= fifo_vec[0].enq.bits.inst32.valid @[issue.scala 99:25]
    Queue.io.enq.bits.tag <= fifo_vec[0].enq.bits.tag @[issue.scala 99:25]
    Queue.io.enq.bits.nzcv_en <= fifo_vec[0].enq.bits.nzcv_en @[issue.scala 99:25]
    Queue.io.enq.bits.op <= fifo_vec[0].enq.bits.op @[issue.scala 99:25]
    Queue.io.enq.bits.itype <= fifo_vec[0].enq.bits.itype @[issue.scala 99:25]
    Queue.io.enq.bits.cond.bits <= fifo_vec[0].enq.bits.cond.bits @[issue.scala 99:25]
    Queue.io.enq.bits.cond.valid <= fifo_vec[0].enq.bits.cond.valid @[issue.scala 99:25]
    Queue.io.enq.bits.shift_type <= fifo_vec[0].enq.bits.shift_type @[issue.scala 99:25]
    Queue.io.enq.bits.shift_val.bits <= fifo_vec[0].enq.bits.shift_val.bits @[issue.scala 99:25]
    Queue.io.enq.bits.shift_val.valid <= fifo_vec[0].enq.bits.shift_val.valid @[issue.scala 99:25]
    Queue.io.enq.bits.imm.bits <= fifo_vec[0].enq.bits.imm.bits @[issue.scala 99:25]
    Queue.io.enq.bits.imm.valid <= fifo_vec[0].enq.bits.imm.valid @[issue.scala 99:25]
    Queue.io.enq.bits.rs2.bits <= fifo_vec[0].enq.bits.rs2.bits @[issue.scala 99:25]
    Queue.io.enq.bits.rs2.valid <= fifo_vec[0].enq.bits.rs2.valid @[issue.scala 99:25]
    Queue.io.enq.bits.rs1.bits <= fifo_vec[0].enq.bits.rs1.bits @[issue.scala 99:25]
    Queue.io.enq.bits.rs1.valid <= fifo_vec[0].enq.bits.rs1.valid @[issue.scala 99:25]
    Queue.io.enq.bits.rd.bits <= fifo_vec[0].enq.bits.rd.bits @[issue.scala 99:25]
    Queue.io.enq.bits.rd.valid <= fifo_vec[0].enq.bits.rd.valid @[issue.scala 99:25]
    Queue.io.enq.valid <= fifo_vec[0].enq.valid @[issue.scala 99:25]
    fifo_vec[0].enq.ready <= Queue.io.enq.ready @[issue.scala 99:25]
    fifo_vec[1].count <= Queue_1.io.count @[issue.scala 99:25]
    fifo_vec[1].deq.bits.pc <= Queue_1.io.deq.bits.pc @[issue.scala 99:25]
    fifo_vec[1].deq.bits.inst32.bits <= Queue_1.io.deq.bits.inst32.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.inst32.valid <= Queue_1.io.deq.bits.inst32.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.tag <= Queue_1.io.deq.bits.tag @[issue.scala 99:25]
    fifo_vec[1].deq.bits.nzcv_en <= Queue_1.io.deq.bits.nzcv_en @[issue.scala 99:25]
    fifo_vec[1].deq.bits.op <= Queue_1.io.deq.bits.op @[issue.scala 99:25]
    fifo_vec[1].deq.bits.itype <= Queue_1.io.deq.bits.itype @[issue.scala 99:25]
    fifo_vec[1].deq.bits.cond.bits <= Queue_1.io.deq.bits.cond.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.cond.valid <= Queue_1.io.deq.bits.cond.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.shift_type <= Queue_1.io.deq.bits.shift_type @[issue.scala 99:25]
    fifo_vec[1].deq.bits.shift_val.bits <= Queue_1.io.deq.bits.shift_val.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.shift_val.valid <= Queue_1.io.deq.bits.shift_val.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.imm.bits <= Queue_1.io.deq.bits.imm.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.imm.valid <= Queue_1.io.deq.bits.imm.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rs2.bits <= Queue_1.io.deq.bits.rs2.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rs2.valid <= Queue_1.io.deq.bits.rs2.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rs1.bits <= Queue_1.io.deq.bits.rs1.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rs1.valid <= Queue_1.io.deq.bits.rs1.valid @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rd.bits <= Queue_1.io.deq.bits.rd.bits @[issue.scala 99:25]
    fifo_vec[1].deq.bits.rd.valid <= Queue_1.io.deq.bits.rd.valid @[issue.scala 99:25]
    fifo_vec[1].deq.valid <= Queue_1.io.deq.valid @[issue.scala 99:25]
    Queue_1.io.deq.ready <= fifo_vec[1].deq.ready @[issue.scala 99:25]
    Queue_1.io.enq.bits.pc <= fifo_vec[1].enq.bits.pc @[issue.scala 99:25]
    Queue_1.io.enq.bits.inst32.bits <= fifo_vec[1].enq.bits.inst32.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.inst32.valid <= fifo_vec[1].enq.bits.inst32.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.tag <= fifo_vec[1].enq.bits.tag @[issue.scala 99:25]
    Queue_1.io.enq.bits.nzcv_en <= fifo_vec[1].enq.bits.nzcv_en @[issue.scala 99:25]
    Queue_1.io.enq.bits.op <= fifo_vec[1].enq.bits.op @[issue.scala 99:25]
    Queue_1.io.enq.bits.itype <= fifo_vec[1].enq.bits.itype @[issue.scala 99:25]
    Queue_1.io.enq.bits.cond.bits <= fifo_vec[1].enq.bits.cond.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.cond.valid <= fifo_vec[1].enq.bits.cond.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.shift_type <= fifo_vec[1].enq.bits.shift_type @[issue.scala 99:25]
    Queue_1.io.enq.bits.shift_val.bits <= fifo_vec[1].enq.bits.shift_val.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.shift_val.valid <= fifo_vec[1].enq.bits.shift_val.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.imm.bits <= fifo_vec[1].enq.bits.imm.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.imm.valid <= fifo_vec[1].enq.bits.imm.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.rs2.bits <= fifo_vec[1].enq.bits.rs2.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.rs2.valid <= fifo_vec[1].enq.bits.rs2.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.rs1.bits <= fifo_vec[1].enq.bits.rs1.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.rs1.valid <= fifo_vec[1].enq.bits.rs1.valid @[issue.scala 99:25]
    Queue_1.io.enq.bits.rd.bits <= fifo_vec[1].enq.bits.rd.bits @[issue.scala 99:25]
    Queue_1.io.enq.bits.rd.valid <= fifo_vec[1].enq.bits.rd.valid @[issue.scala 99:25]
    Queue_1.io.enq.valid <= fifo_vec[1].enq.valid @[issue.scala 99:25]
    fifo_vec[1].enq.ready <= Queue_1.io.enq.ready @[issue.scala 99:25]
    inst arbiter of RRArbiter @[issue.scala 107:29]
    arbiter.clock <= clock
    arbiter.reset <= reset
    wire sig_pipe_i : UInt<1>[2] @[issue.scala 108:30]
    sig_pipe_i[0] <= UInt<1>("h00") @[issue.scala 108:30]
    sig_pipe_i[1] <= UInt<1>("h00") @[issue.scala 108:30]
    wire sig_next_idx : UInt<1>
    sig_next_idx <= UInt<1>("h00")
    wire exe_stall : UInt<1>
    exe_stall <= UInt<1>("h00")
    wire mem_stall : UInt<1>
    mem_stall <= UInt<1>("h00")
    fifo_vec[0].enq.valid <= UInt<1>("h00") @[issue.scala 119:17]
    fifo_vec[0].enq.bits.pc <= io.enq.bits.pc @[issue.scala 120:16]
    fifo_vec[0].enq.bits.inst32.bits <= io.enq.bits.inst32.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.inst32.valid <= io.enq.bits.inst32.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.tag <= io.enq.bits.tag @[issue.scala 120:16]
    fifo_vec[0].enq.bits.nzcv_en <= io.enq.bits.nzcv_en @[issue.scala 120:16]
    fifo_vec[0].enq.bits.op <= io.enq.bits.op @[issue.scala 120:16]
    fifo_vec[0].enq.bits.itype <= io.enq.bits.itype @[issue.scala 120:16]
    fifo_vec[0].enq.bits.cond.bits <= io.enq.bits.cond.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.cond.valid <= io.enq.bits.cond.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.shift_type <= io.enq.bits.shift_type @[issue.scala 120:16]
    fifo_vec[0].enq.bits.shift_val.bits <= io.enq.bits.shift_val.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.shift_val.valid <= io.enq.bits.shift_val.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.imm.bits <= io.enq.bits.imm.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.imm.valid <= io.enq.bits.imm.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rs2.bits <= io.enq.bits.rs2.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rs2.valid <= io.enq.bits.rs2.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rs1.bits <= io.enq.bits.rs1.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rs1.valid <= io.enq.bits.rs1.valid @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rd.bits <= io.enq.bits.rd.bits @[issue.scala 120:16]
    fifo_vec[0].enq.bits.rd.valid <= io.enq.bits.rd.valid @[issue.scala 120:16]
    fifo_vec[1].enq.valid <= UInt<1>("h00") @[issue.scala 119:17]
    fifo_vec[1].enq.bits.pc <= io.enq.bits.pc @[issue.scala 120:16]
    fifo_vec[1].enq.bits.inst32.bits <= io.enq.bits.inst32.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.inst32.valid <= io.enq.bits.inst32.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.tag <= io.enq.bits.tag @[issue.scala 120:16]
    fifo_vec[1].enq.bits.nzcv_en <= io.enq.bits.nzcv_en @[issue.scala 120:16]
    fifo_vec[1].enq.bits.op <= io.enq.bits.op @[issue.scala 120:16]
    fifo_vec[1].enq.bits.itype <= io.enq.bits.itype @[issue.scala 120:16]
    fifo_vec[1].enq.bits.cond.bits <= io.enq.bits.cond.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.cond.valid <= io.enq.bits.cond.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.shift_type <= io.enq.bits.shift_type @[issue.scala 120:16]
    fifo_vec[1].enq.bits.shift_val.bits <= io.enq.bits.shift_val.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.shift_val.valid <= io.enq.bits.shift_val.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.imm.bits <= io.enq.bits.imm.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.imm.valid <= io.enq.bits.imm.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rs2.bits <= io.enq.bits.rs2.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rs2.valid <= io.enq.bits.rs2.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rs1.bits <= io.enq.bits.rs1.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rs1.valid <= io.enq.bits.rs1.valid @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rd.bits <= io.enq.bits.rd.bits @[issue.scala 120:16]
    fifo_vec[1].enq.bits.rd.valid <= io.enq.bits.rd.valid @[issue.scala 120:16]
    io.enq.ready <= fifo_vec[io.enq.bits.tag].enq.ready @[issue.scala 122:16]
    fifo_vec[io.enq.bits.tag].enq.valid <= io.enq.valid @[issue.scala 123:39]
    node _T_3114 = not(reg_pipe_v[0]) @[issue.scala 128:24]
    sig_pipe_r[0] <= _T_3114 @[issue.scala 128:21]
    fifo_vec[0].deq.ready <= sig_pipe_r[0] @[issue.scala 130:29]
    node _T_3115 = mux(sig_pipe_r[0], fifo_vec[0].deq.bits, reg_pipe[0]) @[issue.scala 131:27]
    reg_pipe[0].pc <= _T_3115.pc @[issue.scala 131:21]
    reg_pipe[0].inst32.bits <= _T_3115.inst32.bits @[issue.scala 131:21]
    reg_pipe[0].inst32.valid <= _T_3115.inst32.valid @[issue.scala 131:21]
    reg_pipe[0].tag <= _T_3115.tag @[issue.scala 131:21]
    reg_pipe[0].nzcv_en <= _T_3115.nzcv_en @[issue.scala 131:21]
    reg_pipe[0].op <= _T_3115.op @[issue.scala 131:21]
    reg_pipe[0].itype <= _T_3115.itype @[issue.scala 131:21]
    reg_pipe[0].cond.bits <= _T_3115.cond.bits @[issue.scala 131:21]
    reg_pipe[0].cond.valid <= _T_3115.cond.valid @[issue.scala 131:21]
    reg_pipe[0].shift_type <= _T_3115.shift_type @[issue.scala 131:21]
    reg_pipe[0].shift_val.bits <= _T_3115.shift_val.bits @[issue.scala 131:21]
    reg_pipe[0].shift_val.valid <= _T_3115.shift_val.valid @[issue.scala 131:21]
    reg_pipe[0].imm.bits <= _T_3115.imm.bits @[issue.scala 131:21]
    reg_pipe[0].imm.valid <= _T_3115.imm.valid @[issue.scala 131:21]
    reg_pipe[0].rs2.bits <= _T_3115.rs2.bits @[issue.scala 131:21]
    reg_pipe[0].rs2.valid <= _T_3115.rs2.valid @[issue.scala 131:21]
    reg_pipe[0].rs1.bits <= _T_3115.rs1.bits @[issue.scala 131:21]
    reg_pipe[0].rs1.valid <= _T_3115.rs1.valid @[issue.scala 131:21]
    reg_pipe[0].rd.bits <= _T_3115.rd.bits @[issue.scala 131:21]
    reg_pipe[0].rd.valid <= _T_3115.rd.valid @[issue.scala 131:21]
    node _T_3136 = mux(sig_pipe_r[0], fifo_vec[0].deq.valid, reg_pipe_v[0]) @[issue.scala 132:27]
    reg_pipe_v[0] <= _T_3136 @[issue.scala 132:21]
    sig_pipe_i[0] <= reg_pipe_v[0] @[issue.scala 136:21]
    node _T_3137 = not(reg_pipe_v[1]) @[issue.scala 128:24]
    sig_pipe_r[1] <= _T_3137 @[issue.scala 128:21]
    fifo_vec[1].deq.ready <= sig_pipe_r[1] @[issue.scala 130:29]
    node _T_3138 = mux(sig_pipe_r[1], fifo_vec[1].deq.bits, reg_pipe[1]) @[issue.scala 131:27]
    reg_pipe[1].pc <= _T_3138.pc @[issue.scala 131:21]
    reg_pipe[1].inst32.bits <= _T_3138.inst32.bits @[issue.scala 131:21]
    reg_pipe[1].inst32.valid <= _T_3138.inst32.valid @[issue.scala 131:21]
    reg_pipe[1].tag <= _T_3138.tag @[issue.scala 131:21]
    reg_pipe[1].nzcv_en <= _T_3138.nzcv_en @[issue.scala 131:21]
    reg_pipe[1].op <= _T_3138.op @[issue.scala 131:21]
    reg_pipe[1].itype <= _T_3138.itype @[issue.scala 131:21]
    reg_pipe[1].cond.bits <= _T_3138.cond.bits @[issue.scala 131:21]
    reg_pipe[1].cond.valid <= _T_3138.cond.valid @[issue.scala 131:21]
    reg_pipe[1].shift_type <= _T_3138.shift_type @[issue.scala 131:21]
    reg_pipe[1].shift_val.bits <= _T_3138.shift_val.bits @[issue.scala 131:21]
    reg_pipe[1].shift_val.valid <= _T_3138.shift_val.valid @[issue.scala 131:21]
    reg_pipe[1].imm.bits <= _T_3138.imm.bits @[issue.scala 131:21]
    reg_pipe[1].imm.valid <= _T_3138.imm.valid @[issue.scala 131:21]
    reg_pipe[1].rs2.bits <= _T_3138.rs2.bits @[issue.scala 131:21]
    reg_pipe[1].rs2.valid <= _T_3138.rs2.valid @[issue.scala 131:21]
    reg_pipe[1].rs1.bits <= _T_3138.rs1.bits @[issue.scala 131:21]
    reg_pipe[1].rs1.valid <= _T_3138.rs1.valid @[issue.scala 131:21]
    reg_pipe[1].rd.bits <= _T_3138.rd.bits @[issue.scala 131:21]
    reg_pipe[1].rd.valid <= _T_3138.rd.valid @[issue.scala 131:21]
    node _T_3159 = mux(sig_pipe_r[1], fifo_vec[1].deq.valid, reg_pipe_v[1]) @[issue.scala 132:27]
    reg_pipe_v[1] <= _T_3159 @[issue.scala 132:21]
    sig_pipe_i[1] <= reg_pipe_v[1] @[issue.scala 136:21]
    node rfile_wb_pending = and(io.exeReg.valid, io.exeReg.bits.rd.valid) @[issue.scala 139:42]
    node _T_3243 = eq(reg_pipe[io.exeReg.bits.tag].rs1.bits, io.exeReg.bits.rd.bits) @[issue.scala 141:45]
    node _T_3327 = eq(reg_pipe[io.exeReg.bits.tag].rs2.bits, io.exeReg.bits.rd.bits) @[issue.scala 142:47]
    node _T_3328 = or(_T_3243, _T_3327) @[issue.scala 141:73]
    node _T_3329 = and(rfile_wb_pending, _T_3328) @[issue.scala 140:33]
    exe_stall <= _T_3329 @[issue.scala 140:13]
    node _T_3335 = eq(exe_stall, UInt<1>("h00")) @[issue.scala 143:71]
    node _T_3336 = and(reg_pipe_v[io.exeReg.bits.tag], _T_3335) @[issue.scala 143:68]
    sig_pipe_i[io.exeReg.bits.tag] <= _T_3336 @[issue.scala 143:34]
    node _T_3337 = cat(sig_pipe_i[1], sig_pipe_i[0]) @[issue.scala 147:34]
    arbiter.io.ready <= _T_3337 @[issue.scala 147:20]
    sig_next_idx <= arbiter.io.next.bits @[issue.scala 148:20]
    io.deq.bits.pc <= reg_pipe[sig_next_idx].pc @[issue.scala 150:16]
    io.deq.bits.inst32.bits <= reg_pipe[sig_next_idx].inst32.bits @[issue.scala 150:16]
    io.deq.bits.inst32.valid <= reg_pipe[sig_next_idx].inst32.valid @[issue.scala 150:16]
    io.deq.bits.tag <= reg_pipe[sig_next_idx].tag @[issue.scala 150:16]
    io.deq.bits.nzcv_en <= reg_pipe[sig_next_idx].nzcv_en @[issue.scala 150:16]
    io.deq.bits.op <= reg_pipe[sig_next_idx].op @[issue.scala 150:16]
    io.deq.bits.itype <= reg_pipe[sig_next_idx].itype @[issue.scala 150:16]
    io.deq.bits.cond.bits <= reg_pipe[sig_next_idx].cond.bits @[issue.scala 150:16]
    io.deq.bits.cond.valid <= reg_pipe[sig_next_idx].cond.valid @[issue.scala 150:16]
    io.deq.bits.shift_type <= reg_pipe[sig_next_idx].shift_type @[issue.scala 150:16]
    io.deq.bits.shift_val.bits <= reg_pipe[sig_next_idx].shift_val.bits @[issue.scala 150:16]
    io.deq.bits.shift_val.valid <= reg_pipe[sig_next_idx].shift_val.valid @[issue.scala 150:16]
    io.deq.bits.imm.bits <= reg_pipe[sig_next_idx].imm.bits @[issue.scala 150:16]
    io.deq.bits.imm.valid <= reg_pipe[sig_next_idx].imm.valid @[issue.scala 150:16]
    io.deq.bits.rs2.bits <= reg_pipe[sig_next_idx].rs2.bits @[issue.scala 150:16]
    io.deq.bits.rs2.valid <= reg_pipe[sig_next_idx].rs2.valid @[issue.scala 150:16]
    io.deq.bits.rs1.bits <= reg_pipe[sig_next_idx].rs1.bits @[issue.scala 150:16]
    io.deq.bits.rs1.valid <= reg_pipe[sig_next_idx].rs1.valid @[issue.scala 150:16]
    io.deq.bits.rd.bits <= reg_pipe[sig_next_idx].rd.bits @[issue.scala 150:16]
    io.deq.bits.rd.valid <= reg_pipe[sig_next_idx].rd.valid @[issue.scala 150:16]
    io.deq.valid <= arbiter.io.next.valid @[issue.scala 151:16]
    arbiter.io.next.ready <= io.deq.ready @[issue.scala 152:25]
    node _T_3421 = and(arbiter.io.next.valid, io.deq.ready) @[issue.scala 156:30]
    when _T_3421 : @[issue.scala 156:47]
      fifo_vec[sig_next_idx].deq.ready <= UInt<1>("h01") @[issue.scala 157:38]
      reg_pipe_v[sig_next_idx] <= fifo_vec[sig_next_idx].deq.valid @[issue.scala 158:30]
      reg_pipe[sig_next_idx].pc <= fifo_vec[sig_next_idx].deq.bits.pc @[issue.scala 159:28]
      reg_pipe[sig_next_idx].inst32.bits <= fifo_vec[sig_next_idx].deq.bits.inst32.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].inst32.valid <= fifo_vec[sig_next_idx].deq.bits.inst32.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].tag <= fifo_vec[sig_next_idx].deq.bits.tag @[issue.scala 159:28]
      reg_pipe[sig_next_idx].nzcv_en <= fifo_vec[sig_next_idx].deq.bits.nzcv_en @[issue.scala 159:28]
      reg_pipe[sig_next_idx].op <= fifo_vec[sig_next_idx].deq.bits.op @[issue.scala 159:28]
      reg_pipe[sig_next_idx].itype <= fifo_vec[sig_next_idx].deq.bits.itype @[issue.scala 159:28]
      reg_pipe[sig_next_idx].cond.bits <= fifo_vec[sig_next_idx].deq.bits.cond.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].cond.valid <= fifo_vec[sig_next_idx].deq.bits.cond.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].shift_type <= fifo_vec[sig_next_idx].deq.bits.shift_type @[issue.scala 159:28]
      reg_pipe[sig_next_idx].shift_val.bits <= fifo_vec[sig_next_idx].deq.bits.shift_val.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].shift_val.valid <= fifo_vec[sig_next_idx].deq.bits.shift_val.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].imm.bits <= fifo_vec[sig_next_idx].deq.bits.imm.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].imm.valid <= fifo_vec[sig_next_idx].deq.bits.imm.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rs2.bits <= fifo_vec[sig_next_idx].deq.bits.rs2.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rs2.valid <= fifo_vec[sig_next_idx].deq.bits.rs2.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rs1.bits <= fifo_vec[sig_next_idx].deq.bits.rs1.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rs1.valid <= fifo_vec[sig_next_idx].deq.bits.rs1.valid @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rd.bits <= fifo_vec[sig_next_idx].deq.bits.rd.bits @[issue.scala 159:28]
      reg_pipe[sig_next_idx].rd.valid <= fifo_vec[sig_next_idx].deq.bits.rd.valid @[issue.scala 159:28]
      skip @[issue.scala 156:47]
    when io.flush : @[issue.scala 163:18]
      wire _T_4426 : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>} @[decode.scala 74:21]
      _T_4426.rd.bits <= UInt<5>("h00") @[decode.scala 77:20]
      _T_4426.rs1.bits <= UInt<5>("h00") @[decode.scala 78:20]
      _T_4426.rs2.bits <= UInt<5>("h00") @[decode.scala 79:20]
      _T_4426.imm.bits <= UInt<26>("h00") @[decode.scala 80:20]
      _T_4426.shift_val.bits <= UInt<6>("h00") @[decode.scala 81:26]
      _T_4426.shift_type <= UInt<2>("h00") @[decode.scala 82:22]
      _T_4426.cond.bits <= UInt<4>("h00") @[decode.scala 83:21]
      _T_4426.op <= UInt<3>("h00") @[decode.scala 86:14]
      _T_4426.itype <= UInt<3>("h00") @[decode.scala 87:17]
      _T_4426.rd.valid <= UInt<1>("h00") @[decode.scala 90:20]
      _T_4426.rs1.valid <= UInt<1>("h00") @[decode.scala 91:21]
      _T_4426.rs2.valid <= UInt<1>("h00") @[decode.scala 92:21]
      _T_4426.imm.valid <= UInt<1>("h00") @[decode.scala 93:21]
      _T_4426.shift_val.valid <= UInt<1>("h00") @[decode.scala 94:27]
      _T_4426.cond.valid <= UInt<1>("h00") @[decode.scala 95:22]
      _T_4426.nzcv_en <= UInt<1>("h00") @[decode.scala 96:19]
      _T_4426.inst32.bits <= UInt<32>("h00") @[decode.scala 99:23]
      _T_4426.inst32.valid <= UInt<1>("h00") @[decode.scala 100:24]
      _T_4426.tag <= UInt<1>("h00") @[decode.scala 101:15]
      _T_4426.pc <= UInt<64>("h00") @[decode.scala 102:14]
      reg_pipe[io.flushTag].pc <= _T_4426.pc @[issue.scala 164:27]
      reg_pipe[io.flushTag].inst32.bits <= _T_4426.inst32.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].inst32.valid <= _T_4426.inst32.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].tag <= _T_4426.tag @[issue.scala 164:27]
      reg_pipe[io.flushTag].nzcv_en <= _T_4426.nzcv_en @[issue.scala 164:27]
      reg_pipe[io.flushTag].op <= _T_4426.op @[issue.scala 164:27]
      reg_pipe[io.flushTag].itype <= _T_4426.itype @[issue.scala 164:27]
      reg_pipe[io.flushTag].cond.bits <= _T_4426.cond.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].cond.valid <= _T_4426.cond.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].shift_type <= _T_4426.shift_type @[issue.scala 164:27]
      reg_pipe[io.flushTag].shift_val.bits <= _T_4426.shift_val.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].shift_val.valid <= _T_4426.shift_val.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].imm.bits <= _T_4426.imm.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].imm.valid <= _T_4426.imm.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].rs2.bits <= _T_4426.rs2.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].rs2.valid <= _T_4426.rs2.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].rs1.bits <= _T_4426.rs1.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].rs1.valid <= _T_4426.rs1.valid @[issue.scala 164:27]
      reg_pipe[io.flushTag].rd.bits <= _T_4426.rd.bits @[issue.scala 164:27]
      reg_pipe[io.flushTag].rd.valid <= _T_4426.rd.valid @[issue.scala 164:27]
      reg_pipe_v[io.flushTag] <= UInt<1>("h00") @[issue.scala 165:29]
      sig_pipe_i[io.flushTag] <= UInt<1>("h00") @[issue.scala 166:29]
      skip @[issue.scala 163:18]
    
  module ShiftALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip word : UInt<64>, flip amount : UInt<6>, flip opcode : UInt<2>, res : UInt<64>, carry : UInt<1>}
    
    node _T_15 = dshl(io.word, io.amount) @[execute.scala 86:33]
    node _T_16 = dshr(io.word, io.amount) @[execute.scala 87:33]
    node _T_17 = asSInt(io.word) @[execute.scala 88:39]
    node _T_18 = dshr(_T_17, io.amount) @[execute.scala 88:42]
    node _T_19 = asUInt(_T_18) @[execute.scala 88:62]
    node _T_20 = bits(io.word, 0, 0) @[execute.scala 89:52]
    node _T_21 = bits(io.word, 1, 1) @[execute.scala 89:52]
    node _T_22 = bits(io.word, 2, 2) @[execute.scala 89:52]
    node _T_23 = bits(io.word, 3, 3) @[execute.scala 89:52]
    node _T_24 = bits(io.word, 4, 4) @[execute.scala 89:52]
    node _T_25 = bits(io.word, 5, 5) @[execute.scala 89:52]
    node _T_26 = bits(io.word, 6, 6) @[execute.scala 89:52]
    node _T_27 = bits(io.word, 7, 7) @[execute.scala 89:52]
    node _T_28 = bits(io.word, 8, 8) @[execute.scala 89:52]
    node _T_29 = bits(io.word, 9, 9) @[execute.scala 89:52]
    node _T_30 = bits(io.word, 10, 10) @[execute.scala 89:52]
    node _T_31 = bits(io.word, 11, 11) @[execute.scala 89:52]
    node _T_32 = bits(io.word, 12, 12) @[execute.scala 89:52]
    node _T_33 = bits(io.word, 13, 13) @[execute.scala 89:52]
    node _T_34 = bits(io.word, 14, 14) @[execute.scala 89:52]
    node _T_35 = bits(io.word, 15, 15) @[execute.scala 89:52]
    node _T_36 = bits(io.word, 16, 16) @[execute.scala 89:52]
    node _T_37 = bits(io.word, 17, 17) @[execute.scala 89:52]
    node _T_38 = bits(io.word, 18, 18) @[execute.scala 89:52]
    node _T_39 = bits(io.word, 19, 19) @[execute.scala 89:52]
    node _T_40 = bits(io.word, 20, 20) @[execute.scala 89:52]
    node _T_41 = bits(io.word, 21, 21) @[execute.scala 89:52]
    node _T_42 = bits(io.word, 22, 22) @[execute.scala 89:52]
    node _T_43 = bits(io.word, 23, 23) @[execute.scala 89:52]
    node _T_44 = bits(io.word, 24, 24) @[execute.scala 89:52]
    node _T_45 = bits(io.word, 25, 25) @[execute.scala 89:52]
    node _T_46 = bits(io.word, 26, 26) @[execute.scala 89:52]
    node _T_47 = bits(io.word, 27, 27) @[execute.scala 89:52]
    node _T_48 = bits(io.word, 28, 28) @[execute.scala 89:52]
    node _T_49 = bits(io.word, 29, 29) @[execute.scala 89:52]
    node _T_50 = bits(io.word, 30, 30) @[execute.scala 89:52]
    node _T_51 = bits(io.word, 31, 31) @[execute.scala 89:52]
    node _T_52 = bits(io.word, 32, 32) @[execute.scala 89:52]
    node _T_53 = bits(io.word, 33, 33) @[execute.scala 89:52]
    node _T_54 = bits(io.word, 34, 34) @[execute.scala 89:52]
    node _T_55 = bits(io.word, 35, 35) @[execute.scala 89:52]
    node _T_56 = bits(io.word, 36, 36) @[execute.scala 89:52]
    node _T_57 = bits(io.word, 37, 37) @[execute.scala 89:52]
    node _T_58 = bits(io.word, 38, 38) @[execute.scala 89:52]
    node _T_59 = bits(io.word, 39, 39) @[execute.scala 89:52]
    node _T_60 = bits(io.word, 40, 40) @[execute.scala 89:52]
    node _T_61 = bits(io.word, 41, 41) @[execute.scala 89:52]
    node _T_62 = bits(io.word, 42, 42) @[execute.scala 89:52]
    node _T_63 = bits(io.word, 43, 43) @[execute.scala 89:52]
    node _T_64 = bits(io.word, 44, 44) @[execute.scala 89:52]
    node _T_65 = bits(io.word, 45, 45) @[execute.scala 89:52]
    node _T_66 = bits(io.word, 46, 46) @[execute.scala 89:52]
    node _T_67 = bits(io.word, 47, 47) @[execute.scala 89:52]
    node _T_68 = bits(io.word, 48, 48) @[execute.scala 89:52]
    node _T_69 = bits(io.word, 49, 49) @[execute.scala 89:52]
    node _T_70 = bits(io.word, 50, 50) @[execute.scala 89:52]
    node _T_71 = bits(io.word, 51, 51) @[execute.scala 89:52]
    node _T_72 = bits(io.word, 52, 52) @[execute.scala 89:52]
    node _T_73 = bits(io.word, 53, 53) @[execute.scala 89:52]
    node _T_74 = bits(io.word, 54, 54) @[execute.scala 89:52]
    node _T_75 = bits(io.word, 55, 55) @[execute.scala 89:52]
    node _T_76 = bits(io.word, 56, 56) @[execute.scala 89:52]
    node _T_77 = bits(io.word, 57, 57) @[execute.scala 89:52]
    node _T_78 = bits(io.word, 58, 58) @[execute.scala 89:52]
    node _T_79 = bits(io.word, 59, 59) @[execute.scala 89:52]
    node _T_80 = bits(io.word, 60, 60) @[execute.scala 89:52]
    node _T_81 = bits(io.word, 61, 61) @[execute.scala 89:52]
    node _T_82 = bits(io.word, 62, 62) @[execute.scala 89:52]
    node _T_83 = bits(io.word, 63, 63) @[execute.scala 89:52]
    wire _T_87 : UInt<1>[64] @[execute.scala 89:43]
    _T_87[0] <= _T_20 @[execute.scala 89:43]
    _T_87[1] <= _T_21 @[execute.scala 89:43]
    _T_87[2] <= _T_22 @[execute.scala 89:43]
    _T_87[3] <= _T_23 @[execute.scala 89:43]
    _T_87[4] <= _T_24 @[execute.scala 89:43]
    _T_87[5] <= _T_25 @[execute.scala 89:43]
    _T_87[6] <= _T_26 @[execute.scala 89:43]
    _T_87[7] <= _T_27 @[execute.scala 89:43]
    _T_87[8] <= _T_28 @[execute.scala 89:43]
    _T_87[9] <= _T_29 @[execute.scala 89:43]
    _T_87[10] <= _T_30 @[execute.scala 89:43]
    _T_87[11] <= _T_31 @[execute.scala 89:43]
    _T_87[12] <= _T_32 @[execute.scala 89:43]
    _T_87[13] <= _T_33 @[execute.scala 89:43]
    _T_87[14] <= _T_34 @[execute.scala 89:43]
    _T_87[15] <= _T_35 @[execute.scala 89:43]
    _T_87[16] <= _T_36 @[execute.scala 89:43]
    _T_87[17] <= _T_37 @[execute.scala 89:43]
    _T_87[18] <= _T_38 @[execute.scala 89:43]
    _T_87[19] <= _T_39 @[execute.scala 89:43]
    _T_87[20] <= _T_40 @[execute.scala 89:43]
    _T_87[21] <= _T_41 @[execute.scala 89:43]
    _T_87[22] <= _T_42 @[execute.scala 89:43]
    _T_87[23] <= _T_43 @[execute.scala 89:43]
    _T_87[24] <= _T_44 @[execute.scala 89:43]
    _T_87[25] <= _T_45 @[execute.scala 89:43]
    _T_87[26] <= _T_46 @[execute.scala 89:43]
    _T_87[27] <= _T_47 @[execute.scala 89:43]
    _T_87[28] <= _T_48 @[execute.scala 89:43]
    _T_87[29] <= _T_49 @[execute.scala 89:43]
    _T_87[30] <= _T_50 @[execute.scala 89:43]
    _T_87[31] <= _T_51 @[execute.scala 89:43]
    _T_87[32] <= _T_52 @[execute.scala 89:43]
    _T_87[33] <= _T_53 @[execute.scala 89:43]
    _T_87[34] <= _T_54 @[execute.scala 89:43]
    _T_87[35] <= _T_55 @[execute.scala 89:43]
    _T_87[36] <= _T_56 @[execute.scala 89:43]
    _T_87[37] <= _T_57 @[execute.scala 89:43]
    _T_87[38] <= _T_58 @[execute.scala 89:43]
    _T_87[39] <= _T_59 @[execute.scala 89:43]
    _T_87[40] <= _T_60 @[execute.scala 89:43]
    _T_87[41] <= _T_61 @[execute.scala 89:43]
    _T_87[42] <= _T_62 @[execute.scala 89:43]
    _T_87[43] <= _T_63 @[execute.scala 89:43]
    _T_87[44] <= _T_64 @[execute.scala 89:43]
    _T_87[45] <= _T_65 @[execute.scala 89:43]
    _T_87[46] <= _T_66 @[execute.scala 89:43]
    _T_87[47] <= _T_67 @[execute.scala 89:43]
    _T_87[48] <= _T_68 @[execute.scala 89:43]
    _T_87[49] <= _T_69 @[execute.scala 89:43]
    _T_87[50] <= _T_70 @[execute.scala 89:43]
    _T_87[51] <= _T_71 @[execute.scala 89:43]
    _T_87[52] <= _T_72 @[execute.scala 89:43]
    _T_87[53] <= _T_73 @[execute.scala 89:43]
    _T_87[54] <= _T_74 @[execute.scala 89:43]
    _T_87[55] <= _T_75 @[execute.scala 89:43]
    _T_87[56] <= _T_76 @[execute.scala 89:43]
    _T_87[57] <= _T_77 @[execute.scala 89:43]
    _T_87[58] <= _T_78 @[execute.scala 89:43]
    _T_87[59] <= _T_79 @[execute.scala 89:43]
    _T_87[60] <= _T_80 @[execute.scala 89:43]
    _T_87[61] <= _T_81 @[execute.scala 89:43]
    _T_87[62] <= _T_82 @[execute.scala 89:43]
    _T_87[63] <= _T_83 @[execute.scala 89:43]
    node _T_155 = lt(io.amount, UInt<7>("h040")) @[execute.scala 79:15]
    node _T_157 = sub(io.amount, UInt<7>("h040")) @[execute.scala 79:37]
    node _T_158 = asUInt(_T_157) @[execute.scala 79:37]
    node _T_159 = tail(_T_158, 1) @[execute.scala 79:37]
    node _T_161 = bits(_T_159, 5, 0)
    node _T_163 = add(UInt<1>("h00"), io.amount) @[execute.scala 79:60]
    node _T_164 = tail(_T_163, 1) @[execute.scala 79:60]
    node _T_166 = mux(_T_155, _T_87[_T_161], _T_87[_T_164]) @[execute.scala 79:10]
    node _T_168 = lt(io.amount, UInt<6>("h03f")) @[execute.scala 79:15]
    node _T_170 = sub(io.amount, UInt<6>("h03f")) @[execute.scala 79:37]
    node _T_171 = asUInt(_T_170) @[execute.scala 79:37]
    node _T_172 = tail(_T_171, 1) @[execute.scala 79:37]
    node _T_175 = add(UInt<1>("h01"), io.amount) @[execute.scala 79:60]
    node _T_176 = tail(_T_175, 1) @[execute.scala 79:60]
    node _T_178 = mux(_T_168, _T_87[_T_172], _T_87[_T_176]) @[execute.scala 79:10]
    node _T_180 = lt(io.amount, UInt<6>("h03e")) @[execute.scala 79:15]
    node _T_182 = sub(io.amount, UInt<6>("h03e")) @[execute.scala 79:37]
    node _T_183 = asUInt(_T_182) @[execute.scala 79:37]
    node _T_184 = tail(_T_183, 1) @[execute.scala 79:37]
    node _T_187 = add(UInt<2>("h02"), io.amount) @[execute.scala 79:60]
    node _T_188 = tail(_T_187, 1) @[execute.scala 79:60]
    node _T_190 = mux(_T_180, _T_87[_T_184], _T_87[_T_188]) @[execute.scala 79:10]
    node _T_192 = lt(io.amount, UInt<6>("h03d")) @[execute.scala 79:15]
    node _T_194 = sub(io.amount, UInt<6>("h03d")) @[execute.scala 79:37]
    node _T_195 = asUInt(_T_194) @[execute.scala 79:37]
    node _T_196 = tail(_T_195, 1) @[execute.scala 79:37]
    node _T_199 = add(UInt<2>("h03"), io.amount) @[execute.scala 79:60]
    node _T_200 = tail(_T_199, 1) @[execute.scala 79:60]
    node _T_202 = mux(_T_192, _T_87[_T_196], _T_87[_T_200]) @[execute.scala 79:10]
    node _T_204 = lt(io.amount, UInt<6>("h03c")) @[execute.scala 79:15]
    node _T_206 = sub(io.amount, UInt<6>("h03c")) @[execute.scala 79:37]
    node _T_207 = asUInt(_T_206) @[execute.scala 79:37]
    node _T_208 = tail(_T_207, 1) @[execute.scala 79:37]
    node _T_211 = add(UInt<3>("h04"), io.amount) @[execute.scala 79:60]
    node _T_212 = tail(_T_211, 1) @[execute.scala 79:60]
    node _T_214 = mux(_T_204, _T_87[_T_208], _T_87[_T_212]) @[execute.scala 79:10]
    node _T_216 = lt(io.amount, UInt<6>("h03b")) @[execute.scala 79:15]
    node _T_218 = sub(io.amount, UInt<6>("h03b")) @[execute.scala 79:37]
    node _T_219 = asUInt(_T_218) @[execute.scala 79:37]
    node _T_220 = tail(_T_219, 1) @[execute.scala 79:37]
    node _T_223 = add(UInt<3>("h05"), io.amount) @[execute.scala 79:60]
    node _T_224 = tail(_T_223, 1) @[execute.scala 79:60]
    node _T_226 = mux(_T_216, _T_87[_T_220], _T_87[_T_224]) @[execute.scala 79:10]
    node _T_228 = lt(io.amount, UInt<6>("h03a")) @[execute.scala 79:15]
    node _T_230 = sub(io.amount, UInt<6>("h03a")) @[execute.scala 79:37]
    node _T_231 = asUInt(_T_230) @[execute.scala 79:37]
    node _T_232 = tail(_T_231, 1) @[execute.scala 79:37]
    node _T_235 = add(UInt<3>("h06"), io.amount) @[execute.scala 79:60]
    node _T_236 = tail(_T_235, 1) @[execute.scala 79:60]
    node _T_238 = mux(_T_228, _T_87[_T_232], _T_87[_T_236]) @[execute.scala 79:10]
    node _T_240 = lt(io.amount, UInt<6>("h039")) @[execute.scala 79:15]
    node _T_242 = sub(io.amount, UInt<6>("h039")) @[execute.scala 79:37]
    node _T_243 = asUInt(_T_242) @[execute.scala 79:37]
    node _T_244 = tail(_T_243, 1) @[execute.scala 79:37]
    node _T_247 = add(UInt<3>("h07"), io.amount) @[execute.scala 79:60]
    node _T_248 = tail(_T_247, 1) @[execute.scala 79:60]
    node _T_250 = mux(_T_240, _T_87[_T_244], _T_87[_T_248]) @[execute.scala 79:10]
    node _T_252 = lt(io.amount, UInt<6>("h038")) @[execute.scala 79:15]
    node _T_254 = sub(io.amount, UInt<6>("h038")) @[execute.scala 79:37]
    node _T_255 = asUInt(_T_254) @[execute.scala 79:37]
    node _T_256 = tail(_T_255, 1) @[execute.scala 79:37]
    node _T_259 = add(UInt<4>("h08"), io.amount) @[execute.scala 79:60]
    node _T_260 = tail(_T_259, 1) @[execute.scala 79:60]
    node _T_262 = mux(_T_252, _T_87[_T_256], _T_87[_T_260]) @[execute.scala 79:10]
    node _T_264 = lt(io.amount, UInt<6>("h037")) @[execute.scala 79:15]
    node _T_266 = sub(io.amount, UInt<6>("h037")) @[execute.scala 79:37]
    node _T_267 = asUInt(_T_266) @[execute.scala 79:37]
    node _T_268 = tail(_T_267, 1) @[execute.scala 79:37]
    node _T_271 = add(UInt<4>("h09"), io.amount) @[execute.scala 79:60]
    node _T_272 = tail(_T_271, 1) @[execute.scala 79:60]
    node _T_274 = mux(_T_264, _T_87[_T_268], _T_87[_T_272]) @[execute.scala 79:10]
    node _T_276 = lt(io.amount, UInt<6>("h036")) @[execute.scala 79:15]
    node _T_278 = sub(io.amount, UInt<6>("h036")) @[execute.scala 79:37]
    node _T_279 = asUInt(_T_278) @[execute.scala 79:37]
    node _T_280 = tail(_T_279, 1) @[execute.scala 79:37]
    node _T_283 = add(UInt<4>("h0a"), io.amount) @[execute.scala 79:60]
    node _T_284 = tail(_T_283, 1) @[execute.scala 79:60]
    node _T_286 = mux(_T_276, _T_87[_T_280], _T_87[_T_284]) @[execute.scala 79:10]
    node _T_288 = lt(io.amount, UInt<6>("h035")) @[execute.scala 79:15]
    node _T_290 = sub(io.amount, UInt<6>("h035")) @[execute.scala 79:37]
    node _T_291 = asUInt(_T_290) @[execute.scala 79:37]
    node _T_292 = tail(_T_291, 1) @[execute.scala 79:37]
    node _T_295 = add(UInt<4>("h0b"), io.amount) @[execute.scala 79:60]
    node _T_296 = tail(_T_295, 1) @[execute.scala 79:60]
    node _T_298 = mux(_T_288, _T_87[_T_292], _T_87[_T_296]) @[execute.scala 79:10]
    node _T_300 = lt(io.amount, UInt<6>("h034")) @[execute.scala 79:15]
    node _T_302 = sub(io.amount, UInt<6>("h034")) @[execute.scala 79:37]
    node _T_303 = asUInt(_T_302) @[execute.scala 79:37]
    node _T_304 = tail(_T_303, 1) @[execute.scala 79:37]
    node _T_307 = add(UInt<4>("h0c"), io.amount) @[execute.scala 79:60]
    node _T_308 = tail(_T_307, 1) @[execute.scala 79:60]
    node _T_310 = mux(_T_300, _T_87[_T_304], _T_87[_T_308]) @[execute.scala 79:10]
    node _T_312 = lt(io.amount, UInt<6>("h033")) @[execute.scala 79:15]
    node _T_314 = sub(io.amount, UInt<6>("h033")) @[execute.scala 79:37]
    node _T_315 = asUInt(_T_314) @[execute.scala 79:37]
    node _T_316 = tail(_T_315, 1) @[execute.scala 79:37]
    node _T_319 = add(UInt<4>("h0d"), io.amount) @[execute.scala 79:60]
    node _T_320 = tail(_T_319, 1) @[execute.scala 79:60]
    node _T_322 = mux(_T_312, _T_87[_T_316], _T_87[_T_320]) @[execute.scala 79:10]
    node _T_324 = lt(io.amount, UInt<6>("h032")) @[execute.scala 79:15]
    node _T_326 = sub(io.amount, UInt<6>("h032")) @[execute.scala 79:37]
    node _T_327 = asUInt(_T_326) @[execute.scala 79:37]
    node _T_328 = tail(_T_327, 1) @[execute.scala 79:37]
    node _T_331 = add(UInt<4>("h0e"), io.amount) @[execute.scala 79:60]
    node _T_332 = tail(_T_331, 1) @[execute.scala 79:60]
    node _T_334 = mux(_T_324, _T_87[_T_328], _T_87[_T_332]) @[execute.scala 79:10]
    node _T_336 = lt(io.amount, UInt<6>("h031")) @[execute.scala 79:15]
    node _T_338 = sub(io.amount, UInt<6>("h031")) @[execute.scala 79:37]
    node _T_339 = asUInt(_T_338) @[execute.scala 79:37]
    node _T_340 = tail(_T_339, 1) @[execute.scala 79:37]
    node _T_343 = add(UInt<4>("h0f"), io.amount) @[execute.scala 79:60]
    node _T_344 = tail(_T_343, 1) @[execute.scala 79:60]
    node _T_346 = mux(_T_336, _T_87[_T_340], _T_87[_T_344]) @[execute.scala 79:10]
    node _T_348 = lt(io.amount, UInt<6>("h030")) @[execute.scala 79:15]
    node _T_350 = sub(io.amount, UInt<6>("h030")) @[execute.scala 79:37]
    node _T_351 = asUInt(_T_350) @[execute.scala 79:37]
    node _T_352 = tail(_T_351, 1) @[execute.scala 79:37]
    node _T_355 = add(UInt<5>("h010"), io.amount) @[execute.scala 79:60]
    node _T_356 = tail(_T_355, 1) @[execute.scala 79:60]
    node _T_358 = mux(_T_348, _T_87[_T_352], _T_87[_T_356]) @[execute.scala 79:10]
    node _T_360 = lt(io.amount, UInt<6>("h02f")) @[execute.scala 79:15]
    node _T_362 = sub(io.amount, UInt<6>("h02f")) @[execute.scala 79:37]
    node _T_363 = asUInt(_T_362) @[execute.scala 79:37]
    node _T_364 = tail(_T_363, 1) @[execute.scala 79:37]
    node _T_367 = add(UInt<5>("h011"), io.amount) @[execute.scala 79:60]
    node _T_368 = tail(_T_367, 1) @[execute.scala 79:60]
    node _T_370 = mux(_T_360, _T_87[_T_364], _T_87[_T_368]) @[execute.scala 79:10]
    node _T_372 = lt(io.amount, UInt<6>("h02e")) @[execute.scala 79:15]
    node _T_374 = sub(io.amount, UInt<6>("h02e")) @[execute.scala 79:37]
    node _T_375 = asUInt(_T_374) @[execute.scala 79:37]
    node _T_376 = tail(_T_375, 1) @[execute.scala 79:37]
    node _T_379 = add(UInt<5>("h012"), io.amount) @[execute.scala 79:60]
    node _T_380 = tail(_T_379, 1) @[execute.scala 79:60]
    node _T_382 = mux(_T_372, _T_87[_T_376], _T_87[_T_380]) @[execute.scala 79:10]
    node _T_384 = lt(io.amount, UInt<6>("h02d")) @[execute.scala 79:15]
    node _T_386 = sub(io.amount, UInt<6>("h02d")) @[execute.scala 79:37]
    node _T_387 = asUInt(_T_386) @[execute.scala 79:37]
    node _T_388 = tail(_T_387, 1) @[execute.scala 79:37]
    node _T_391 = add(UInt<5>("h013"), io.amount) @[execute.scala 79:60]
    node _T_392 = tail(_T_391, 1) @[execute.scala 79:60]
    node _T_394 = mux(_T_384, _T_87[_T_388], _T_87[_T_392]) @[execute.scala 79:10]
    node _T_396 = lt(io.amount, UInt<6>("h02c")) @[execute.scala 79:15]
    node _T_398 = sub(io.amount, UInt<6>("h02c")) @[execute.scala 79:37]
    node _T_399 = asUInt(_T_398) @[execute.scala 79:37]
    node _T_400 = tail(_T_399, 1) @[execute.scala 79:37]
    node _T_403 = add(UInt<5>("h014"), io.amount) @[execute.scala 79:60]
    node _T_404 = tail(_T_403, 1) @[execute.scala 79:60]
    node _T_406 = mux(_T_396, _T_87[_T_400], _T_87[_T_404]) @[execute.scala 79:10]
    node _T_408 = lt(io.amount, UInt<6>("h02b")) @[execute.scala 79:15]
    node _T_410 = sub(io.amount, UInt<6>("h02b")) @[execute.scala 79:37]
    node _T_411 = asUInt(_T_410) @[execute.scala 79:37]
    node _T_412 = tail(_T_411, 1) @[execute.scala 79:37]
    node _T_415 = add(UInt<5>("h015"), io.amount) @[execute.scala 79:60]
    node _T_416 = tail(_T_415, 1) @[execute.scala 79:60]
    node _T_418 = mux(_T_408, _T_87[_T_412], _T_87[_T_416]) @[execute.scala 79:10]
    node _T_420 = lt(io.amount, UInt<6>("h02a")) @[execute.scala 79:15]
    node _T_422 = sub(io.amount, UInt<6>("h02a")) @[execute.scala 79:37]
    node _T_423 = asUInt(_T_422) @[execute.scala 79:37]
    node _T_424 = tail(_T_423, 1) @[execute.scala 79:37]
    node _T_427 = add(UInt<5>("h016"), io.amount) @[execute.scala 79:60]
    node _T_428 = tail(_T_427, 1) @[execute.scala 79:60]
    node _T_430 = mux(_T_420, _T_87[_T_424], _T_87[_T_428]) @[execute.scala 79:10]
    node _T_432 = lt(io.amount, UInt<6>("h029")) @[execute.scala 79:15]
    node _T_434 = sub(io.amount, UInt<6>("h029")) @[execute.scala 79:37]
    node _T_435 = asUInt(_T_434) @[execute.scala 79:37]
    node _T_436 = tail(_T_435, 1) @[execute.scala 79:37]
    node _T_439 = add(UInt<5>("h017"), io.amount) @[execute.scala 79:60]
    node _T_440 = tail(_T_439, 1) @[execute.scala 79:60]
    node _T_442 = mux(_T_432, _T_87[_T_436], _T_87[_T_440]) @[execute.scala 79:10]
    node _T_444 = lt(io.amount, UInt<6>("h028")) @[execute.scala 79:15]
    node _T_446 = sub(io.amount, UInt<6>("h028")) @[execute.scala 79:37]
    node _T_447 = asUInt(_T_446) @[execute.scala 79:37]
    node _T_448 = tail(_T_447, 1) @[execute.scala 79:37]
    node _T_451 = add(UInt<5>("h018"), io.amount) @[execute.scala 79:60]
    node _T_452 = tail(_T_451, 1) @[execute.scala 79:60]
    node _T_454 = mux(_T_444, _T_87[_T_448], _T_87[_T_452]) @[execute.scala 79:10]
    node _T_456 = lt(io.amount, UInt<6>("h027")) @[execute.scala 79:15]
    node _T_458 = sub(io.amount, UInt<6>("h027")) @[execute.scala 79:37]
    node _T_459 = asUInt(_T_458) @[execute.scala 79:37]
    node _T_460 = tail(_T_459, 1) @[execute.scala 79:37]
    node _T_463 = add(UInt<5>("h019"), io.amount) @[execute.scala 79:60]
    node _T_464 = tail(_T_463, 1) @[execute.scala 79:60]
    node _T_466 = mux(_T_456, _T_87[_T_460], _T_87[_T_464]) @[execute.scala 79:10]
    node _T_468 = lt(io.amount, UInt<6>("h026")) @[execute.scala 79:15]
    node _T_470 = sub(io.amount, UInt<6>("h026")) @[execute.scala 79:37]
    node _T_471 = asUInt(_T_470) @[execute.scala 79:37]
    node _T_472 = tail(_T_471, 1) @[execute.scala 79:37]
    node _T_475 = add(UInt<5>("h01a"), io.amount) @[execute.scala 79:60]
    node _T_476 = tail(_T_475, 1) @[execute.scala 79:60]
    node _T_478 = mux(_T_468, _T_87[_T_472], _T_87[_T_476]) @[execute.scala 79:10]
    node _T_480 = lt(io.amount, UInt<6>("h025")) @[execute.scala 79:15]
    node _T_482 = sub(io.amount, UInt<6>("h025")) @[execute.scala 79:37]
    node _T_483 = asUInt(_T_482) @[execute.scala 79:37]
    node _T_484 = tail(_T_483, 1) @[execute.scala 79:37]
    node _T_487 = add(UInt<5>("h01b"), io.amount) @[execute.scala 79:60]
    node _T_488 = tail(_T_487, 1) @[execute.scala 79:60]
    node _T_490 = mux(_T_480, _T_87[_T_484], _T_87[_T_488]) @[execute.scala 79:10]
    node _T_492 = lt(io.amount, UInt<6>("h024")) @[execute.scala 79:15]
    node _T_494 = sub(io.amount, UInt<6>("h024")) @[execute.scala 79:37]
    node _T_495 = asUInt(_T_494) @[execute.scala 79:37]
    node _T_496 = tail(_T_495, 1) @[execute.scala 79:37]
    node _T_499 = add(UInt<5>("h01c"), io.amount) @[execute.scala 79:60]
    node _T_500 = tail(_T_499, 1) @[execute.scala 79:60]
    node _T_502 = mux(_T_492, _T_87[_T_496], _T_87[_T_500]) @[execute.scala 79:10]
    node _T_504 = lt(io.amount, UInt<6>("h023")) @[execute.scala 79:15]
    node _T_506 = sub(io.amount, UInt<6>("h023")) @[execute.scala 79:37]
    node _T_507 = asUInt(_T_506) @[execute.scala 79:37]
    node _T_508 = tail(_T_507, 1) @[execute.scala 79:37]
    node _T_511 = add(UInt<5>("h01d"), io.amount) @[execute.scala 79:60]
    node _T_512 = tail(_T_511, 1) @[execute.scala 79:60]
    node _T_514 = mux(_T_504, _T_87[_T_508], _T_87[_T_512]) @[execute.scala 79:10]
    node _T_516 = lt(io.amount, UInt<6>("h022")) @[execute.scala 79:15]
    node _T_518 = sub(io.amount, UInt<6>("h022")) @[execute.scala 79:37]
    node _T_519 = asUInt(_T_518) @[execute.scala 79:37]
    node _T_520 = tail(_T_519, 1) @[execute.scala 79:37]
    node _T_523 = add(UInt<5>("h01e"), io.amount) @[execute.scala 79:60]
    node _T_524 = tail(_T_523, 1) @[execute.scala 79:60]
    node _T_526 = mux(_T_516, _T_87[_T_520], _T_87[_T_524]) @[execute.scala 79:10]
    node _T_528 = lt(io.amount, UInt<6>("h021")) @[execute.scala 79:15]
    node _T_530 = sub(io.amount, UInt<6>("h021")) @[execute.scala 79:37]
    node _T_531 = asUInt(_T_530) @[execute.scala 79:37]
    node _T_532 = tail(_T_531, 1) @[execute.scala 79:37]
    node _T_535 = add(UInt<5>("h01f"), io.amount) @[execute.scala 79:60]
    node _T_536 = tail(_T_535, 1) @[execute.scala 79:60]
    node _T_538 = mux(_T_528, _T_87[_T_532], _T_87[_T_536]) @[execute.scala 79:10]
    node _T_540 = lt(io.amount, UInt<6>("h020")) @[execute.scala 79:15]
    node _T_542 = sub(io.amount, UInt<6>("h020")) @[execute.scala 79:37]
    node _T_543 = asUInt(_T_542) @[execute.scala 79:37]
    node _T_544 = tail(_T_543, 1) @[execute.scala 79:37]
    node _T_547 = add(UInt<6>("h020"), io.amount) @[execute.scala 79:60]
    node _T_548 = tail(_T_547, 1) @[execute.scala 79:60]
    node _T_550 = mux(_T_540, _T_87[_T_544], _T_87[_T_548]) @[execute.scala 79:10]
    node _T_552 = lt(io.amount, UInt<5>("h01f")) @[execute.scala 79:15]
    node _T_554 = sub(io.amount, UInt<5>("h01f")) @[execute.scala 79:37]
    node _T_555 = asUInt(_T_554) @[execute.scala 79:37]
    node _T_556 = tail(_T_555, 1) @[execute.scala 79:37]
    node _T_559 = add(UInt<6>("h021"), io.amount) @[execute.scala 79:60]
    node _T_560 = tail(_T_559, 1) @[execute.scala 79:60]
    node _T_562 = mux(_T_552, _T_87[_T_556], _T_87[_T_560]) @[execute.scala 79:10]
    node _T_564 = lt(io.amount, UInt<5>("h01e")) @[execute.scala 79:15]
    node _T_566 = sub(io.amount, UInt<5>("h01e")) @[execute.scala 79:37]
    node _T_567 = asUInt(_T_566) @[execute.scala 79:37]
    node _T_568 = tail(_T_567, 1) @[execute.scala 79:37]
    node _T_571 = add(UInt<6>("h022"), io.amount) @[execute.scala 79:60]
    node _T_572 = tail(_T_571, 1) @[execute.scala 79:60]
    node _T_574 = mux(_T_564, _T_87[_T_568], _T_87[_T_572]) @[execute.scala 79:10]
    node _T_576 = lt(io.amount, UInt<5>("h01d")) @[execute.scala 79:15]
    node _T_578 = sub(io.amount, UInt<5>("h01d")) @[execute.scala 79:37]
    node _T_579 = asUInt(_T_578) @[execute.scala 79:37]
    node _T_580 = tail(_T_579, 1) @[execute.scala 79:37]
    node _T_583 = add(UInt<6>("h023"), io.amount) @[execute.scala 79:60]
    node _T_584 = tail(_T_583, 1) @[execute.scala 79:60]
    node _T_586 = mux(_T_576, _T_87[_T_580], _T_87[_T_584]) @[execute.scala 79:10]
    node _T_588 = lt(io.amount, UInt<5>("h01c")) @[execute.scala 79:15]
    node _T_590 = sub(io.amount, UInt<5>("h01c")) @[execute.scala 79:37]
    node _T_591 = asUInt(_T_590) @[execute.scala 79:37]
    node _T_592 = tail(_T_591, 1) @[execute.scala 79:37]
    node _T_595 = add(UInt<6>("h024"), io.amount) @[execute.scala 79:60]
    node _T_596 = tail(_T_595, 1) @[execute.scala 79:60]
    node _T_598 = mux(_T_588, _T_87[_T_592], _T_87[_T_596]) @[execute.scala 79:10]
    node _T_600 = lt(io.amount, UInt<5>("h01b")) @[execute.scala 79:15]
    node _T_602 = sub(io.amount, UInt<5>("h01b")) @[execute.scala 79:37]
    node _T_603 = asUInt(_T_602) @[execute.scala 79:37]
    node _T_604 = tail(_T_603, 1) @[execute.scala 79:37]
    node _T_607 = add(UInt<6>("h025"), io.amount) @[execute.scala 79:60]
    node _T_608 = tail(_T_607, 1) @[execute.scala 79:60]
    node _T_610 = mux(_T_600, _T_87[_T_604], _T_87[_T_608]) @[execute.scala 79:10]
    node _T_612 = lt(io.amount, UInt<5>("h01a")) @[execute.scala 79:15]
    node _T_614 = sub(io.amount, UInt<5>("h01a")) @[execute.scala 79:37]
    node _T_615 = asUInt(_T_614) @[execute.scala 79:37]
    node _T_616 = tail(_T_615, 1) @[execute.scala 79:37]
    node _T_619 = add(UInt<6>("h026"), io.amount) @[execute.scala 79:60]
    node _T_620 = tail(_T_619, 1) @[execute.scala 79:60]
    node _T_622 = mux(_T_612, _T_87[_T_616], _T_87[_T_620]) @[execute.scala 79:10]
    node _T_624 = lt(io.amount, UInt<5>("h019")) @[execute.scala 79:15]
    node _T_626 = sub(io.amount, UInt<5>("h019")) @[execute.scala 79:37]
    node _T_627 = asUInt(_T_626) @[execute.scala 79:37]
    node _T_628 = tail(_T_627, 1) @[execute.scala 79:37]
    node _T_631 = add(UInt<6>("h027"), io.amount) @[execute.scala 79:60]
    node _T_632 = tail(_T_631, 1) @[execute.scala 79:60]
    node _T_634 = mux(_T_624, _T_87[_T_628], _T_87[_T_632]) @[execute.scala 79:10]
    node _T_636 = lt(io.amount, UInt<5>("h018")) @[execute.scala 79:15]
    node _T_638 = sub(io.amount, UInt<5>("h018")) @[execute.scala 79:37]
    node _T_639 = asUInt(_T_638) @[execute.scala 79:37]
    node _T_640 = tail(_T_639, 1) @[execute.scala 79:37]
    node _T_643 = add(UInt<6>("h028"), io.amount) @[execute.scala 79:60]
    node _T_644 = tail(_T_643, 1) @[execute.scala 79:60]
    node _T_646 = mux(_T_636, _T_87[_T_640], _T_87[_T_644]) @[execute.scala 79:10]
    node _T_648 = lt(io.amount, UInt<5>("h017")) @[execute.scala 79:15]
    node _T_650 = sub(io.amount, UInt<5>("h017")) @[execute.scala 79:37]
    node _T_651 = asUInt(_T_650) @[execute.scala 79:37]
    node _T_652 = tail(_T_651, 1) @[execute.scala 79:37]
    node _T_655 = add(UInt<6>("h029"), io.amount) @[execute.scala 79:60]
    node _T_656 = tail(_T_655, 1) @[execute.scala 79:60]
    node _T_658 = mux(_T_648, _T_87[_T_652], _T_87[_T_656]) @[execute.scala 79:10]
    node _T_660 = lt(io.amount, UInt<5>("h016")) @[execute.scala 79:15]
    node _T_662 = sub(io.amount, UInt<5>("h016")) @[execute.scala 79:37]
    node _T_663 = asUInt(_T_662) @[execute.scala 79:37]
    node _T_664 = tail(_T_663, 1) @[execute.scala 79:37]
    node _T_667 = add(UInt<6>("h02a"), io.amount) @[execute.scala 79:60]
    node _T_668 = tail(_T_667, 1) @[execute.scala 79:60]
    node _T_670 = mux(_T_660, _T_87[_T_664], _T_87[_T_668]) @[execute.scala 79:10]
    node _T_672 = lt(io.amount, UInt<5>("h015")) @[execute.scala 79:15]
    node _T_674 = sub(io.amount, UInt<5>("h015")) @[execute.scala 79:37]
    node _T_675 = asUInt(_T_674) @[execute.scala 79:37]
    node _T_676 = tail(_T_675, 1) @[execute.scala 79:37]
    node _T_679 = add(UInt<6>("h02b"), io.amount) @[execute.scala 79:60]
    node _T_680 = tail(_T_679, 1) @[execute.scala 79:60]
    node _T_682 = mux(_T_672, _T_87[_T_676], _T_87[_T_680]) @[execute.scala 79:10]
    node _T_684 = lt(io.amount, UInt<5>("h014")) @[execute.scala 79:15]
    node _T_686 = sub(io.amount, UInt<5>("h014")) @[execute.scala 79:37]
    node _T_687 = asUInt(_T_686) @[execute.scala 79:37]
    node _T_688 = tail(_T_687, 1) @[execute.scala 79:37]
    node _T_691 = add(UInt<6>("h02c"), io.amount) @[execute.scala 79:60]
    node _T_692 = tail(_T_691, 1) @[execute.scala 79:60]
    node _T_694 = mux(_T_684, _T_87[_T_688], _T_87[_T_692]) @[execute.scala 79:10]
    node _T_696 = lt(io.amount, UInt<5>("h013")) @[execute.scala 79:15]
    node _T_698 = sub(io.amount, UInt<5>("h013")) @[execute.scala 79:37]
    node _T_699 = asUInt(_T_698) @[execute.scala 79:37]
    node _T_700 = tail(_T_699, 1) @[execute.scala 79:37]
    node _T_703 = add(UInt<6>("h02d"), io.amount) @[execute.scala 79:60]
    node _T_704 = tail(_T_703, 1) @[execute.scala 79:60]
    node _T_706 = mux(_T_696, _T_87[_T_700], _T_87[_T_704]) @[execute.scala 79:10]
    node _T_708 = lt(io.amount, UInt<5>("h012")) @[execute.scala 79:15]
    node _T_710 = sub(io.amount, UInt<5>("h012")) @[execute.scala 79:37]
    node _T_711 = asUInt(_T_710) @[execute.scala 79:37]
    node _T_712 = tail(_T_711, 1) @[execute.scala 79:37]
    node _T_715 = add(UInt<6>("h02e"), io.amount) @[execute.scala 79:60]
    node _T_716 = tail(_T_715, 1) @[execute.scala 79:60]
    node _T_718 = mux(_T_708, _T_87[_T_712], _T_87[_T_716]) @[execute.scala 79:10]
    node _T_720 = lt(io.amount, UInt<5>("h011")) @[execute.scala 79:15]
    node _T_722 = sub(io.amount, UInt<5>("h011")) @[execute.scala 79:37]
    node _T_723 = asUInt(_T_722) @[execute.scala 79:37]
    node _T_724 = tail(_T_723, 1) @[execute.scala 79:37]
    node _T_727 = add(UInt<6>("h02f"), io.amount) @[execute.scala 79:60]
    node _T_728 = tail(_T_727, 1) @[execute.scala 79:60]
    node _T_730 = mux(_T_720, _T_87[_T_724], _T_87[_T_728]) @[execute.scala 79:10]
    node _T_732 = lt(io.amount, UInt<5>("h010")) @[execute.scala 79:15]
    node _T_734 = sub(io.amount, UInt<5>("h010")) @[execute.scala 79:37]
    node _T_735 = asUInt(_T_734) @[execute.scala 79:37]
    node _T_736 = tail(_T_735, 1) @[execute.scala 79:37]
    node _T_739 = add(UInt<6>("h030"), io.amount) @[execute.scala 79:60]
    node _T_740 = tail(_T_739, 1) @[execute.scala 79:60]
    node _T_742 = mux(_T_732, _T_87[_T_736], _T_87[_T_740]) @[execute.scala 79:10]
    node _T_744 = lt(io.amount, UInt<4>("h0f")) @[execute.scala 79:15]
    node _T_746 = sub(io.amount, UInt<4>("h0f")) @[execute.scala 79:37]
    node _T_747 = asUInt(_T_746) @[execute.scala 79:37]
    node _T_748 = tail(_T_747, 1) @[execute.scala 79:37]
    node _T_751 = add(UInt<6>("h031"), io.amount) @[execute.scala 79:60]
    node _T_752 = tail(_T_751, 1) @[execute.scala 79:60]
    node _T_754 = mux(_T_744, _T_87[_T_748], _T_87[_T_752]) @[execute.scala 79:10]
    node _T_756 = lt(io.amount, UInt<4>("h0e")) @[execute.scala 79:15]
    node _T_758 = sub(io.amount, UInt<4>("h0e")) @[execute.scala 79:37]
    node _T_759 = asUInt(_T_758) @[execute.scala 79:37]
    node _T_760 = tail(_T_759, 1) @[execute.scala 79:37]
    node _T_763 = add(UInt<6>("h032"), io.amount) @[execute.scala 79:60]
    node _T_764 = tail(_T_763, 1) @[execute.scala 79:60]
    node _T_766 = mux(_T_756, _T_87[_T_760], _T_87[_T_764]) @[execute.scala 79:10]
    node _T_768 = lt(io.amount, UInt<4>("h0d")) @[execute.scala 79:15]
    node _T_770 = sub(io.amount, UInt<4>("h0d")) @[execute.scala 79:37]
    node _T_771 = asUInt(_T_770) @[execute.scala 79:37]
    node _T_772 = tail(_T_771, 1) @[execute.scala 79:37]
    node _T_775 = add(UInt<6>("h033"), io.amount) @[execute.scala 79:60]
    node _T_776 = tail(_T_775, 1) @[execute.scala 79:60]
    node _T_778 = mux(_T_768, _T_87[_T_772], _T_87[_T_776]) @[execute.scala 79:10]
    node _T_780 = lt(io.amount, UInt<4>("h0c")) @[execute.scala 79:15]
    node _T_782 = sub(io.amount, UInt<4>("h0c")) @[execute.scala 79:37]
    node _T_783 = asUInt(_T_782) @[execute.scala 79:37]
    node _T_784 = tail(_T_783, 1) @[execute.scala 79:37]
    node _T_787 = add(UInt<6>("h034"), io.amount) @[execute.scala 79:60]
    node _T_788 = tail(_T_787, 1) @[execute.scala 79:60]
    node _T_790 = mux(_T_780, _T_87[_T_784], _T_87[_T_788]) @[execute.scala 79:10]
    node _T_792 = lt(io.amount, UInt<4>("h0b")) @[execute.scala 79:15]
    node _T_794 = sub(io.amount, UInt<4>("h0b")) @[execute.scala 79:37]
    node _T_795 = asUInt(_T_794) @[execute.scala 79:37]
    node _T_796 = tail(_T_795, 1) @[execute.scala 79:37]
    node _T_799 = add(UInt<6>("h035"), io.amount) @[execute.scala 79:60]
    node _T_800 = tail(_T_799, 1) @[execute.scala 79:60]
    node _T_802 = mux(_T_792, _T_87[_T_796], _T_87[_T_800]) @[execute.scala 79:10]
    node _T_804 = lt(io.amount, UInt<4>("h0a")) @[execute.scala 79:15]
    node _T_806 = sub(io.amount, UInt<4>("h0a")) @[execute.scala 79:37]
    node _T_807 = asUInt(_T_806) @[execute.scala 79:37]
    node _T_808 = tail(_T_807, 1) @[execute.scala 79:37]
    node _T_811 = add(UInt<6>("h036"), io.amount) @[execute.scala 79:60]
    node _T_812 = tail(_T_811, 1) @[execute.scala 79:60]
    node _T_814 = mux(_T_804, _T_87[_T_808], _T_87[_T_812]) @[execute.scala 79:10]
    node _T_816 = lt(io.amount, UInt<4>("h09")) @[execute.scala 79:15]
    node _T_818 = sub(io.amount, UInt<4>("h09")) @[execute.scala 79:37]
    node _T_819 = asUInt(_T_818) @[execute.scala 79:37]
    node _T_820 = tail(_T_819, 1) @[execute.scala 79:37]
    node _T_823 = add(UInt<6>("h037"), io.amount) @[execute.scala 79:60]
    node _T_824 = tail(_T_823, 1) @[execute.scala 79:60]
    node _T_826 = mux(_T_816, _T_87[_T_820], _T_87[_T_824]) @[execute.scala 79:10]
    node _T_828 = lt(io.amount, UInt<4>("h08")) @[execute.scala 79:15]
    node _T_830 = sub(io.amount, UInt<4>("h08")) @[execute.scala 79:37]
    node _T_831 = asUInt(_T_830) @[execute.scala 79:37]
    node _T_832 = tail(_T_831, 1) @[execute.scala 79:37]
    node _T_835 = add(UInt<6>("h038"), io.amount) @[execute.scala 79:60]
    node _T_836 = tail(_T_835, 1) @[execute.scala 79:60]
    node _T_838 = mux(_T_828, _T_87[_T_832], _T_87[_T_836]) @[execute.scala 79:10]
    node _T_840 = lt(io.amount, UInt<3>("h07")) @[execute.scala 79:15]
    node _T_842 = sub(io.amount, UInt<3>("h07")) @[execute.scala 79:37]
    node _T_843 = asUInt(_T_842) @[execute.scala 79:37]
    node _T_844 = tail(_T_843, 1) @[execute.scala 79:37]
    node _T_847 = add(UInt<6>("h039"), io.amount) @[execute.scala 79:60]
    node _T_848 = tail(_T_847, 1) @[execute.scala 79:60]
    node _T_850 = mux(_T_840, _T_87[_T_844], _T_87[_T_848]) @[execute.scala 79:10]
    node _T_852 = lt(io.amount, UInt<3>("h06")) @[execute.scala 79:15]
    node _T_854 = sub(io.amount, UInt<3>("h06")) @[execute.scala 79:37]
    node _T_855 = asUInt(_T_854) @[execute.scala 79:37]
    node _T_856 = tail(_T_855, 1) @[execute.scala 79:37]
    node _T_859 = add(UInt<6>("h03a"), io.amount) @[execute.scala 79:60]
    node _T_860 = tail(_T_859, 1) @[execute.scala 79:60]
    node _T_862 = mux(_T_852, _T_87[_T_856], _T_87[_T_860]) @[execute.scala 79:10]
    node _T_864 = lt(io.amount, UInt<3>("h05")) @[execute.scala 79:15]
    node _T_866 = sub(io.amount, UInt<3>("h05")) @[execute.scala 79:37]
    node _T_867 = asUInt(_T_866) @[execute.scala 79:37]
    node _T_868 = tail(_T_867, 1) @[execute.scala 79:37]
    node _T_871 = add(UInt<6>("h03b"), io.amount) @[execute.scala 79:60]
    node _T_872 = tail(_T_871, 1) @[execute.scala 79:60]
    node _T_874 = mux(_T_864, _T_87[_T_868], _T_87[_T_872]) @[execute.scala 79:10]
    node _T_876 = lt(io.amount, UInt<3>("h04")) @[execute.scala 79:15]
    node _T_878 = sub(io.amount, UInt<3>("h04")) @[execute.scala 79:37]
    node _T_879 = asUInt(_T_878) @[execute.scala 79:37]
    node _T_880 = tail(_T_879, 1) @[execute.scala 79:37]
    node _T_883 = add(UInt<6>("h03c"), io.amount) @[execute.scala 79:60]
    node _T_884 = tail(_T_883, 1) @[execute.scala 79:60]
    node _T_886 = mux(_T_876, _T_87[_T_880], _T_87[_T_884]) @[execute.scala 79:10]
    node _T_888 = lt(io.amount, UInt<2>("h03")) @[execute.scala 79:15]
    node _T_890 = sub(io.amount, UInt<2>("h03")) @[execute.scala 79:37]
    node _T_891 = asUInt(_T_890) @[execute.scala 79:37]
    node _T_892 = tail(_T_891, 1) @[execute.scala 79:37]
    node _T_895 = add(UInt<6>("h03d"), io.amount) @[execute.scala 79:60]
    node _T_896 = tail(_T_895, 1) @[execute.scala 79:60]
    node _T_898 = mux(_T_888, _T_87[_T_892], _T_87[_T_896]) @[execute.scala 79:10]
    node _T_900 = lt(io.amount, UInt<2>("h02")) @[execute.scala 79:15]
    node _T_902 = sub(io.amount, UInt<2>("h02")) @[execute.scala 79:37]
    node _T_903 = asUInt(_T_902) @[execute.scala 79:37]
    node _T_904 = tail(_T_903, 1) @[execute.scala 79:37]
    node _T_907 = add(UInt<6>("h03e"), io.amount) @[execute.scala 79:60]
    node _T_908 = tail(_T_907, 1) @[execute.scala 79:60]
    node _T_910 = mux(_T_900, _T_87[_T_904], _T_87[_T_908]) @[execute.scala 79:10]
    node _T_912 = lt(io.amount, UInt<1>("h01")) @[execute.scala 79:15]
    node _T_914 = sub(io.amount, UInt<1>("h01")) @[execute.scala 79:37]
    node _T_915 = asUInt(_T_914) @[execute.scala 79:37]
    node _T_916 = tail(_T_915, 1) @[execute.scala 79:37]
    node _T_919 = add(UInt<6>("h03f"), io.amount) @[execute.scala 79:60]
    node _T_920 = tail(_T_919, 1) @[execute.scala 79:60]
    node _T_922 = mux(_T_912, _T_87[_T_916], _T_87[_T_920]) @[execute.scala 79:10]
    wire _T_926 : UInt<1>[64] @[execute.scala 78:25]
    _T_926[0] <= _T_166 @[execute.scala 78:25]
    _T_926[1] <= _T_178 @[execute.scala 78:25]
    _T_926[2] <= _T_190 @[execute.scala 78:25]
    _T_926[3] <= _T_202 @[execute.scala 78:25]
    _T_926[4] <= _T_214 @[execute.scala 78:25]
    _T_926[5] <= _T_226 @[execute.scala 78:25]
    _T_926[6] <= _T_238 @[execute.scala 78:25]
    _T_926[7] <= _T_250 @[execute.scala 78:25]
    _T_926[8] <= _T_262 @[execute.scala 78:25]
    _T_926[9] <= _T_274 @[execute.scala 78:25]
    _T_926[10] <= _T_286 @[execute.scala 78:25]
    _T_926[11] <= _T_298 @[execute.scala 78:25]
    _T_926[12] <= _T_310 @[execute.scala 78:25]
    _T_926[13] <= _T_322 @[execute.scala 78:25]
    _T_926[14] <= _T_334 @[execute.scala 78:25]
    _T_926[15] <= _T_346 @[execute.scala 78:25]
    _T_926[16] <= _T_358 @[execute.scala 78:25]
    _T_926[17] <= _T_370 @[execute.scala 78:25]
    _T_926[18] <= _T_382 @[execute.scala 78:25]
    _T_926[19] <= _T_394 @[execute.scala 78:25]
    _T_926[20] <= _T_406 @[execute.scala 78:25]
    _T_926[21] <= _T_418 @[execute.scala 78:25]
    _T_926[22] <= _T_430 @[execute.scala 78:25]
    _T_926[23] <= _T_442 @[execute.scala 78:25]
    _T_926[24] <= _T_454 @[execute.scala 78:25]
    _T_926[25] <= _T_466 @[execute.scala 78:25]
    _T_926[26] <= _T_478 @[execute.scala 78:25]
    _T_926[27] <= _T_490 @[execute.scala 78:25]
    _T_926[28] <= _T_502 @[execute.scala 78:25]
    _T_926[29] <= _T_514 @[execute.scala 78:25]
    _T_926[30] <= _T_526 @[execute.scala 78:25]
    _T_926[31] <= _T_538 @[execute.scala 78:25]
    _T_926[32] <= _T_550 @[execute.scala 78:25]
    _T_926[33] <= _T_562 @[execute.scala 78:25]
    _T_926[34] <= _T_574 @[execute.scala 78:25]
    _T_926[35] <= _T_586 @[execute.scala 78:25]
    _T_926[36] <= _T_598 @[execute.scala 78:25]
    _T_926[37] <= _T_610 @[execute.scala 78:25]
    _T_926[38] <= _T_622 @[execute.scala 78:25]
    _T_926[39] <= _T_634 @[execute.scala 78:25]
    _T_926[40] <= _T_646 @[execute.scala 78:25]
    _T_926[41] <= _T_658 @[execute.scala 78:25]
    _T_926[42] <= _T_670 @[execute.scala 78:25]
    _T_926[43] <= _T_682 @[execute.scala 78:25]
    _T_926[44] <= _T_694 @[execute.scala 78:25]
    _T_926[45] <= _T_706 @[execute.scala 78:25]
    _T_926[46] <= _T_718 @[execute.scala 78:25]
    _T_926[47] <= _T_730 @[execute.scala 78:25]
    _T_926[48] <= _T_742 @[execute.scala 78:25]
    _T_926[49] <= _T_754 @[execute.scala 78:25]
    _T_926[50] <= _T_766 @[execute.scala 78:25]
    _T_926[51] <= _T_778 @[execute.scala 78:25]
    _T_926[52] <= _T_790 @[execute.scala 78:25]
    _T_926[53] <= _T_802 @[execute.scala 78:25]
    _T_926[54] <= _T_814 @[execute.scala 78:25]
    _T_926[55] <= _T_826 @[execute.scala 78:25]
    _T_926[56] <= _T_838 @[execute.scala 78:25]
    _T_926[57] <= _T_850 @[execute.scala 78:25]
    _T_926[58] <= _T_862 @[execute.scala 78:25]
    _T_926[59] <= _T_874 @[execute.scala 78:25]
    _T_926[60] <= _T_886 @[execute.scala 78:25]
    _T_926[61] <= _T_898 @[execute.scala 78:25]
    _T_926[62] <= _T_910 @[execute.scala 78:25]
    _T_926[63] <= _T_922 @[execute.scala 78:25]
    node _T_993 = cat(_T_926[1], _T_926[0]) @[execute.scala 89:73]
    node _T_994 = cat(_T_926[3], _T_926[2]) @[execute.scala 89:73]
    node _T_995 = cat(_T_994, _T_993) @[execute.scala 89:73]
    node _T_996 = cat(_T_926[5], _T_926[4]) @[execute.scala 89:73]
    node _T_997 = cat(_T_926[7], _T_926[6]) @[execute.scala 89:73]
    node _T_998 = cat(_T_997, _T_996) @[execute.scala 89:73]
    node _T_999 = cat(_T_998, _T_995) @[execute.scala 89:73]
    node _T_1000 = cat(_T_926[9], _T_926[8]) @[execute.scala 89:73]
    node _T_1001 = cat(_T_926[11], _T_926[10]) @[execute.scala 89:73]
    node _T_1002 = cat(_T_1001, _T_1000) @[execute.scala 89:73]
    node _T_1003 = cat(_T_926[13], _T_926[12]) @[execute.scala 89:73]
    node _T_1004 = cat(_T_926[15], _T_926[14]) @[execute.scala 89:73]
    node _T_1005 = cat(_T_1004, _T_1003) @[execute.scala 89:73]
    node _T_1006 = cat(_T_1005, _T_1002) @[execute.scala 89:73]
    node _T_1007 = cat(_T_1006, _T_999) @[execute.scala 89:73]
    node _T_1008 = cat(_T_926[17], _T_926[16]) @[execute.scala 89:73]
    node _T_1009 = cat(_T_926[19], _T_926[18]) @[execute.scala 89:73]
    node _T_1010 = cat(_T_1009, _T_1008) @[execute.scala 89:73]
    node _T_1011 = cat(_T_926[21], _T_926[20]) @[execute.scala 89:73]
    node _T_1012 = cat(_T_926[23], _T_926[22]) @[execute.scala 89:73]
    node _T_1013 = cat(_T_1012, _T_1011) @[execute.scala 89:73]
    node _T_1014 = cat(_T_1013, _T_1010) @[execute.scala 89:73]
    node _T_1015 = cat(_T_926[25], _T_926[24]) @[execute.scala 89:73]
    node _T_1016 = cat(_T_926[27], _T_926[26]) @[execute.scala 89:73]
    node _T_1017 = cat(_T_1016, _T_1015) @[execute.scala 89:73]
    node _T_1018 = cat(_T_926[29], _T_926[28]) @[execute.scala 89:73]
    node _T_1019 = cat(_T_926[31], _T_926[30]) @[execute.scala 89:73]
    node _T_1020 = cat(_T_1019, _T_1018) @[execute.scala 89:73]
    node _T_1021 = cat(_T_1020, _T_1017) @[execute.scala 89:73]
    node _T_1022 = cat(_T_1021, _T_1014) @[execute.scala 89:73]
    node _T_1023 = cat(_T_1022, _T_1007) @[execute.scala 89:73]
    node _T_1024 = cat(_T_926[33], _T_926[32]) @[execute.scala 89:73]
    node _T_1025 = cat(_T_926[35], _T_926[34]) @[execute.scala 89:73]
    node _T_1026 = cat(_T_1025, _T_1024) @[execute.scala 89:73]
    node _T_1027 = cat(_T_926[37], _T_926[36]) @[execute.scala 89:73]
    node _T_1028 = cat(_T_926[39], _T_926[38]) @[execute.scala 89:73]
    node _T_1029 = cat(_T_1028, _T_1027) @[execute.scala 89:73]
    node _T_1030 = cat(_T_1029, _T_1026) @[execute.scala 89:73]
    node _T_1031 = cat(_T_926[41], _T_926[40]) @[execute.scala 89:73]
    node _T_1032 = cat(_T_926[43], _T_926[42]) @[execute.scala 89:73]
    node _T_1033 = cat(_T_1032, _T_1031) @[execute.scala 89:73]
    node _T_1034 = cat(_T_926[45], _T_926[44]) @[execute.scala 89:73]
    node _T_1035 = cat(_T_926[47], _T_926[46]) @[execute.scala 89:73]
    node _T_1036 = cat(_T_1035, _T_1034) @[execute.scala 89:73]
    node _T_1037 = cat(_T_1036, _T_1033) @[execute.scala 89:73]
    node _T_1038 = cat(_T_1037, _T_1030) @[execute.scala 89:73]
    node _T_1039 = cat(_T_926[49], _T_926[48]) @[execute.scala 89:73]
    node _T_1040 = cat(_T_926[51], _T_926[50]) @[execute.scala 89:73]
    node _T_1041 = cat(_T_1040, _T_1039) @[execute.scala 89:73]
    node _T_1042 = cat(_T_926[53], _T_926[52]) @[execute.scala 89:73]
    node _T_1043 = cat(_T_926[55], _T_926[54]) @[execute.scala 89:73]
    node _T_1044 = cat(_T_1043, _T_1042) @[execute.scala 89:73]
    node _T_1045 = cat(_T_1044, _T_1041) @[execute.scala 89:73]
    node _T_1046 = cat(_T_926[57], _T_926[56]) @[execute.scala 89:73]
    node _T_1047 = cat(_T_926[59], _T_926[58]) @[execute.scala 89:73]
    node _T_1048 = cat(_T_1047, _T_1046) @[execute.scala 89:73]
    node _T_1049 = cat(_T_926[61], _T_926[60]) @[execute.scala 89:73]
    node _T_1050 = cat(_T_926[63], _T_926[62]) @[execute.scala 89:73]
    node _T_1051 = cat(_T_1050, _T_1049) @[execute.scala 89:73]
    node _T_1052 = cat(_T_1051, _T_1048) @[execute.scala 89:73]
    node _T_1053 = cat(_T_1052, _T_1045) @[execute.scala 89:73]
    node _T_1054 = cat(_T_1053, _T_1038) @[execute.scala 89:73]
    node _T_1055 = cat(_T_1054, _T_1023) @[execute.scala 89:73]
    node _T_1056 = eq(UInt<2>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_1057 = mux(_T_1056, _T_1055, io.word) @[Mux.scala 46:16]
    node _T_1058 = eq(UInt<2>("h02"), io.opcode) @[Mux.scala 46:19]
    node _T_1059 = mux(_T_1058, _T_19, _T_1057) @[Mux.scala 46:16]
    node _T_1060 = eq(UInt<2>("h01"), io.opcode) @[Mux.scala 46:19]
    node _T_1061 = mux(_T_1060, _T_16, _T_1059) @[Mux.scala 46:16]
    node _T_1062 = eq(UInt<2>("h00"), io.opcode) @[Mux.scala 46:19]
    node res = mux(_T_1062, _T_15, _T_1061) @[Mux.scala 46:16]
    node _T_1063 = bits(res, 64, 64) @[execute.scala 92:18]
    node _T_1064 = bits(_T_1063, 0, 0) @[execute.scala 92:37]
    io.carry <= _T_1064 @[execute.scala 92:12]
    io.res <= res @[execute.scala 93:10]
    
  module BasicALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<64>, flip b : UInt<64>, flip opcode : UInt<3>, res : UInt<64>, nzcv : UInt<4>}
    
    node _T_16 = and(io.a, io.b) @[execute.scala 30:34]
    node _T_17 = not(io.b) @[execute.scala 31:36]
    node _T_18 = and(io.a, _T_17) @[execute.scala 31:34]
    node _T_19 = or(io.a, io.b) @[execute.scala 32:34]
    node _T_20 = not(io.b) @[execute.scala 33:36]
    node _T_21 = or(io.a, _T_20) @[execute.scala 33:34]
    node _T_22 = xor(io.a, io.b) @[execute.scala 34:34]
    node _T_23 = not(io.b) @[execute.scala 35:36]
    node _T_24 = xor(io.a, _T_23) @[execute.scala 35:34]
    node _T_25 = add(io.a, io.b) @[execute.scala 36:34]
    node _T_26 = tail(_T_25, 1) @[execute.scala 36:34]
    node _T_27 = sub(io.a, io.b) @[execute.scala 37:34]
    node _T_28 = asUInt(_T_27) @[execute.scala 37:34]
    node _T_29 = tail(_T_28, 1) @[execute.scala 37:34]
    node _T_30 = eq(UInt<3>("h07"), io.opcode) @[Mux.scala 46:19]
    node _T_31 = mux(_T_30, _T_29, UInt<1>("h00")) @[Mux.scala 46:16]
    node _T_32 = eq(UInt<3>("h06"), io.opcode) @[Mux.scala 46:19]
    node _T_33 = mux(_T_32, _T_26, _T_31) @[Mux.scala 46:16]
    node _T_34 = eq(UInt<3>("h05"), io.opcode) @[Mux.scala 46:19]
    node _T_35 = mux(_T_34, _T_24, _T_33) @[Mux.scala 46:16]
    node _T_36 = eq(UInt<3>("h04"), io.opcode) @[Mux.scala 46:19]
    node _T_37 = mux(_T_36, _T_22, _T_35) @[Mux.scala 46:16]
    node _T_38 = eq(UInt<3>("h03"), io.opcode) @[Mux.scala 46:19]
    node _T_39 = mux(_T_38, _T_21, _T_37) @[Mux.scala 46:16]
    node _T_40 = eq(UInt<3>("h02"), io.opcode) @[Mux.scala 46:19]
    node _T_41 = mux(_T_40, _T_19, _T_39) @[Mux.scala 46:16]
    node _T_42 = eq(UInt<3>("h01"), io.opcode) @[Mux.scala 46:19]
    node _T_43 = mux(_T_42, _T_18, _T_41) @[Mux.scala 46:16]
    node _T_44 = eq(UInt<3>("h00"), io.opcode) @[Mux.scala 46:19]
    node res = mux(_T_44, _T_16, _T_43) @[Mux.scala 46:16]
    wire nzcv : UInt<1>[4] @[execute.scala 43:21]
    nzcv[0] <= UInt<1>("h00") @[execute.scala 43:21]
    nzcv[1] <= UInt<1>("h00") @[execute.scala 43:21]
    nzcv[2] <= UInt<1>("h00") @[execute.scala 43:21]
    nzcv[3] <= UInt<1>("h00") @[execute.scala 43:21]
    node _T_58 = asSInt(res) @[execute.scala 44:18]
    node _T_60 = lt(_T_58, asSInt(UInt<1>("h00"))) @[execute.scala 44:25]
    nzcv[0] <= _T_60 @[execute.scala 44:11]
    node _T_62 = eq(res, UInt<1>("h00")) @[execute.scala 45:18]
    nzcv[1] <= _T_62 @[execute.scala 45:11]
    node _T_63 = add(io.a, io.b) @[execute.scala 47:20]
    node _T_64 = bits(_T_63, 64, 64) @[execute.scala 47:28]
    node _T_66 = eq(_T_64, UInt<1>("h01")) @[execute.scala 47:41]
    nzcv[2] <= _T_66 @[execute.scala 47:11]
    node _T_67 = asSInt(io.a) @[execute.scala 49:23]
    node _T_68 = asSInt(io.b) @[execute.scala 49:37]
    node _T_69 = add(_T_67, _T_68) @[execute.scala 49:30]
    node _T_70 = tail(_T_69, 1) @[execute.scala 49:30]
    node sign_sum = asSInt(_T_70) @[execute.scala 49:30]
    node _T_71 = asSInt(io.a) @[execute.scala 50:20]
    node _T_73 = gt(_T_71, asSInt(UInt<1>("h00"))) @[execute.scala 50:27]
    node _T_74 = asSInt(io.b) @[execute.scala 50:40]
    node _T_76 = gt(_T_74, asSInt(UInt<1>("h00"))) @[execute.scala 50:47]
    node isPos = and(_T_73, _T_76) @[execute.scala 50:33]
    node _T_77 = asSInt(io.a) @[execute.scala 51:20]
    node _T_79 = lt(_T_77, asSInt(UInt<1>("h00"))) @[execute.scala 51:27]
    node _T_80 = asSInt(io.b) @[execute.scala 51:40]
    node _T_82 = lt(_T_80, asSInt(UInt<1>("h00"))) @[execute.scala 51:47]
    node isNeg = and(_T_79, _T_82) @[execute.scala 51:33]
    when isPos : @[execute.scala 52:15]
      node _T_84 = gt(sign_sum, asSInt(UInt<1>("h00"))) @[execute.scala 53:27]
      node _T_86 = eq(_T_84, UInt<1>("h00")) @[execute.scala 53:16]
      nzcv[3] <= _T_86 @[execute.scala 53:13]
      skip @[execute.scala 52:15]
    else : @[execute.scala 54:21]
      when isNeg : @[execute.scala 54:21]
        node _T_88 = lt(sign_sum, asSInt(UInt<1>("h00"))) @[execute.scala 55:27]
        node _T_90 = eq(_T_88, UInt<1>("h00")) @[execute.scala 55:16]
        nzcv[3] <= _T_90 @[execute.scala 55:13]
        skip @[execute.scala 54:21]
      else : @[execute.scala 56:15]
        nzcv[3] <= UInt<1>("h00") @[execute.scala 57:13]
        skip @[execute.scala 56:15]
    node _T_92 = cat(nzcv[1], nzcv[0]) @[execute.scala 60:19]
    node _T_93 = cat(nzcv[3], nzcv[2]) @[execute.scala 60:19]
    node _T_94 = cat(_T_93, _T_92) @[execute.scala 60:19]
    io.nzcv <= _T_94 @[execute.scala 60:11]
    io.res <= res @[execute.scala 62:10]
    
  module ExecuteUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dinst : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}, flip rVal1 : UInt<64>, flip rVal2 : UInt<64>, einst : {valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>}}}
    
    node interVal2 = mux(io.dinst.rs2.valid, io.rVal2, io.dinst.imm.bits) @[execute.scala 110:22]
    inst shiftALU of ShiftALU @[execute.scala 113:24]
    shiftALU.clock <= clock
    shiftALU.reset <= reset
    shiftALU.io.word <= interVal2 @[execute.scala 114:20]
    shiftALU.io.amount <= io.dinst.shift_val.bits @[execute.scala 115:22]
    shiftALU.io.opcode <= io.dinst.shift_type @[execute.scala 116:22]
    node aluVal2 = mux(io.dinst.shift_val.valid, shiftALU.io.res, interVal2) @[execute.scala 119:20]
    inst basicALU of BasicALU @[execute.scala 122:24]
    basicALU.clock <= clock
    basicALU.reset <= reset
    basicALU.io.a <= io.rVal1 @[execute.scala 123:17]
    basicALU.io.b <= aluVal2 @[execute.scala 124:17]
    basicALU.io.opcode <= io.dinst.op @[execute.scala 125:22]
    wire einst : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>} @[execute.scala 128:19]
    einst.res <= basicALU.io.res @[execute.scala 129:13]
    einst.rd.bits <= io.dinst.rd.bits @[execute.scala 130:13]
    einst.rd.valid <= io.dinst.rd.valid @[execute.scala 130:13]
    einst.tag <= io.dinst.tag @[execute.scala 131:13]
    einst.nzcv.bits <= basicALU.io.nzcv @[execute.scala 132:19]
    einst.nzcv.valid <= io.dinst.nzcv_en @[execute.scala 133:20]
    io.einst.bits.res <= einst.res @[execute.scala 136:17]
    io.einst.bits.tag <= einst.tag @[execute.scala 136:17]
    io.einst.bits.nzcv.bits <= einst.nzcv.bits @[execute.scala 136:17]
    io.einst.bits.nzcv.valid <= einst.nzcv.valid @[execute.scala 136:17]
    io.einst.bits.rd.bits <= einst.rd.bits @[execute.scala 136:17]
    io.einst.bits.rd.valid <= einst.rd.valid @[execute.scala 136:17]
    node _T_151 = eq(UInt<3>("h04"), io.dinst.itype) @[Mux.scala 46:19]
    node _T_152 = mux(_T_151, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 46:16]
    node _T_153 = eq(UInt<3>("h01"), io.dinst.itype) @[Mux.scala 46:19]
    node _T_154 = mux(_T_153, UInt<1>("h01"), _T_152) @[Mux.scala 46:16]
    io.einst.valid <= _T_154 @[execute.scala 138:18]
    
  module FReg_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>}}, flip flush : UInt<1>}
    
    reg _T_100 : {rd : {valid : UInt<1>, bits : UInt<5>}, nzcv : {valid : UInt<1>, bits : UInt<4>}, tag : UInt<1>, res : UInt<64>}, clock @[FReg.scala 45:24]
    reg _T_109 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FReg.scala 46:30]
    node _T_111 = eq(_T_109, UInt<1>("h00")) @[FReg.scala 48:33]
    node _T_112 = or(_T_111, io.deq.ready) @[FReg.scala 48:40]
    node _T_113 = or(_T_112, io.flush) @[FReg.scala 48:56]
    wire _T_115 : UInt<1>
    _T_115 <= _T_113
    when _T_115 : @[FReg.scala 50:17]
      _T_100.res <= io.enq.bits.res @[FReg.scala 51:9]
      _T_100.tag <= io.enq.bits.tag @[FReg.scala 51:9]
      _T_100.nzcv.bits <= io.enq.bits.nzcv.bits @[FReg.scala 51:9]
      _T_100.nzcv.valid <= io.enq.bits.nzcv.valid @[FReg.scala 51:9]
      _T_100.rd.bits <= io.enq.bits.rd.bits @[FReg.scala 51:9]
      _T_100.rd.valid <= io.enq.bits.rd.valid @[FReg.scala 51:9]
      _T_109 <= io.enq.valid @[FReg.scala 52:11]
      skip @[FReg.scala 50:17]
    io.enq.ready <= _T_115 @[FReg.scala 54:16]
    io.deq.bits.res <= _T_100.res @[FReg.scala 56:15]
    io.deq.bits.tag <= _T_100.tag @[FReg.scala 56:15]
    io.deq.bits.nzcv.bits <= _T_100.nzcv.bits @[FReg.scala 56:15]
    io.deq.bits.nzcv.valid <= _T_100.nzcv.valid @[FReg.scala 56:15]
    io.deq.bits.rd.bits <= _T_100.rd.bits @[FReg.scala 56:15]
    io.deq.bits.rd.valid <= _T_100.rd.valid @[FReg.scala 56:15]
    node _T_117 = eq(io.flush, UInt<1>("h00")) @[FReg.scala 57:28]
    node _T_118 = and(_T_109, _T_117) @[FReg.scala 57:25]
    io.deq.valid <= _T_118 @[FReg.scala 57:16]
    
  module CondUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip cond : UInt<4>, flip nzcv : UInt<4>, res : UInt<1>}
    
    wire result : UInt<1>
    result <= UInt<1>("h00")
    node _T_13 = bits(io.cond, 3, 1) @[branch.scala 23:21]
    node _T_15 = eq(_T_13, UInt<1>("h00")) @[branch.scala 23:27]
    when _T_15 : @[branch.scala 23:41]
      node _T_16 = bits(io.nzcv, 2, 2) @[branch.scala 23:60]
      node _T_18 = eq(_T_16, UInt<1>("h01")) @[branch.scala 23:64]
      result <= _T_18 @[branch.scala 23:49]
      skip @[branch.scala 23:41]
    else : @[branch.scala 24:41]
      node _T_19 = bits(io.cond, 3, 1) @[branch.scala 24:21]
      node _T_21 = eq(_T_19, UInt<1>("h01")) @[branch.scala 24:27]
      when _T_21 : @[branch.scala 24:41]
        node _T_22 = bits(io.nzcv, 1, 1) @[branch.scala 24:60]
        node _T_24 = eq(_T_22, UInt<1>("h01")) @[branch.scala 24:64]
        result <= _T_24 @[branch.scala 24:49]
        skip @[branch.scala 24:41]
      else : @[branch.scala 25:41]
        node _T_25 = bits(io.cond, 3, 1) @[branch.scala 25:21]
        node _T_27 = eq(_T_25, UInt<2>("h02")) @[branch.scala 25:27]
        when _T_27 : @[branch.scala 25:41]
          node _T_28 = bits(io.nzcv, 3, 3) @[branch.scala 25:60]
          node _T_30 = eq(_T_28, UInt<1>("h01")) @[branch.scala 25:64]
          result <= _T_30 @[branch.scala 25:49]
          skip @[branch.scala 25:41]
        else : @[branch.scala 26:41]
          node _T_31 = bits(io.cond, 3, 1) @[branch.scala 26:21]
          node _T_33 = eq(_T_31, UInt<2>("h03")) @[branch.scala 26:27]
          when _T_33 : @[branch.scala 26:41]
            node _T_34 = bits(io.nzcv, 0, 0) @[branch.scala 26:60]
            node _T_36 = eq(_T_34, UInt<1>("h01")) @[branch.scala 26:64]
            result <= _T_36 @[branch.scala 26:49]
            skip @[branch.scala 26:41]
          else : @[branch.scala 27:41]
            node _T_37 = bits(io.cond, 3, 1) @[branch.scala 27:21]
            node _T_39 = eq(_T_37, UInt<3>("h04")) @[branch.scala 27:27]
            when _T_39 : @[branch.scala 27:41]
              node _T_40 = bits(io.nzcv, 1, 1) @[branch.scala 27:60]
              node _T_42 = eq(_T_40, UInt<1>("h01")) @[branch.scala 27:64]
              result <= _T_42 @[branch.scala 27:49]
              skip @[branch.scala 27:41]
            else : @[branch.scala 28:41]
              node _T_43 = bits(io.cond, 3, 1) @[branch.scala 28:21]
              node _T_45 = eq(_T_43, UInt<3>("h05")) @[branch.scala 28:27]
              when _T_45 : @[branch.scala 28:41]
                node _T_46 = bits(io.nzcv, 3, 3) @[branch.scala 28:60]
                node _T_48 = eq(_T_46, UInt<1>("h01")) @[branch.scala 28:64]
                result <= _T_48 @[branch.scala 28:49]
                skip @[branch.scala 28:41]
              else : @[branch.scala 29:41]
                node _T_49 = bits(io.cond, 3, 1) @[branch.scala 29:21]
                node _T_51 = eq(_T_49, UInt<3>("h06")) @[branch.scala 29:27]
                when _T_51 : @[branch.scala 29:41]
                  node _T_52 = bits(io.nzcv, 3, 3) @[branch.scala 29:60]
                  node _T_54 = eq(_T_52, UInt<1>("h01")) @[branch.scala 29:64]
                  result <= _T_54 @[branch.scala 29:49]
                  skip @[branch.scala 29:41]
                else : @[branch.scala 30:41]
                  node _T_55 = bits(io.cond, 3, 1) @[branch.scala 30:21]
                  node _T_57 = eq(_T_55, UInt<3>("h07")) @[branch.scala 30:27]
                  when _T_57 : @[branch.scala 30:41]
                    result <= UInt<1>("h01") @[branch.scala 30:49]
                    skip @[branch.scala 30:41]
    node _T_59 = bits(io.cond, 0, 0) @[branch.scala 32:15]
    node _T_61 = eq(_T_59, UInt<1>("h01")) @[branch.scala 32:19]
    node _T_63 = neq(io.cond, UInt<4>("h0f")) @[branch.scala 32:38]
    node _T_64 = and(_T_61, _T_63) @[branch.scala 32:27]
    when _T_64 : @[branch.scala 32:53]
      node _T_66 = eq(result, UInt<1>("h00")) @[branch.scala 33:15]
      io.res <= _T_66 @[branch.scala 33:12]
      skip @[branch.scala 32:53]
    else : @[branch.scala 34:15]
      io.res <= result @[branch.scala 35:12]
      skip @[branch.scala 34:15]
    
  module BranchUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dinst : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}, flip nzcv : UInt<4>, binst : {valid : UInt<1>, bits : {offset : UInt<64>, tag : UInt<1>}}}
    
    io.binst.valid <= UInt<1>("h00") @[branch.scala 52:18]
    io.binst.bits.tag <= io.dinst.tag @[branch.scala 53:21]
    wire signExtended : SInt<64> @[branch.scala 56:26]
    node _T_99 = asSInt(io.dinst.imm.bits) @[branch.scala 57:37]
    signExtended <= _T_99 @[branch.scala 57:16]
    node _T_100 = asUInt(signExtended) @[branch.scala 58:40]
    io.binst.bits.offset <= _T_100 @[branch.scala 58:24]
    inst cond of CondUnit @[branch.scala 61:20]
    cond.clock <= clock
    cond.reset <= reset
    cond.io.cond <= io.dinst.cond.bits @[branch.scala 62:16]
    cond.io.nzcv <= io.nzcv @[branch.scala 63:16]
    node _T_101 = eq(io.dinst.itype, UInt<3>("h02")) @[branch.scala 64:24]
    node _T_102 = eq(io.dinst.itype, UInt<3>("h03")) @[branch.scala 64:54]
    node _T_103 = or(_T_101, _T_102) @[branch.scala 64:36]
    when _T_103 : @[branch.scala 64:67]
      node _T_104 = eq(io.dinst.op, UInt<3>("h01")) @[branch.scala 65:22]
      when _T_104 : @[branch.scala 65:36]
        io.binst.valid <= cond.io.res @[branch.scala 66:22]
        skip @[branch.scala 65:36]
      else : @[branch.scala 67:38]
        node _T_105 = eq(io.dinst.op, UInt<3>("h00")) @[branch.scala 67:28]
        when _T_105 : @[branch.scala 67:38]
          io.binst.valid <= UInt<1>("h01") @[branch.scala 68:22]
          skip @[branch.scala 67:38]
      skip @[branch.scala 64:67]
    
  module FReg_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {offset : UInt<64>, tag : UInt<1>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {offset : UInt<64>, tag : UInt<1>}}, flip flush : UInt<1>}
    
    reg _T_34 : {offset : UInt<64>, tag : UInt<1>}, clock @[FReg.scala 45:24]
    reg _T_37 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FReg.scala 46:30]
    node _T_39 = eq(_T_37, UInt<1>("h00")) @[FReg.scala 48:33]
    node _T_40 = or(_T_39, io.deq.ready) @[FReg.scala 48:40]
    node _T_41 = or(_T_40, io.flush) @[FReg.scala 48:56]
    wire _T_43 : UInt<1>
    _T_43 <= _T_41
    when _T_43 : @[FReg.scala 50:17]
      _T_34.tag <= io.enq.bits.tag @[FReg.scala 51:9]
      _T_34.offset <= io.enq.bits.offset @[FReg.scala 51:9]
      _T_37 <= io.enq.valid @[FReg.scala 52:11]
      skip @[FReg.scala 50:17]
    io.enq.ready <= _T_43 @[FReg.scala 54:16]
    io.deq.bits.tag <= _T_34.tag @[FReg.scala 56:15]
    io.deq.bits.offset <= _T_34.offset @[FReg.scala 56:15]
    node _T_45 = eq(io.flush, UInt<1>("h00")) @[FReg.scala 57:28]
    node _T_46 = and(_T_37, _T_45) @[FReg.scala 57:25]
    io.deq.valid <= _T_46 @[FReg.scala 57:16]
    
  module SRAM : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip addr_r : UInt<8>, flip addr_w : UInt<8>, flip wen : UInt<1>, flip data_in : UInt<28>, data_out : UInt<28>}
    
    smem mem : UInt<28>[256] @[TLBLegacy.scala 124:24]
    when io.wen : @[TLBLegacy.scala 125:17]
      write mport _T_17 = mem[io.addr_w], clock
      _T_17 <= io.data_in
      skip @[TLBLegacy.scala 125:17]
    wire _T_20 : UInt @[TLBLegacy.scala 128:26]
    _T_20 is invalid @[TLBLegacy.scala 128:26]
    when UInt<1>("h01") : @[TLBLegacy.scala 128:26]
      _T_20 <= io.addr_r @[TLBLegacy.scala 128:26]
      node _T_22 = or(_T_20, UInt<8>("h00")) @[TLBLegacy.scala 128:26]
      node _T_23 = bits(_T_22, 7, 0) @[TLBLegacy.scala 128:26]
      read mport _T_24 = mem[_T_23], clock @[TLBLegacy.scala 128:26]
      skip @[TLBLegacy.scala 128:26]
    io.data_out <= _T_24 @[TLBLegacy.scala 128:15]
    
  module SRAM_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip addr_r : UInt<8>, flip addr_w : UInt<8>, flip wen : UInt<1>, flip data_in : UInt<20>, data_out : UInt<20>}
    
    smem mem : UInt<20>[256] @[TLBLegacy.scala 124:24]
    when io.wen : @[TLBLegacy.scala 125:17]
      write mport _T_17 = mem[io.addr_w], clock
      _T_17 <= io.data_in
      skip @[TLBLegacy.scala 125:17]
    wire _T_20 : UInt @[TLBLegacy.scala 128:26]
    _T_20 is invalid @[TLBLegacy.scala 128:26]
    when UInt<1>("h01") : @[TLBLegacy.scala 128:26]
      _T_20 <= io.addr_r @[TLBLegacy.scala 128:26]
      node _T_22 = or(_T_20, UInt<8>("h00")) @[TLBLegacy.scala 128:26]
      node _T_23 = bits(_T_22, 7, 0) @[TLBLegacy.scala 128:26]
      read mport _T_24 = mem[_T_23], clock @[TLBLegacy.scala 128:26]
      skip @[TLBLegacy.scala 128:26]
    io.data_out <= _T_24 @[TLBLegacy.scala 128:15]
    
  module TLBUnitLegacy : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip vaddr : {valid : UInt<1>, bits : {tag : UInt<28>, set : UInt<8>, offset : UInt<12>}}, flip rw : UInt<1>, hit : {valid : UInt<1>, bits : UInt<1>}, paddr : {valid : UInt<1>, bits : {pn : UInt<20>, offset : UInt<12>}}, flip write_tlb_valid : UInt<1>, flip write_tlb_entry : UInt<8>}
    
    reg set_reg : UInt<8>, clock @[TLBLegacy.scala 42:20]
    reg tag_reg : UInt<28>, clock @[TLBLegacy.scala 43:20]
    reg rw_reg : UInt<1>, clock @[TLBLegacy.scala 44:19]
    when io.vaddr.valid : @[TLBLegacy.scala 46:24]
      set_reg <= io.vaddr.bits.set @[TLBLegacy.scala 47:13]
      tag_reg <= io.vaddr.bits.tag @[TLBLegacy.scala 48:13]
      rw_reg <= io.rw @[TLBLegacy.scala 49:12]
      skip @[TLBLegacy.scala 46:24]
    inst tag_mem of SRAM @[TLBLegacy.scala 53:23]
    tag_mem.clock <= clock
    tag_mem.reset <= reset
    tag_mem.io.addr_r <= io.vaddr.bits.set @[TLBLegacy.scala 54:21]
    tag_mem.io.addr_w <= io.vaddr.bits.set @[TLBLegacy.scala 55:21]
    tag_mem.io.data_in <= io.vaddr.bits.tag @[TLBLegacy.scala 56:22]
    tag_mem.io.wen <= io.write_tlb_valid @[TLBLegacy.scala 57:18]
    inst data_mem of SRAM_1 @[TLBLegacy.scala 61:24]
    data_mem.clock <= clock
    data_mem.reset <= reset
    data_mem.io.addr_r <= io.vaddr.bits.set @[TLBLegacy.scala 62:22]
    data_mem.io.addr_w <= io.vaddr.bits.set @[TLBLegacy.scala 63:22]
    data_mem.io.data_in <= io.write_tlb_entry @[TLBLegacy.scala 64:23]
    data_mem.io.wen <= io.write_tlb_valid @[TLBLegacy.scala 65:19]
    reg valid : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[TLBLegacy.scala 68:22]
    reg dirty : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[TLBLegacy.scala 69:22]
    when io.write_tlb_valid : @[TLBLegacy.scala 72:28]
      node _T_42 = bits(reset, 0, 0) @[TLBLegacy.scala 73:11]
      node _T_44 = eq(_T_42, UInt<1>("h00")) @[TLBLegacy.scala 73:11]
      when _T_44 : @[TLBLegacy.scala 73:11]
        printf(clock, UInt<1>(1), "write tlb tag %x set %x \n", io.vaddr.bits.tag, io.vaddr.bits.set) @[TLBLegacy.scala 73:11]
        skip @[TLBLegacy.scala 73:11]
      node _T_47 = dshl(UInt<1>("h01"), io.vaddr.bits.set) @[TLBLegacy.scala 74:25]
      node _T_48 = or(valid, _T_47) @[TLBLegacy.scala 74:25]
      node _T_49 = not(valid) @[TLBLegacy.scala 74:25]
      node _T_50 = or(_T_49, _T_47) @[TLBLegacy.scala 74:25]
      node _T_51 = not(_T_50) @[TLBLegacy.scala 74:25]
      node _T_52 = mux(UInt<1>("h01"), _T_48, _T_51) @[TLBLegacy.scala 74:25]
      valid <= _T_52 @[TLBLegacy.scala 74:10]
      skip @[TLBLegacy.scala 72:28]
    io.paddr.valid <= UInt<1>("h00") @[TLBLegacy.scala 78:18]
    io.paddr.bits.pn <= data_mem.io.data_out @[TLBLegacy.scala 79:20]
    io.paddr.bits.offset <= io.vaddr.bits.offset @[TLBLegacy.scala 80:24]
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[TLBLegacy.scala 84:22]
    node _T_55 = eq(tag_mem.io.data_out, tag_reg) @[TLBLegacy.scala 88:19]
    node _T_56 = dshr(valid, set_reg) @[TLBLegacy.scala 88:40]
    node _T_57 = bits(_T_56, 0, 0) @[TLBLegacy.scala 88:40]
    node _T_58 = and(_T_55, _T_57) @[TLBLegacy.scala 88:32]
    io.hit.bits <= _T_58 @[TLBLegacy.scala 88:7]
    io.hit.valid <= UInt<1>("h00") @[TLBLegacy.scala 89:16]
    node _T_60 = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T_60 : @[Conditional.scala 40:58]
      node _T_62 = eq(io.write_tlb_valid, UInt<1>("h00")) @[TLBLegacy.scala 93:29]
      node _T_63 = and(io.vaddr.valid, _T_62) @[TLBLegacy.scala 93:27]
      when _T_63 : @[TLBLegacy.scala 93:49]
        state <= UInt<1>("h01") @[TLBLegacy.scala 94:15]
        skip @[TLBLegacy.scala 93:49]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_64 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_64 : @[Conditional.scala 39:67]
        io.hit.valid <= UInt<1>("h01") @[TLBLegacy.scala 98:20]
        when io.hit.bits : @[TLBLegacy.scala 99:16]
          node _T_66 = bits(reset, 0, 0) @[TLBLegacy.scala 100:15]
          node _T_68 = eq(_T_66, UInt<1>("h00")) @[TLBLegacy.scala 100:15]
          when _T_68 : @[TLBLegacy.scala 100:15]
            printf(clock, UInt<1>(1), "** TLB hit \n") @[TLBLegacy.scala 100:15]
            skip @[TLBLegacy.scala 100:15]
          state <= UInt<1>("h00") @[TLBLegacy.scala 101:15]
          io.paddr.valid <= UInt<1>("h01") @[TLBLegacy.scala 102:24]
          node _T_70 = bits(rw_reg, 0, 0) @[TLBLegacy.scala 104:28]
          node _T_72 = eq(_T_70, UInt<1>("h00")) @[TLBLegacy.scala 104:14]
          when _T_72 : @[TLBLegacy.scala 104:31]
            node _T_75 = dshl(UInt<1>("h01"), set_reg) @[TLBLegacy.scala 105:32]
            node _T_76 = or(dirty, _T_75) @[TLBLegacy.scala 105:32]
            node _T_77 = not(dirty) @[TLBLegacy.scala 105:32]
            node _T_78 = or(_T_77, _T_75) @[TLBLegacy.scala 105:32]
            node _T_79 = not(_T_78) @[TLBLegacy.scala 105:32]
            node _T_80 = mux(UInt<1>("h01"), _T_76, _T_79) @[TLBLegacy.scala 105:32]
            dirty <= _T_80 @[TLBLegacy.scala 105:17]
            skip @[TLBLegacy.scala 104:31]
          skip @[TLBLegacy.scala 99:16]
        else : @[TLBLegacy.scala 107:18]
          node _T_81 = bits(reset, 0, 0) @[TLBLegacy.scala 108:15]
          node _T_83 = eq(_T_81, UInt<1>("h00")) @[TLBLegacy.scala 108:15]
          when _T_83 : @[TLBLegacy.scala 108:15]
            printf(clock, UInt<1>(1), "** TLB miss \n") @[TLBLegacy.scala 108:15]
            skip @[TLBLegacy.scala 108:15]
          state <= UInt<1>("h00") @[TLBLegacy.scala 109:15]
          skip @[TLBLegacy.scala 107:18]
        skip @[Conditional.scala 39:67]
    
  module LoadStoreUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dinst : {valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}}, flip rVal1 : UInt<64>, flip rVal2 : UInt<64>, minst : {valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, res : UInt<64>, tag : UInt<1>}}, memReq : {valid : UInt<1>, bits : {addr : UInt<32>, rw : UInt<1>, data : UInt<64>}}, flip memRes : {valid : UInt<1>, bits : {data : UInt<64>}}, flip write_tlb_entry : UInt<8>, flip write_tlb_vaddr : {valid : UInt<1>, bits : {tag : UInt<28>, set : UInt<8>, offset : UInt<12>}}}
    
    reg dinst_reg : {rd : {valid : UInt<1>, bits : UInt<5>}, rs1 : {valid : UInt<1>, bits : UInt<5>}, rs2 : {valid : UInt<1>, bits : UInt<5>}, imm : {valid : UInt<1>, bits : UInt<26>}, shift_val : {valid : UInt<1>, bits : UInt<6>}, shift_type : UInt<2>, cond : {valid : UInt<1>, bits : UInt<4>}, itype : UInt<3>, op : UInt<3>, nzcv_en : UInt<1>, tag : UInt<1>, inst32 : {valid : UInt<1>, bits : UInt<32>}, pc : UInt<64>}, clock @[lsu.scala 55:22]
    node base = cvt(dinst_reg.pc) @[lsu.scala 58:31]
    wire imm_sign_extened : SInt<64> @[lsu.scala 61:30]
    node _T_237 = asSInt(io.dinst.bits.imm.bits) @[lsu.scala 62:46]
    imm_sign_extened <= _T_237 @[lsu.scala 62:20]
    wire vaddr : UInt<48> @[lsu.scala 67:19]
    node _T_239 = add(base, imm_sign_extened) @[lsu.scala 68:18]
    node _T_240 = tail(_T_239, 1) @[lsu.scala 68:18]
    node _T_241 = asSInt(_T_240) @[lsu.scala 68:18]
    node _T_242 = asUInt(_T_241) @[lsu.scala 68:34]
    vaddr <= _T_242 @[lsu.scala 68:9]
    wire vaddr_IO : {tag : UInt<28>, set : UInt<8>, offset : UInt<12>} @[lsu.scala 69:22]
    node _T_244 = bits(vaddr, 11, 0) @[lsu.scala 71:27]
    vaddr_IO.offset <= _T_244 @[lsu.scala 71:19]
    node _T_245 = bits(vaddr, 19, 12) @[lsu.scala 72:24]
    vaddr_IO.set <= _T_245 @[lsu.scala 72:16]
    node _T_246 = bits(vaddr, 47, 20) @[lsu.scala 73:24]
    vaddr_IO.tag <= _T_246 @[lsu.scala 73:16]
    wire data : UInt<64>
    data <= UInt<64>("h00")
    inst tlb of TLBUnitLegacy @[lsu.scala 80:19]
    tlb.clock <= clock
    tlb.reset <= reset
    tlb.io.write_tlb_valid <= io.write_tlb_vaddr.valid @[lsu.scala 82:26]
    tlb.io.write_tlb_entry <= io.write_tlb_entry @[lsu.scala 83:26]
    node _T_248 = mux(io.write_tlb_vaddr.valid, io.write_tlb_vaddr.bits, vaddr_IO) @[lsu.scala 84:27]
    tlb.io.vaddr.bits.offset <= _T_248.offset @[lsu.scala 84:21]
    tlb.io.vaddr.bits.set <= _T_248.set @[lsu.scala 84:21]
    tlb.io.vaddr.bits.tag <= _T_248.tag @[lsu.scala 84:21]
    tlb.io.vaddr.valid <= UInt<1>("h00") @[lsu.scala 86:22]
    tlb.io.rw <= UInt<1>("h01") @[lsu.scala 87:13]
    io.memReq.valid <= UInt<1>("h00") @[lsu.scala 90:19]
    node _T_251 = cat(tlb.io.paddr.bits.pn, tlb.io.paddr.bits.offset) @[lsu.scala 91:50]
    io.memReq.bits.addr <= _T_251 @[lsu.scala 91:23]
    io.memReq.bits.data <= data @[lsu.scala 92:23]
    io.memReq.bits.rw <= UInt<1>("h01") @[lsu.scala 93:21]
    wire res : UInt<64>
    res <= UInt<64>("h00")
    when io.memRes.valid : @[lsu.scala 96:25]
      res <= io.memRes.bits.data @[lsu.scala 97:9]
      skip @[lsu.scala 96:25]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[lsu.scala 102:22]
    node _T_254 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
    when _T_254 : @[Conditional.scala 40:58]
      node _T_255 = eq(io.dinst.bits.itype, UInt<3>("h05")) @[lsu.scala 105:32]
      when _T_255 : @[lsu.scala 105:45]
        dinst_reg.pc <= io.dinst.bits.pc @[lsu.scala 106:19]
        dinst_reg.inst32.bits <= io.dinst.bits.inst32.bits @[lsu.scala 106:19]
        dinst_reg.inst32.valid <= io.dinst.bits.inst32.valid @[lsu.scala 106:19]
        dinst_reg.tag <= io.dinst.bits.tag @[lsu.scala 106:19]
        dinst_reg.nzcv_en <= io.dinst.bits.nzcv_en @[lsu.scala 106:19]
        dinst_reg.op <= io.dinst.bits.op @[lsu.scala 106:19]
        dinst_reg.itype <= io.dinst.bits.itype @[lsu.scala 106:19]
        dinst_reg.cond.bits <= io.dinst.bits.cond.bits @[lsu.scala 106:19]
        dinst_reg.cond.valid <= io.dinst.bits.cond.valid @[lsu.scala 106:19]
        dinst_reg.shift_type <= io.dinst.bits.shift_type @[lsu.scala 106:19]
        dinst_reg.shift_val.bits <= io.dinst.bits.shift_val.bits @[lsu.scala 106:19]
        dinst_reg.shift_val.valid <= io.dinst.bits.shift_val.valid @[lsu.scala 106:19]
        dinst_reg.imm.bits <= io.dinst.bits.imm.bits @[lsu.scala 106:19]
        dinst_reg.imm.valid <= io.dinst.bits.imm.valid @[lsu.scala 106:19]
        dinst_reg.rs2.bits <= io.dinst.bits.rs2.bits @[lsu.scala 106:19]
        dinst_reg.rs2.valid <= io.dinst.bits.rs2.valid @[lsu.scala 106:19]
        dinst_reg.rs1.bits <= io.dinst.bits.rs1.bits @[lsu.scala 106:19]
        dinst_reg.rs1.valid <= io.dinst.bits.rs1.valid @[lsu.scala 106:19]
        dinst_reg.rd.bits <= io.dinst.bits.rd.bits @[lsu.scala 106:19]
        dinst_reg.rd.valid <= io.dinst.bits.rd.valid @[lsu.scala 106:19]
        tlb.io.vaddr.valid <= io.dinst.valid @[lsu.scala 107:28]
        state <= UInt<2>("h01") @[lsu.scala 108:15]
        skip @[lsu.scala 105:45]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_256 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
      when _T_256 : @[Conditional.scala 39:67]
        when tlb.io.hit.valid : @[lsu.scala 112:30]
          node _T_257 = bits(tlb.io.hit.bits, 0, 0) @[lsu.scala 113:36]
          when _T_257 : @[lsu.scala 113:39]
            io.memReq.valid <= UInt<1>("h01") @[lsu.scala 114:27]
            state <= UInt<2>("h02") @[lsu.scala 115:17]
            skip @[lsu.scala 113:39]
          else : @[lsu.scala 116:20]
            state <= UInt<2>("h00") @[lsu.scala 118:17]
            skip @[lsu.scala 116:20]
          skip @[lsu.scala 112:30]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_259 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_259 : @[Conditional.scala 39:67]
          node _T_260 = bits(io.memRes.valid, 0, 0) @[lsu.scala 123:34]
          when _T_260 : @[lsu.scala 123:37]
            state <= UInt<2>("h00") @[lsu.scala 124:15]
            skip @[lsu.scala 123:37]
          skip @[Conditional.scala 39:67]
    wire minst : {rd : {valid : UInt<1>, bits : UInt<5>}, res : UInt<64>, tag : UInt<1>} @[lsu.scala 130:19]
    minst.res <= io.memRes.bits.data @[lsu.scala 131:13]
    minst.rd.bits <= dinst_reg.rd.bits @[lsu.scala 132:12]
    minst.rd.valid <= dinst_reg.rd.valid @[lsu.scala 132:12]
    minst.tag <= dinst_reg.tag @[lsu.scala 133:13]
    io.minst.bits.tag <= minst.tag @[lsu.scala 135:17]
    io.minst.bits.res <= minst.res @[lsu.scala 135:17]
    io.minst.bits.rd.bits <= minst.rd.bits @[lsu.scala 135:17]
    io.minst.bits.rd.valid <= minst.rd.valid @[lsu.scala 135:17]
    node _T_270 = eq(state, UInt<2>("h02")) @[lsu.scala 136:27]
    node _T_271 = bits(io.memRes.valid, 0, 0) @[lsu.scala 136:60]
    node _T_272 = and(_T_270, _T_271) @[lsu.scala 136:41]
    io.minst.valid <= _T_272 @[lsu.scala 136:18]
    
  module FReg_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, res : UInt<64>, tag : UInt<1>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : {valid : UInt<1>, bits : UInt<5>}, res : UInt<64>, tag : UInt<1>}}, flip flush : UInt<1>}
    
    reg _T_78 : {rd : {valid : UInt<1>, bits : UInt<5>}, res : UInt<64>, tag : UInt<1>}, clock @[FReg.scala 45:24]
    reg _T_85 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[FReg.scala 46:30]
    node _T_87 = eq(_T_85, UInt<1>("h00")) @[FReg.scala 48:33]
    node _T_88 = or(_T_87, io.deq.ready) @[FReg.scala 48:40]
    node _T_89 = or(_T_88, io.flush) @[FReg.scala 48:56]
    wire _T_91 : UInt<1>
    _T_91 <= _T_89
    when _T_91 : @[FReg.scala 50:17]
      _T_78.tag <= io.enq.bits.tag @[FReg.scala 51:9]
      _T_78.res <= io.enq.bits.res @[FReg.scala 51:9]
      _T_78.rd.bits <= io.enq.bits.rd.bits @[FReg.scala 51:9]
      _T_78.rd.valid <= io.enq.bits.rd.valid @[FReg.scala 51:9]
      _T_85 <= io.enq.valid @[FReg.scala 52:11]
      skip @[FReg.scala 50:17]
    io.enq.ready <= _T_91 @[FReg.scala 54:16]
    io.deq.bits.tag <= _T_78.tag @[FReg.scala 56:15]
    io.deq.bits.res <= _T_78.res @[FReg.scala 56:15]
    io.deq.bits.rd.bits <= _T_78.rd.bits @[FReg.scala 56:15]
    io.deq.bits.rd.valid <= _T_78.rd.valid @[FReg.scala 56:15]
    node _T_93 = eq(io.flush, UInt<1>("h00")) @[FReg.scala 57:28]
    node _T_94 = and(_T_85, _T_93) @[FReg.scala 57:25]
    io.deq.valid <= _T_94 @[FReg.scala 57:16]
    
  module Proc : 
    input clock : Clock
    input reset : UInt<1>
    output io : {ppageBRAM : {flip CLK : UInt<1>, flip RST : UInt<1>, flip WE : UInt<1>, flip EN : UInt<1>, flip ADDR : UInt<10>, flip DI : UInt<36>, DO : UInt<36>}, stateBRAM : {flip CLK : UInt<1>, flip RST : UInt<1>, flip WE : UInt<1>, flip EN : UInt<1>, flip ADDR : UInt<10>, flip DI : UInt<36>, DO : UInt<36>}, host2tpu : {flip fire : UInt<1>, flip fireTag : UInt<1>, done : UInt<1>, doneTag : UInt<1>}}
    
    inst ppage of BRAM @[proc.scala 71:21]
    ppage.clock <= clock
    ppage.reset <= reset
    inst state of BRAM_1 @[proc.scala 73:21]
    state.clock <= clock
    state.reset <= reset
    inst tpu of TransplantUnit @[proc.scala 75:19]
    tpu.clock <= clock
    tpu.reset <= reset
    wire _T_42 : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>} @[pstate.scala 50:20]
    _T_42.PC <= UInt<64>("h00") @[pstate.scala 51:13]
    _T_42.SP <= UInt<64>("h00") @[pstate.scala 52:13]
    _T_42.EL <= UInt<64>("h00") @[pstate.scala 53:13]
    _T_42.NZCV <= UInt<4>("h00") @[pstate.scala 54:15]
    wire emptyPStateRegs : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>}
    emptyPStateRegs.NZCV <= _T_42.NZCV
    emptyPStateRegs.EL <= _T_42.EL
    emptyPStateRegs.SP <= _T_42.SP
    emptyPStateRegs.PC <= _T_42.PC
    inst RFile of RFile @[proc.scala 80:58]
    RFile.clock <= clock
    RFile.reset <= reset
    inst RFile_1 of RFile_1 @[proc.scala 80:58]
    RFile_1.clock <= clock
    RFile_1.reset <= reset
    wire vec_rfile : {flip rs1_addr : UInt<5>, rs1_data : UInt<64>, flip rs2_addr : UInt<5>, rs2_data : UInt<64>, flip waddr : UInt<5>, flip wdata : UInt<64>, flip wen : UInt<1>}[2] @[proc.scala 80:26]
    RFile.io.wen <= vec_rfile[0].wen @[proc.scala 80:26]
    RFile.io.wdata <= vec_rfile[0].wdata @[proc.scala 80:26]
    RFile.io.waddr <= vec_rfile[0].waddr @[proc.scala 80:26]
    vec_rfile[0].rs2_data <= RFile.io.rs2_data @[proc.scala 80:26]
    RFile.io.rs2_addr <= vec_rfile[0].rs2_addr @[proc.scala 80:26]
    vec_rfile[0].rs1_data <= RFile.io.rs1_data @[proc.scala 80:26]
    RFile.io.rs1_addr <= vec_rfile[0].rs1_addr @[proc.scala 80:26]
    RFile_1.io.wen <= vec_rfile[1].wen @[proc.scala 80:26]
    RFile_1.io.wdata <= vec_rfile[1].wdata @[proc.scala 80:26]
    RFile_1.io.waddr <= vec_rfile[1].waddr @[proc.scala 80:26]
    vec_rfile[1].rs2_data <= RFile_1.io.rs2_data @[proc.scala 80:26]
    RFile_1.io.rs2_addr <= vec_rfile[1].rs2_addr @[proc.scala 80:26]
    vec_rfile[1].rs1_data <= RFile_1.io.rs1_data @[proc.scala 80:26]
    RFile_1.io.rs1_addr <= vec_rfile[1].rs1_addr @[proc.scala 80:26]
    wire _T_124 : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>}[2] @[proc.scala 81:34]
    _T_124[0].NZCV <= emptyPStateRegs.NZCV @[proc.scala 81:34]
    _T_124[0].EL <= emptyPStateRegs.EL @[proc.scala 81:34]
    _T_124[0].SP <= emptyPStateRegs.SP @[proc.scala 81:34]
    _T_124[0].PC <= emptyPStateRegs.PC @[proc.scala 81:34]
    _T_124[1].NZCV <= emptyPStateRegs.NZCV @[proc.scala 81:34]
    _T_124[1].EL <= emptyPStateRegs.EL @[proc.scala 81:34]
    _T_124[1].SP <= emptyPStateRegs.SP @[proc.scala 81:34]
    _T_124[1].PC <= emptyPStateRegs.PC @[proc.scala 81:34]
    reg vec_pregs : {PC : UInt<64>, SP : UInt<32>, EL : UInt<32>, NZCV : UInt<4>}[2], clock with : (reset => (reset, _T_124)) @[proc.scala 81:26]
    reg specPCReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[proc.scala 84:26]
    inst fetch of FetchUnit @[proc.scala 86:21]
    fetch.clock <= clock
    fetch.reset <= reset
    inst decoder of DecodeUnit @[proc.scala 89:23]
    decoder.clock <= clock
    decoder.reset <= reset
    inst decReg of FReg @[proc.scala 90:22]
    decReg.clock <= clock
    decReg.reset <= reset
    inst issuer of IssueUnit @[proc.scala 92:22]
    issuer.clock <= clock
    issuer.reset <= reset
    inst executer of ExecuteUnit @[proc.scala 96:24]
    executer.clock <= clock
    executer.reset <= reset
    inst exeReg of FReg_1 @[proc.scala 97:22]
    exeReg.clock <= clock
    exeReg.reset <= reset
    inst brancher of BranchUnit @[proc.scala 99:24]
    brancher.clock <= clock
    brancher.reset <= reset
    inst brReg of FReg_2 @[proc.scala 100:21]
    brReg.clock <= clock
    brReg.reset <= reset
    inst ldstU of LoadStoreUnit @[proc.scala 102:21]
    ldstU.clock <= clock
    ldstU.reset <= reset
    inst ldstUReg of FReg_3 @[proc.scala 103:24]
    ldstUReg.clock <= clock
    ldstUReg.reset <= reset
    wire undefINSN : {valid : UInt<1>, bits : UInt<1>} @[proc.scala 105:23]
    wire _T_192 : UInt<1>[2] @[proc.scala 108:33]
    _T_192[0] <= UInt<1>("h00") @[proc.scala 108:33]
    _T_192[1] <= UInt<1>("h00") @[proc.scala 108:33]
    reg fetch_en : UInt<1>[2], clock with : (reset => (reset, _T_192)) @[proc.scala 108:25]
    ppage.io.portA.writeEn <= io.ppageBRAM.WE @[bram.scala 148:8]
    ppage.io.portA.en <= io.ppageBRAM.EN @[bram.scala 149:8]
    ppage.io.portA.dataIn <= io.ppageBRAM.DI @[bram.scala 150:8]
    io.ppageBRAM.DO <= ppage.io.portA.dataOut @[bram.scala 151:8]
    ppage.io.portA.addr <= io.ppageBRAM.ADDR @[bram.scala 152:10]
    state.io.portA.writeEn <= io.stateBRAM.WE @[bram.scala 148:8]
    state.io.portA.en <= io.stateBRAM.EN @[bram.scala 149:8]
    state.io.portA.dataIn <= io.stateBRAM.DI @[bram.scala 150:8]
    io.stateBRAM.DO <= state.io.portA.dataOut @[bram.scala 151:8]
    state.io.portA.addr <= io.stateBRAM.ADDR @[bram.scala 152:10]
    io.host2tpu.doneTag <= tpu.io.host2tpu.doneTag @[proc.scala 116:15]
    io.host2tpu.done <= tpu.io.host2tpu.done @[proc.scala 116:15]
    tpu.io.host2tpu.fireTag <= io.host2tpu.fireTag @[proc.scala 116:15]
    tpu.io.host2tpu.fire <= io.host2tpu.fire @[proc.scala 116:15]
    tpu.io.stateBRAM.dataOut <= state.io.portB.dataOut @[proc.scala 119:20]
    state.io.portB.dataIn <= tpu.io.stateBRAM.dataIn @[proc.scala 119:20]
    state.io.portB.addr <= tpu.io.stateBRAM.addr @[proc.scala 119:20]
    state.io.portB.en <= tpu.io.stateBRAM.en @[proc.scala 119:20]
    state.io.portB.writeEn <= tpu.io.stateBRAM.writeEn @[proc.scala 119:20]
    tpu.io.tpu2cpu.done <= UInt<1>("h00") @[proc.scala 120:23]
    tpu.io.tpu2cpu.doneTag <= UInt<1>("h00") @[proc.scala 121:26]
    wire fetch_tag : UInt
    fetch_tag <= UInt<1>("h00")
    when fetch_en[0] : @[proc.scala 126:23]
      fetch_tag <= UInt<1>("h00") @[proc.scala 127:17]
      skip @[proc.scala 126:23]
    when fetch_en[1] : @[proc.scala 126:23]
      fetch_tag <= UInt<1>("h01") @[proc.scala 127:17]
      skip @[proc.scala 126:23]
    fetch.io.ppageBRAM.dataOut <= ppage.io.portB.dataOut @[proc.scala 131:22]
    ppage.io.portB.dataIn <= fetch.io.ppageBRAM.dataIn @[proc.scala 131:22]
    ppage.io.portB.addr <= fetch.io.ppageBRAM.addr @[proc.scala 131:22]
    ppage.io.portB.en <= fetch.io.ppageBRAM.en @[proc.scala 131:22]
    ppage.io.portB.writeEn <= fetch.io.ppageBRAM.writeEn @[proc.scala 131:22]
    fetch.io.vecPC[0] <= vec_pregs[0].PC @[proc.scala 132:64]
    fetch.io.vecPC[1] <= vec_pregs[1].PC @[proc.scala 132:64]
    fetch.io.tagIn <= fetch_tag @[proc.scala 134:18]
    node _T_225 = or(fetch_tag, UInt<1>("h00"))
    node _T_226 = bits(_T_225, 0, 0)
    fetch.io.en <= fetch_en[_T_226] @[proc.scala 135:15]
    fetch.io.branch.valid <= brReg.io.deq.valid @[proc.scala 136:25]
    fetch.io.branch.bits.tag <= brReg.io.deq.bits.tag @[proc.scala 137:24]
    fetch.io.branch.bits.offset <= brReg.io.deq.bits.offset @[proc.scala 137:24]
    fetch.io.fire.valid <= tpu.io.tpu2cpu.fire @[proc.scala 138:23]
    fetch.io.fire.bits <= tpu.io.tpu2cpu.fireTag @[proc.scala 139:22]
    decoder.io.finst.pc <= fetch.io.deq.bits.pc @[proc.scala 142:20]
    decoder.io.finst.tag <= fetch.io.deq.bits.tag @[proc.scala 142:20]
    decoder.io.finst.inst <= fetch.io.deq.bits.inst @[proc.scala 142:20]
    decReg.io.enq.bits.pc <= decoder.io.dinst.pc @[proc.scala 143:22]
    decReg.io.enq.bits.inst32.bits <= decoder.io.dinst.inst32.bits @[proc.scala 143:22]
    decReg.io.enq.bits.inst32.valid <= decoder.io.dinst.inst32.valid @[proc.scala 143:22]
    decReg.io.enq.bits.tag <= decoder.io.dinst.tag @[proc.scala 143:22]
    decReg.io.enq.bits.nzcv_en <= decoder.io.dinst.nzcv_en @[proc.scala 143:22]
    decReg.io.enq.bits.op <= decoder.io.dinst.op @[proc.scala 143:22]
    decReg.io.enq.bits.itype <= decoder.io.dinst.itype @[proc.scala 143:22]
    decReg.io.enq.bits.cond.bits <= decoder.io.dinst.cond.bits @[proc.scala 143:22]
    decReg.io.enq.bits.cond.valid <= decoder.io.dinst.cond.valid @[proc.scala 143:22]
    decReg.io.enq.bits.shift_type <= decoder.io.dinst.shift_type @[proc.scala 143:22]
    decReg.io.enq.bits.shift_val.bits <= decoder.io.dinst.shift_val.bits @[proc.scala 143:22]
    decReg.io.enq.bits.shift_val.valid <= decoder.io.dinst.shift_val.valid @[proc.scala 143:22]
    decReg.io.enq.bits.imm.bits <= decoder.io.dinst.imm.bits @[proc.scala 143:22]
    decReg.io.enq.bits.imm.valid <= decoder.io.dinst.imm.valid @[proc.scala 143:22]
    decReg.io.enq.bits.rs2.bits <= decoder.io.dinst.rs2.bits @[proc.scala 143:22]
    decReg.io.enq.bits.rs2.valid <= decoder.io.dinst.rs2.valid @[proc.scala 143:22]
    decReg.io.enq.bits.rs1.bits <= decoder.io.dinst.rs1.bits @[proc.scala 143:22]
    decReg.io.enq.bits.rs1.valid <= decoder.io.dinst.rs1.valid @[proc.scala 143:22]
    decReg.io.enq.bits.rd.bits <= decoder.io.dinst.rd.bits @[proc.scala 143:22]
    decReg.io.enq.bits.rd.valid <= decoder.io.dinst.rd.valid @[proc.scala 143:22]
    fetch.io.deq.ready <= decReg.io.enq.ready @[proc.scala 145:22]
    decReg.io.enq.valid <= fetch.io.deq.valid @[proc.scala 146:23]
    issuer.io.enq.bits.pc <= decReg.io.deq.bits.pc @[proc.scala 149:17]
    issuer.io.enq.bits.inst32.bits <= decReg.io.deq.bits.inst32.bits @[proc.scala 149:17]
    issuer.io.enq.bits.inst32.valid <= decReg.io.deq.bits.inst32.valid @[proc.scala 149:17]
    issuer.io.enq.bits.tag <= decReg.io.deq.bits.tag @[proc.scala 149:17]
    issuer.io.enq.bits.nzcv_en <= decReg.io.deq.bits.nzcv_en @[proc.scala 149:17]
    issuer.io.enq.bits.op <= decReg.io.deq.bits.op @[proc.scala 149:17]
    issuer.io.enq.bits.itype <= decReg.io.deq.bits.itype @[proc.scala 149:17]
    issuer.io.enq.bits.cond.bits <= decReg.io.deq.bits.cond.bits @[proc.scala 149:17]
    issuer.io.enq.bits.cond.valid <= decReg.io.deq.bits.cond.valid @[proc.scala 149:17]
    issuer.io.enq.bits.shift_type <= decReg.io.deq.bits.shift_type @[proc.scala 149:17]
    issuer.io.enq.bits.shift_val.bits <= decReg.io.deq.bits.shift_val.bits @[proc.scala 149:17]
    issuer.io.enq.bits.shift_val.valid <= decReg.io.deq.bits.shift_val.valid @[proc.scala 149:17]
    issuer.io.enq.bits.imm.bits <= decReg.io.deq.bits.imm.bits @[proc.scala 149:17]
    issuer.io.enq.bits.imm.valid <= decReg.io.deq.bits.imm.valid @[proc.scala 149:17]
    issuer.io.enq.bits.rs2.bits <= decReg.io.deq.bits.rs2.bits @[proc.scala 149:17]
    issuer.io.enq.bits.rs2.valid <= decReg.io.deq.bits.rs2.valid @[proc.scala 149:17]
    issuer.io.enq.bits.rs1.bits <= decReg.io.deq.bits.rs1.bits @[proc.scala 149:17]
    issuer.io.enq.bits.rs1.valid <= decReg.io.deq.bits.rs1.valid @[proc.scala 149:17]
    issuer.io.enq.bits.rd.bits <= decReg.io.deq.bits.rd.bits @[proc.scala 149:17]
    issuer.io.enq.bits.rd.valid <= decReg.io.deq.bits.rd.valid @[proc.scala 149:17]
    issuer.io.enq.valid <= decReg.io.deq.valid @[proc.scala 149:17]
    decReg.io.deq.ready <= issuer.io.enq.ready @[proc.scala 149:17]
    node _T_227 = or(exeReg.io.enq.ready, brReg.io.enq.ready) @[proc.scala 154:46]
    issuer.io.deq.ready <= _T_227 @[proc.scala 154:23]
    issuer.io.exeReg.bits.res <= exeReg.io.deq.bits.res @[proc.scala 156:26]
    issuer.io.exeReg.bits.tag <= exeReg.io.deq.bits.tag @[proc.scala 156:26]
    issuer.io.exeReg.bits.nzcv.bits <= exeReg.io.deq.bits.nzcv.bits @[proc.scala 156:26]
    issuer.io.exeReg.bits.nzcv.valid <= exeReg.io.deq.bits.nzcv.valid @[proc.scala 156:26]
    issuer.io.exeReg.bits.rd.bits <= exeReg.io.deq.bits.rd.bits @[proc.scala 156:26]
    issuer.io.exeReg.bits.rd.valid <= exeReg.io.deq.bits.rd.valid @[proc.scala 156:26]
    issuer.io.exeReg.valid <= exeReg.io.deq.valid @[proc.scala 157:26]
    vec_rfile[0].rs1_addr <= issuer.io.deq.bits.rs1.bits @[proc.scala 162:20]
    vec_rfile[0].rs2_addr <= issuer.io.deq.bits.rs2.bits @[proc.scala 163:20]
    vec_rfile[1].rs1_addr <= issuer.io.deq.bits.rs1.bits @[proc.scala 162:20]
    vec_rfile[1].rs2_addr <= issuer.io.deq.bits.rs2.bits @[proc.scala 163:20]
    executer.io.dinst.pc <= issuer.io.deq.bits.pc @[proc.scala 170:21]
    executer.io.dinst.inst32.bits <= issuer.io.deq.bits.inst32.bits @[proc.scala 170:21]
    executer.io.dinst.inst32.valid <= issuer.io.deq.bits.inst32.valid @[proc.scala 170:21]
    executer.io.dinst.tag <= issuer.io.deq.bits.tag @[proc.scala 170:21]
    executer.io.dinst.nzcv_en <= issuer.io.deq.bits.nzcv_en @[proc.scala 170:21]
    executer.io.dinst.op <= issuer.io.deq.bits.op @[proc.scala 170:21]
    executer.io.dinst.itype <= issuer.io.deq.bits.itype @[proc.scala 170:21]
    executer.io.dinst.cond.bits <= issuer.io.deq.bits.cond.bits @[proc.scala 170:21]
    executer.io.dinst.cond.valid <= issuer.io.deq.bits.cond.valid @[proc.scala 170:21]
    executer.io.dinst.shift_type <= issuer.io.deq.bits.shift_type @[proc.scala 170:21]
    executer.io.dinst.shift_val.bits <= issuer.io.deq.bits.shift_val.bits @[proc.scala 170:21]
    executer.io.dinst.shift_val.valid <= issuer.io.deq.bits.shift_val.valid @[proc.scala 170:21]
    executer.io.dinst.imm.bits <= issuer.io.deq.bits.imm.bits @[proc.scala 170:21]
    executer.io.dinst.imm.valid <= issuer.io.deq.bits.imm.valid @[proc.scala 170:21]
    executer.io.dinst.rs2.bits <= issuer.io.deq.bits.rs2.bits @[proc.scala 170:21]
    executer.io.dinst.rs2.valid <= issuer.io.deq.bits.rs2.valid @[proc.scala 170:21]
    executer.io.dinst.rs1.bits <= issuer.io.deq.bits.rs1.bits @[proc.scala 170:21]
    executer.io.dinst.rs1.valid <= issuer.io.deq.bits.rs1.valid @[proc.scala 170:21]
    executer.io.dinst.rd.bits <= issuer.io.deq.bits.rd.bits @[proc.scala 170:21]
    executer.io.dinst.rd.valid <= issuer.io.deq.bits.rd.valid @[proc.scala 170:21]
    executer.io.rVal1 <= vec_rfile[issuer.io.deq.bits.tag].rs1_data @[proc.scala 171:21]
    executer.io.rVal2 <= vec_rfile[issuer.io.deq.bits.tag].rs2_data @[proc.scala 172:21]
    node _T_258 = and(executer.io.einst.valid, issuer.io.deq.valid) @[proc.scala 174:50]
    node _T_259 = and(_T_258, exeReg.io.enq.ready) @[proc.scala 174:73]
    exeReg.io.enq.valid <= _T_259 @[proc.scala 174:23]
    exeReg.io.enq.bits.res <= executer.io.einst.bits.res @[proc.scala 175:23]
    exeReg.io.enq.bits.tag <= executer.io.einst.bits.tag @[proc.scala 175:23]
    exeReg.io.enq.bits.nzcv.bits <= executer.io.einst.bits.nzcv.bits @[proc.scala 175:23]
    exeReg.io.enq.bits.nzcv.valid <= executer.io.einst.bits.nzcv.valid @[proc.scala 175:23]
    exeReg.io.enq.bits.rd.bits <= executer.io.einst.bits.rd.bits @[proc.scala 175:23]
    exeReg.io.enq.bits.rd.valid <= executer.io.einst.bits.rd.valid @[proc.scala 175:23]
    brancher.io.dinst.pc <= issuer.io.deq.bits.pc @[proc.scala 178:21]
    brancher.io.dinst.inst32.bits <= issuer.io.deq.bits.inst32.bits @[proc.scala 178:21]
    brancher.io.dinst.inst32.valid <= issuer.io.deq.bits.inst32.valid @[proc.scala 178:21]
    brancher.io.dinst.tag <= issuer.io.deq.bits.tag @[proc.scala 178:21]
    brancher.io.dinst.nzcv_en <= issuer.io.deq.bits.nzcv_en @[proc.scala 178:21]
    brancher.io.dinst.op <= issuer.io.deq.bits.op @[proc.scala 178:21]
    brancher.io.dinst.itype <= issuer.io.deq.bits.itype @[proc.scala 178:21]
    brancher.io.dinst.cond.bits <= issuer.io.deq.bits.cond.bits @[proc.scala 178:21]
    brancher.io.dinst.cond.valid <= issuer.io.deq.bits.cond.valid @[proc.scala 178:21]
    brancher.io.dinst.shift_type <= issuer.io.deq.bits.shift_type @[proc.scala 178:21]
    brancher.io.dinst.shift_val.bits <= issuer.io.deq.bits.shift_val.bits @[proc.scala 178:21]
    brancher.io.dinst.shift_val.valid <= issuer.io.deq.bits.shift_val.valid @[proc.scala 178:21]
    brancher.io.dinst.imm.bits <= issuer.io.deq.bits.imm.bits @[proc.scala 178:21]
    brancher.io.dinst.imm.valid <= issuer.io.deq.bits.imm.valid @[proc.scala 178:21]
    brancher.io.dinst.rs2.bits <= issuer.io.deq.bits.rs2.bits @[proc.scala 178:21]
    brancher.io.dinst.rs2.valid <= issuer.io.deq.bits.rs2.valid @[proc.scala 178:21]
    brancher.io.dinst.rs1.bits <= issuer.io.deq.bits.rs1.bits @[proc.scala 178:21]
    brancher.io.dinst.rs1.valid <= issuer.io.deq.bits.rs1.valid @[proc.scala 178:21]
    brancher.io.dinst.rd.bits <= issuer.io.deq.bits.rd.bits @[proc.scala 178:21]
    brancher.io.dinst.rd.valid <= issuer.io.deq.bits.rd.valid @[proc.scala 178:21]
    brancher.io.nzcv <= vec_pregs[issuer.io.deq.bits.tag].NZCV @[proc.scala 179:20]
    node _T_263 = and(issuer.io.deq.valid, brancher.io.binst.valid) @[proc.scala 182:45]
    brReg.io.enq.valid <= _T_263 @[proc.scala 182:22]
    brReg.io.enq.bits.offset <= brancher.io.binst.bits.offset @[proc.scala 183:28]
    brReg.io.enq.bits.tag <= brancher.io.binst.bits.tag @[proc.scala 184:25]
    ldstU.io.dinst.bits.pc <= issuer.io.deq.bits.pc @[proc.scala 187:23]
    ldstU.io.dinst.bits.inst32.bits <= issuer.io.deq.bits.inst32.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.inst32.valid <= issuer.io.deq.bits.inst32.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.tag <= issuer.io.deq.bits.tag @[proc.scala 187:23]
    ldstU.io.dinst.bits.nzcv_en <= issuer.io.deq.bits.nzcv_en @[proc.scala 187:23]
    ldstU.io.dinst.bits.op <= issuer.io.deq.bits.op @[proc.scala 187:23]
    ldstU.io.dinst.bits.itype <= issuer.io.deq.bits.itype @[proc.scala 187:23]
    ldstU.io.dinst.bits.cond.bits <= issuer.io.deq.bits.cond.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.cond.valid <= issuer.io.deq.bits.cond.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.shift_type <= issuer.io.deq.bits.shift_type @[proc.scala 187:23]
    ldstU.io.dinst.bits.shift_val.bits <= issuer.io.deq.bits.shift_val.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.shift_val.valid <= issuer.io.deq.bits.shift_val.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.imm.bits <= issuer.io.deq.bits.imm.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.imm.valid <= issuer.io.deq.bits.imm.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.rs2.bits <= issuer.io.deq.bits.rs2.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.rs2.valid <= issuer.io.deq.bits.rs2.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.rs1.bits <= issuer.io.deq.bits.rs1.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.rs1.valid <= issuer.io.deq.bits.rs1.valid @[proc.scala 187:23]
    ldstU.io.dinst.bits.rd.bits <= issuer.io.deq.bits.rd.bits @[proc.scala 187:23]
    ldstU.io.dinst.bits.rd.valid <= issuer.io.deq.bits.rd.valid @[proc.scala 187:23]
    ldstU.io.dinst.valid <= issuer.io.deq.valid @[proc.scala 188:24]
    ldstU.io.rVal1 <= vec_rfile[issuer.io.deq.bits.tag].rs1_data @[proc.scala 189:18]
    ldstU.io.rVal2 <= vec_rfile[issuer.io.deq.bits.tag].rs2_data @[proc.scala 190:18]
    ldstU.io.memRes.valid <= UInt<1>("h00") @[proc.scala 192:25]
    ldstU.io.memRes.bits.data <= UInt<1>("h00") @[proc.scala 193:29]
    ldstU.io.write_tlb_vaddr.bits.offset is invalid @[proc.scala 196:28]
    ldstU.io.write_tlb_vaddr.bits.set is invalid @[proc.scala 196:28]
    ldstU.io.write_tlb_vaddr.bits.tag is invalid @[proc.scala 196:28]
    ldstU.io.write_tlb_vaddr.valid is invalid @[proc.scala 196:28]
    ldstU.io.write_tlb_entry is invalid @[proc.scala 197:28]
    node _T_266 = and(ldstU.io.minst.valid, issuer.io.deq.valid) @[proc.scala 200:49]
    ldstUReg.io.enq.valid <= _T_266 @[proc.scala 200:25]
    ldstUReg.io.enq.bits.tag <= ldstU.io.minst.bits.tag @[proc.scala 201:24]
    ldstUReg.io.enq.bits.res <= ldstU.io.minst.bits.res @[proc.scala 201:24]
    ldstUReg.io.enq.bits.rd.bits <= ldstU.io.minst.bits.rd.bits @[proc.scala 201:24]
    ldstUReg.io.enq.bits.rd.valid <= ldstU.io.minst.bits.rd.valid @[proc.scala 201:24]
    exeReg.io.deq.ready <= UInt<1>("h01") @[proc.scala 206:23]
    brReg.io.deq.ready <= UInt<1>("h01") @[proc.scala 207:22]
    ldstUReg.io.deq.ready <= UInt<1>("h01") @[proc.scala 208:25]
    when exeReg.io.deq.valid : @[proc.scala 212:31]
      vec_rfile[0].waddr <= exeReg.io.deq.bits.rd.bits @[proc.scala 213:28]
      vec_rfile[0].wdata <= exeReg.io.deq.bits.res @[proc.scala 214:28]
      skip @[proc.scala 212:31]
    else : @[proc.scala 215:39]
      when ldstUReg.io.deq.valid : @[proc.scala 215:39]
        vec_rfile[0].waddr <= ldstUReg.io.deq.bits.rd.bits @[proc.scala 216:28]
        vec_rfile[0].wdata <= ldstUReg.io.deq.bits.res @[proc.scala 217:28]
        skip @[proc.scala 215:39]
      else : @[proc.scala 218:16]
        vec_rfile[0].waddr <= exeReg.io.deq.bits.rd.bits @[proc.scala 219:28]
        vec_rfile[0].wdata <= exeReg.io.deq.bits.res @[proc.scala 220:28]
        skip @[proc.scala 218:16]
    vec_rfile[0].wen <= UInt<1>("h00") @[proc.scala 222:24]
    when exeReg.io.deq.valid : @[proc.scala 212:31]
      vec_rfile[1].waddr <= exeReg.io.deq.bits.rd.bits @[proc.scala 213:28]
      vec_rfile[1].wdata <= exeReg.io.deq.bits.res @[proc.scala 214:28]
      skip @[proc.scala 212:31]
    else : @[proc.scala 215:39]
      when ldstUReg.io.deq.valid : @[proc.scala 215:39]
        vec_rfile[1].waddr <= ldstUReg.io.deq.bits.rd.bits @[proc.scala 216:28]
        vec_rfile[1].wdata <= ldstUReg.io.deq.bits.res @[proc.scala 217:28]
        skip @[proc.scala 215:39]
      else : @[proc.scala 218:16]
        vec_rfile[1].waddr <= exeReg.io.deq.bits.rd.bits @[proc.scala 219:28]
        vec_rfile[1].wdata <= exeReg.io.deq.bits.res @[proc.scala 220:28]
        skip @[proc.scala 218:16]
    vec_rfile[1].wen <= UInt<1>("h00") @[proc.scala 222:24]
    when exeReg.io.deq.valid : @[proc.scala 224:29]
      vec_rfile[exeReg.io.deq.bits.tag].wen <= exeReg.io.deq.bits.rd.valid @[proc.scala 225:43]
      skip @[proc.scala 224:29]
    else : @[proc.scala 226:37]
      when ldstUReg.io.deq.valid : @[proc.scala 226:37]
        vec_rfile[ldstUReg.io.deq.bits.tag].wen <= ldstUReg.io.deq.bits.rd.valid @[proc.scala 227:45]
        skip @[proc.scala 226:37]
    node _T_302 = and(exeReg.io.deq.valid, exeReg.io.deq.bits.nzcv.valid) @[proc.scala 231:29]
    when _T_302 : @[proc.scala 231:63]
      vec_pregs[exeReg.io.deq.bits.tag].NZCV <= exeReg.io.deq.bits.nzcv.bits @[proc.scala 232:44]
      skip @[proc.scala 231:63]
    reg last_thread : UInt<1>, clock @[proc.scala 235:24]
    when brReg.io.deq.valid : @[proc.scala 238:28]
      node _T_313 = cvt(vec_pregs[brReg.io.deq.bits.tag].PC) @[proc.scala 239:81]
      node _T_314 = asSInt(brReg.io.deq.bits.offset) @[proc.scala 239:113]
      node _T_315 = add(_T_313, _T_314) @[proc.scala 239:86]
      node _T_316 = tail(_T_315, 1) @[proc.scala 239:86]
      node _T_317 = asSInt(_T_316) @[proc.scala 239:86]
      node _T_318 = asUInt(_T_317) @[proc.scala 239:127]
      vec_pregs[brReg.io.deq.bits.tag].PC <= _T_318 @[proc.scala 239:41]
      last_thread <= brReg.io.deq.bits.tag @[proc.scala 240:17]
      skip @[proc.scala 238:28]
    else : @[proc.scala 241:35]
      when exeReg.io.deq.valid : @[proc.scala 241:35]
        node _T_326 = add(vec_pregs[exeReg.io.deq.bits.tag].PC, UInt<3>("h04")) @[proc.scala 242:82]
        node _T_327 = tail(_T_326, 1) @[proc.scala 242:82]
        vec_pregs[exeReg.io.deq.bits.tag].PC <= _T_327 @[proc.scala 242:42]
        last_thread <= exeReg.io.deq.bits.tag @[proc.scala 243:17]
        skip @[proc.scala 241:35]
      else : @[proc.scala 244:37]
        when ldstUReg.io.deq.valid : @[proc.scala 244:37]
          node _T_335 = add(vec_pregs[ldstUReg.io.deq.bits.tag].PC, UInt<3>("h04")) @[proc.scala 245:86]
          node _T_336 = tail(_T_335, 1) @[proc.scala 245:86]
          vec_pregs[ldstUReg.io.deq.bits.tag].PC <= _T_336 @[proc.scala 245:44]
          last_thread <= exeReg.io.deq.bits.tag @[proc.scala 246:17]
          skip @[proc.scala 244:37]
    when tpu.io.tpu2cpu.fire : @[proc.scala 250:29]
      fetch_en[tpu.io.tpu2cpu.fireTag] <= UInt<1>("h01") @[proc.scala 251:38]
      skip @[proc.scala 250:29]
    reg _T_342 : UInt, clock @[proc.scala 254:28]
    _T_342 <= issuer.io.deq.bits.tag @[proc.scala 254:28]
    undefINSN.bits <= _T_342 @[proc.scala 254:18]
    node _T_343 = eq(issuer.io.deq.bits.itype, UInt<3>("h00")) @[proc.scala 255:72]
    node _T_344 = and(issuer.io.deq.valid, _T_343) @[proc.scala 255:50]
    reg _T_346 : UInt<1>, clock @[proc.scala 255:29]
    _T_346 <= _T_344 @[proc.scala 255:29]
    undefINSN.valid <= _T_346 @[proc.scala 255:19]
    tpu.io.tpu2cpu.done <= undefINSN.valid @[proc.scala 256:23]
    tpu.io.tpu2cpu.doneTag <= undefINSN.bits @[proc.scala 257:26]
    node _T_347 = eq(issuer.io.deq.bits.itype, UInt<3>("h00")) @[proc.scala 258:50]
    node _T_348 = and(issuer.io.deq.valid, _T_347) @[proc.scala 258:28]
    when _T_348 : @[proc.scala 258:82]
      fetch_en[tpu.io.tpu2cpu.flushTag] <= UInt<1>("h00") @[proc.scala 259:39]
      skip @[proc.scala 258:82]
    issuer.io.flushTag <= tpu.io.tpu2cpu.flushTag @[proc.scala 264:22]
    when tpu.io.tpu2cpu.flush : @[proc.scala 265:30]
      node _T_353 = eq(fetch.io.deq.bits.tag, tpu.io.tpu2cpu.flushTag) @[proc.scala 266:45]
      fetch.io.flush <= _T_353 @[proc.scala 266:20]
      issuer.io.flush <= tpu.io.tpu2cpu.flush @[proc.scala 267:21]
      node _T_354 = eq(decReg.io.deq.bits.tag, tpu.io.tpu2cpu.flushTag) @[proc.scala 268:47]
      decReg.io.flush <= _T_354 @[proc.scala 268:21]
      node _T_355 = eq(brReg.io.deq.bits.tag, tpu.io.tpu2cpu.flushTag) @[proc.scala 269:45]
      brReg.io.flush <= _T_355 @[proc.scala 269:20]
      node _T_356 = eq(exeReg.io.deq.bits.tag, tpu.io.tpu2cpu.flushTag) @[proc.scala 270:47]
      exeReg.io.flush <= _T_356 @[proc.scala 270:21]
      node _T_357 = eq(ldstUReg.io.deq.bits.tag, tpu.io.tpu2cpu.flushTag) @[proc.scala 271:51]
      ldstUReg.io.flush <= _T_357 @[proc.scala 271:23]
      skip @[proc.scala 265:30]
    else : @[proc.scala 272:15]
      fetch.io.flush <= UInt<1>("h00") @[proc.scala 273:20]
      issuer.io.flush <= UInt<1>("h00") @[proc.scala 274:21]
      decReg.io.flush <= UInt<1>("h00") @[proc.scala 275:21]
      brReg.io.flush <= UInt<1>("h00") @[proc.scala 276:20]
      exeReg.io.flush <= UInt<1>("h00") @[proc.scala 277:21]
      ldstUReg.io.flush <= UInt<1>("h00") @[proc.scala 278:23]
      skip @[proc.scala 272:15]
    tpu.io.cpu2tpuState.NZCV <= vec_pregs[tpu.io.tpu2cpu.freezeTag].NZCV @[proc.scala 283:23]
    tpu.io.cpu2tpuState.EL <= vec_pregs[tpu.io.tpu2cpu.freezeTag].EL @[proc.scala 283:23]
    tpu.io.cpu2tpuState.SP <= vec_pregs[tpu.io.tpu2cpu.freezeTag].SP @[proc.scala 283:23]
    tpu.io.cpu2tpuState.PC <= vec_pregs[tpu.io.tpu2cpu.freezeTag].PC @[proc.scala 283:23]
    tpu.io.rfile.rs1_data <= vec_rfile[0].rs1_data @[proc.scala 284:25]
    tpu.io.rfile.rs2_data <= vec_rfile[0].rs2_data @[proc.scala 285:25]
    when tpu.io.tpu2cpu.freeze : @[proc.scala 287:31]
      vec_rfile[tpu.io.tpu2cpu.freezeTag].wen <= tpu.io.rfile.wen @[proc.scala 289:41]
      vec_rfile[tpu.io.tpu2cpu.freezeTag].wdata <= tpu.io.rfile.wdata @[proc.scala 289:41]
      vec_rfile[tpu.io.tpu2cpu.freezeTag].waddr <= tpu.io.rfile.waddr @[proc.scala 289:41]
      tpu.io.rfile.rs2_data <= vec_rfile[tpu.io.tpu2cpu.freezeTag].rs2_data @[proc.scala 289:41]
      vec_rfile[tpu.io.tpu2cpu.freezeTag].rs2_addr <= tpu.io.rfile.rs2_addr @[proc.scala 289:41]
      tpu.io.rfile.rs1_data <= vec_rfile[tpu.io.tpu2cpu.freezeTag].rs1_data @[proc.scala 289:41]
      vec_rfile[tpu.io.tpu2cpu.freezeTag].rs1_addr <= tpu.io.rfile.rs1_addr @[proc.scala 289:41]
      vec_pregs[tpu.io.tpu2cpu.freezeTag].NZCV <= vec_pregs[tpu.io.tpu2cpu.freezeTag].NZCV @[proc.scala 291:41]
      vec_pregs[tpu.io.tpu2cpu.freezeTag].EL <= vec_pregs[tpu.io.tpu2cpu.freezeTag].EL @[proc.scala 291:41]
      vec_pregs[tpu.io.tpu2cpu.freezeTag].SP <= vec_pregs[tpu.io.tpu2cpu.freezeTag].SP @[proc.scala 291:41]
      vec_pregs[tpu.io.tpu2cpu.freezeTag].PC <= vec_pregs[tpu.io.tpu2cpu.freezeTag].PC @[proc.scala 291:41]
      when tpu.io.tpu2cpuStateReg.valid : @[proc.scala 292:40]
        node _T_388 = eq(tpu.io.tpu2cpuStateReg.bits, UInt<2>("h02")) @[proc.scala 293:40]
        when _T_388 : @[proc.scala 293:60]
          vec_pregs[tpu.io.tpu2cpu.freezeTag].PC <= tpu.io.tpu2cpuState.PC @[proc.scala 294:48]
          skip @[proc.scala 293:60]
        else : @[proc.scala 295:73]
          node _T_392 = eq(tpu.io.tpu2cpuStateReg.bits, UInt<2>("h03")) @[proc.scala 295:46]
          when _T_392 : @[proc.scala 295:73]
            vec_pregs[tpu.io.tpu2cpu.freezeTag].SP <= tpu.io.tpu2cpuState.SP @[proc.scala 296:48]
            vec_pregs[tpu.io.tpu2cpu.freezeTag].EL <= tpu.io.tpu2cpuState.EL @[proc.scala 297:48]
            vec_pregs[tpu.io.tpu2cpu.freezeTag].NZCV <= tpu.io.tpu2cpuState.NZCV @[proc.scala 298:50]
            skip @[proc.scala 295:73]
        skip @[proc.scala 292:40]
      skip @[proc.scala 287:31]
    
  module ProcAxiWrap : 
    input clock : Clock
    input reset : UInt<1>
    output io : {axiLite : {flip awaddr : UInt<4>, flip awprot : UInt<3>, flip awvalid : UInt<1>, awready : UInt<1>, flip wdata : UInt<32>, flip wstrb : UInt<4>, flip wvalid : UInt<1>, wready : UInt<1>, bresp : UInt<2>, bvalid : UInt<1>, flip bready : UInt<1>, flip araddr : UInt<4>, flip arprot : UInt<3>, flip arvalid : UInt<1>, arready : UInt<1>, rdata : UInt<32>, rresp : UInt<2>, rvalid : UInt<1>, flip rready : UInt<1>}, ppageBRAM : {flip CLK : UInt<1>, flip RST : UInt<1>, flip WE : UInt<1>, flip EN : UInt<1>, flip ADDR : UInt<10>, flip DI : UInt<36>, DO : UInt<36>}, stateBRAM : {flip CLK : UInt<1>, flip RST : UInt<1>, flip WE : UInt<1>, flip EN : UInt<1>, flip ADDR : UInt<10>, flip DI : UInt<36>, DO : UInt<36>}}
    
    inst regFile of AxiMemoryMappedRegFile @[ProcAxi.scala 22:24]
    regFile.clock <= clock
    regFile.reset <= reset
    inst proc of Proc @[ProcAxi.scala 23:20]
    proc.clock <= clock
    proc.reset <= reset
    io.ppageBRAM.DO <= proc.io.ppageBRAM.DO @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.DI <= io.ppageBRAM.DI @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.ADDR <= io.ppageBRAM.ADDR @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.EN <= io.ppageBRAM.EN @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.WE <= io.ppageBRAM.WE @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.RST <= io.ppageBRAM.RST @[ProcAxi.scala 66:16]
    proc.io.ppageBRAM.CLK <= io.ppageBRAM.CLK @[ProcAxi.scala 66:16]
    io.stateBRAM.DO <= proc.io.stateBRAM.DO @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.DI <= io.stateBRAM.DI @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.ADDR <= io.stateBRAM.ADDR @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.EN <= io.stateBRAM.EN @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.WE <= io.stateBRAM.WE @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.RST <= io.stateBRAM.RST @[ProcAxi.scala 67:16]
    proc.io.stateBRAM.CLK <= io.stateBRAM.CLK @[ProcAxi.scala 67:16]
    regFile.io.axiLite.rready <= io.axiLite.rready @[ProcAxi.scala 68:14]
    io.axiLite.rvalid <= regFile.io.axiLite.rvalid @[ProcAxi.scala 68:14]
    io.axiLite.rresp <= regFile.io.axiLite.rresp @[ProcAxi.scala 68:14]
    io.axiLite.rdata <= regFile.io.axiLite.rdata @[ProcAxi.scala 68:14]
    io.axiLite.arready <= regFile.io.axiLite.arready @[ProcAxi.scala 68:14]
    regFile.io.axiLite.arvalid <= io.axiLite.arvalid @[ProcAxi.scala 68:14]
    regFile.io.axiLite.arprot <= io.axiLite.arprot @[ProcAxi.scala 68:14]
    regFile.io.axiLite.araddr <= io.axiLite.araddr @[ProcAxi.scala 68:14]
    regFile.io.axiLite.bready <= io.axiLite.bready @[ProcAxi.scala 68:14]
    io.axiLite.bvalid <= regFile.io.axiLite.bvalid @[ProcAxi.scala 68:14]
    io.axiLite.bresp <= regFile.io.axiLite.bresp @[ProcAxi.scala 68:14]
    io.axiLite.wready <= regFile.io.axiLite.wready @[ProcAxi.scala 68:14]
    regFile.io.axiLite.wvalid <= io.axiLite.wvalid @[ProcAxi.scala 68:14]
    regFile.io.axiLite.wstrb <= io.axiLite.wstrb @[ProcAxi.scala 68:14]
    regFile.io.axiLite.wdata <= io.axiLite.wdata @[ProcAxi.scala 68:14]
    io.axiLite.awready <= regFile.io.axiLite.awready @[ProcAxi.scala 68:14]
    regFile.io.axiLite.awvalid <= io.axiLite.awvalid @[ProcAxi.scala 68:14]
    regFile.io.axiLite.awprot <= io.axiLite.awprot @[ProcAxi.scala 68:14]
    regFile.io.axiLite.awaddr <= io.axiLite.awaddr @[ProcAxi.scala 68:14]
    wire _T_78 : UInt<32>[4] @[ProcAxi.scala 71:35]
    _T_78[0] <= UInt<32>("h00") @[ProcAxi.scala 71:35]
    _T_78[1] <= UInt<32>("h00") @[ProcAxi.scala 71:35]
    _T_78[2] <= UInt<32>("h00") @[ProcAxi.scala 71:35]
    _T_78[3] <= UInt<32>("h00") @[ProcAxi.scala 71:35]
    wire regValues : UInt<32>[4]
    regValues[0] <= _T_78[0]
    regValues[1] <= _T_78[1]
    regValues[2] <= _T_78[2]
    regValues[3] <= _T_78[3]
    regFile.io.regsInput[0] <= regValues[0] @[ProcAxi.scala 74:24]
    regFile.io.regsInput[1] <= regValues[1] @[ProcAxi.scala 74:24]
    regFile.io.regsInput[2] <= regValues[2] @[ProcAxi.scala 74:24]
    regFile.io.regsInput[3] <= regValues[3] @[ProcAxi.scala 74:24]
    node _T_113 = bits(regFile.io.regsOutput[0], 31, 31) @[ProcAxi.scala 72:72]
    node fireReg = bits(_T_113, 0, 0) @[ProcAxi.scala 86:37]
    node fireTagReg = bits(regFile.io.regsOutput[0], 1, 0) @[ProcAxi.scala 72:72]
    proc.io.host2tpu.fire <= fireReg @[ProcAxi.scala 88:28]
    proc.io.host2tpu.fireTag <= fireTagReg @[ProcAxi.scala 89:28]
    wire _T_119 : UInt<1>[2] @[ProcAxi.scala 101:32]
    _T_119[0] <= UInt<1>("h00") @[ProcAxi.scala 101:32]
    _T_119[1] <= UInt<1>("h00") @[ProcAxi.scala 101:32]
    reg doneVec : UInt<1>[2], clock with : (reset => (reset, _T_119)) @[ProcAxi.scala 101:24]
    node _T_143 = cat(doneVec[1], doneVec[0]) @[ProcAxi.scala 102:31]
    node _T_144 = cat(UInt<1>("h00"), _T_143) @[Cat.scala 30:58]
    regValues[1] <= _T_144 @[ProcAxi.scala 102:11]
    when proc.io.host2tpu.done : @[ProcAxi.scala 104:31]
      doneVec[proc.io.host2tpu.doneTag] <= UInt<1>("h01") @[ProcAxi.scala 105:39]
      skip @[ProcAxi.scala 104:31]
    when fireReg : @[ProcAxi.scala 107:17]
      node _T_152 = bits(fireTagReg, 0, 0)
      doneVec[_T_152] <= UInt<1>("h00") @[ProcAxi.scala 108:25]
      skip @[ProcAxi.scala 107:17]
    
